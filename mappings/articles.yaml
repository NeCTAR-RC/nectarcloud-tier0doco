33:
  freshdesk:
    fd_attributes:
      article:
        art_type: 1
        bool_01: null
        created_at: '2015-09-03T01:28:10-04:00'
        datetime_01: null
        delta: true
        desc_un_html: " This guide describes launching a running instance (virtual\
          \ machine) with SSH login\nenabled. \n Preparation \n You need to create\
          \ a public/private key pair before you can use SSH to login to \nthe newly\
          \ created instance. The public key will be inserted into the instance and\n\
          the private key is used on your desktop/laptop. \n Windows User \n Use PuTTYgen\
          \ key generator to generate the required key pair. \n \n \n Download PuTTYgen\
          \ (puttygen.exe) from PuTTYgen download page \n \n \n Launch the PuTTYgen\
          \ application by double clicking the puttygen.exe \n \n \n The default settings\
          \ are fine for this case, click the 'Generate' button \n \n \n Save your\
          \ public key by clicking 'Save public key' button. You should give a\n name\
          \ that will help identify the key in the future \n \n \n Save your private\
          \ key by clicking 'Save private key' button. You should give\n a sensible\
          \ name for future reference. The passphrase can provide additional\n security,\
          \ though can be left empty. \n \n \n Linux/Mac User \n Type ssh-keygen in\
          \ the terminal and enter. This generates a public key\n(id_rsa.pub) and\
          \ a private key (id_rsa). By default, the two keys are\nlocated in ~/.ssh\
          \ \n Import Public Key \n The public key generated by Windows/Linux/Mac\
          \ are required to be imported into\nthe Nectar Cloud dashboard before use.\
          \ \n \n \n Log into the Cloud Dashboard \n \n \n Go to the Access and Security\
          \ tab and then to the Keypairs page \n \n \n Click 'Import Key Pair' button\
          \ \n \n \n Type in a keypair name and paste the contents of the public key.\
          \ For Windows\n users, open PuTTYgen and click 'Load' button to load the\
          \ related private key and\n copy/paste the public key contents. For Linux/Mac\
          \ user, type\n cat ~/.ssh/id_rsa.pub and copy/paste the public key contents\
          \ from the terminal\n output \n \n \n Nectar Cloud Dashboard \n Key pairs\
          \ can also be created directly through the Nectar Cloud Dashboard. \n \n\
          \ \n Login to the Cloud Dashboard \n \n \n Go to the Access and Security\
          \ tab and then to the Keypairs page \n \n \n Click the 'Create Key Pair'\
          \ button \n \n \n Type in a keypair name in the popup window and click the\
          \ 'Create Key Pair'\n button \n \n \n Save the private key into a directory\
          \ \n \n \n Notes: If you are running a Windows machine the SSH private key\
          \ will need to be\nconverted (use PuTTYgen for converting keys) \n \n \n\
          \ Open PuTTYgen \n \n \n Click 'Load' button to load the private key generated\
          \ by the Cloud Dashboard \n \n \n Click 'Export OpenSSH key' from 'Conversions'\
          \ menu \n \n \n Type a private key name and save \n \n \n Select an Image\
          \ \n You need to select an image to be used for your instance. The image\
          \ defines what\noperating system the instance uses and thus you need to\
          \ select an image based on\nyour needs. Nectar Cloud offers a list of official\
          \ images and for\nsimplicity, these images are recommended. You can find\
          \ a complete list of\nofficial images from Nectar image catalog. You can\
          \ also find all\navailable images from the Cloud Dashboard. \n \n \n Login\
          \ to the Cloud Dashboard \n \n \n Go to the Dashboard Images tab \n \n \n\
          \ For advanced users, you can also create your own images. Please refer\
          \ to\nthe openstack documentation for more details. \n Configure Instance\
          \ \n Before you can launch an instance, you need to configure the below\
          \ options: \n Details \n \n \n Instance Name: the name used by the dashboard\
          \ to identify the instance \n \n \n Flavour: the resources available for\
          \ the instance. It specifies the number of\n VCPUs, size of root disk, size\
          \ of ephemeral disk and size of RAM.\n Your allocated flavour or lesser\
          \ configurations can be selected (the\n default is m2.tiny; a 1 VCPU machine)\
          \ \n \n \n Instance Count: number of instance to launch (the default is\
          \ 1) \n \n \n Instance Boot Source: the media used to boot the instance.\
          \ You can boot from\n image, snapshot and volume (the default is boot from\
          \ image) \n \n \n Boot from image: Boot instance using an image \n \n \n\
          \ Boot from snapshot: Boot instance using a snapshot \n \n \n Boot from\
          \ volume: Boot instance from volume storage \n \n \n Image Name: the name\
          \ of an Image. This option is used when the Instance Boot\n Source is 'Boot\
          \ from image' \n \n \n Access & Security \n \n \n Key Pair: the public/private\
          \ keys used to log into the instance. See above to\n see how to create them.\
          \ This can't be added or changed after the instance is\n created. \n \n\
          \ \n Security Groups: add network access to your instances. This determines\
          \ what\n services can be accessed on the instance. You must select 'SSH'\
          \ Security Groups\n to allow you to login via SSH. If 'SSH' Security Groups\
          \ is not available, you\n can create it by going to Access & Security tab\
          \ on the right hand side of the\n Cloud Dashboard. The default Security\
          \ Group (no network access at first) is\n pre-selected \n \n \n To create\
          \ a Security Group: \n \n \n Login to the Cloud Dashboard \n \n \n Go to\
          \ the Access & Security tab \n \n \n Click 'Create Security Group' button\
          \ \n \n \n Give a name for the Security Group \n \n \n Give a meaningful\
          \ description for the Security Group \n \n \n Click 'Create Security Group'\
          \ button \n \n \n The newly created Security Group has no rules added (no\
          \ network access defined).\nTo add rules to a Security Group: \n \n \n Go\
          \ to the Access & Security tab \n \n \n Tick to select the Security Group\
          \ to add rules \n \n \n Click 'Manage Rules' button \n \n \n Click 'Add\
          \ Rule' button \n \n \n Select what type of Rule you want to create \n \n\
          \ \n Select from 'Open Port' the 'Port' option to open one single port,\
          \ or 'Port Range'\n to open a range of ports \n \n \n The 'Remote' option\
          \ specifies the source of the traffic to be allowed via this\n rule. You\
          \ may do so either in the form of an IP address block (CIDR) or via a\n\
          \ source group (Security Group). \n \n \n Click 'Add' button \n \n \n You\
          \ can also click 'Delete Rule' button to delete a rule \n Availability Zone\
          \ \n Select the Availability Zone for your instance. The Availability Zone\
          \ is the\nlocation for your instance. By default, the system will select\
          \ an available\nlocation for you. You can also click the 'Advanced' button\
          \ to select from a\ncomplete list of available Availability Zones \n Post-Creation\
          \ \n You can execute a customization script after you launch your instance.\
          \ You can\ndo any initialization and customization to your instance by using\
          \ this and it\nis executed only once at the first boot of your instance.\
          \ You can copy/paste\nyour script by selecting 'Direct Input' or you can\
          \ upload a script file. The\nscript can be a shell script or Cloud-init\
          \ script. \n Advanced Options \n You can choose whether you automaticly\
          \ or manually create the disk partition.\nIn most cases, you shouldn't change\
          \ the default. \n Notes: The above configuration options can be set in the\
          \ 'Launch Instance' popup\nwindow. To launch the popup window, you can go\
          \ to the Instances tab and\nclick 'Launch Instance' button. \n To get more\
          \ information about the terms used, please refer to\nthe glossary. \n Example\
          \ Launch of an Instance \n \n \n Login to the Cloud Dashboard \n \n \n Go\
          \ to Dashboard Instances tab \n \n \n Click 'Launch Instance' button \n\
          \ \n \n Type instance name \n \n \n Select a flavour. Flavour indicates\
          \ the specification of a instance. You can\n find more information in the\
          \ Flavour Details. \n \n \n Select an NeCTAR offical image (we suggest selecting\
          \ an Ubuntu image such as\n NeCTAR Ubuntu 14.10 (Utopic) amd64) \n \n \n\
          \ Click Access & Security tab \n \n \n Select a key pair created earlier\
          \ \n \n \n Select security groups to use. Tick 'ssh' and 'http' (these are\
          \ pre-defined\n groups in the default personal project) \n \n \n Click Availability\
          \ Zone \n \n \n Select the location of your instance or leave as unselected\
          \ (the system will\n auto select available location) \n \n \n Click launch\
          \ button and the page will change to the Instances Tab \n \n \n After a\
          \ while (usually a couple of minutes), your instance will become active\n\
          \ and will have an IP address. The IP address is available in the Instances\
          \ table\n on your Nectar Dashboard. \n \n \n The launch button begins Cloud\
          \ provisioning and initialisation of a running\ninstance from the selected\
          \ image and your configuration options. The instance\nwill normally pass\
          \ from status \"Build\" to \"Active\". Depending on your image\nsize and\
          \ cloud activity, the length of time required may vary. Your instance\n\
          will have a public IP address and be reachable according to the\nSecurity\
          \ Groups selected. \n You can connect to your new instance via\nAccessing\
          \ Your Instance \n If Launch is Unsuccessful \n You may get a message that\
          \ your quota has been exceeded or you have\ninsufficient resources. Check\
          \ the table to the right on the Launch Instance page\nfor the number of\
          \ instances you may run simultaneously, then check the\nInstances tab to\
          \ see how many Instances you already have running. You may have\nto terminate\
          \ a running Instance to free resources before you can launch another\n(see\
          \ Instance tab to Terminate). If you need more resources see the allocation\n\
          tab to apply for an increase. \n If the above doesn't apply to you, alternatively,\
          \ you can send an email to the\nCloud Help Desk. Please find how to lodge\
          \ a support ticket from\nNectar Support. "
        description: "<p>This guide describes launching a running instance (virtual\
          \ machine) with SSH login\nenabled.</p>\n<h2>Preparation</h2>\n<p>You need\
          \ to create a public/private key pair before you can use SSH to login to\
          \ \nthe newly created instance. The public key will be inserted into the\
          \ instance and\nthe private key is used on your desktop/laptop.</p>\n<h3>Windows\
          \ User</h3>\n<p>Use PuTTYgen key generator to generate the required key\
          \ pair.</p>\n<ul>\n<li>\n<p>Download PuTTYgen (<code>puttygen.exe</code>)\
          \ from <a href=\"http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html\"\
          >PuTTYgen download page</a></p>\n</li>\n<li>\n<p>Launch the PuTTYgen application\
          \ by double clicking the <code>puttygen.exe</code></p>\n</li>\n<li>\n<p>The\
          \ default settings are fine for this case, click the 'Generate' button</p>\n\
          </li>\n<li>\n<p>Save your public key by clicking 'Save public key' button.\
          \ You should give a\n name that will help identify the key in the future</p>\n\
          </li>\n<li>\n<p>Save your private key by clicking 'Save private key' button.\
          \ You should give\n a sensible name for future reference. The passphrase\
          \ can provide additional\n security, though can be left empty.</p>\n</li>\n\
          </ul>\n<h3>Linux/Mac User</h3>\n<p>Type <code>ssh-keygen</code> in the terminal\
          \ and enter. This generates a public key\n(<code>id_rsa.pub</code>) and\
          \ a private key (<code>id_rsa</code>). By default, the two keys are\nlocated\
          \ in <code>~/.ssh</code></p>\n<h3>Import Public Key</h3>\n<p>The public\
          \ key generated by Windows/Linux/Mac are required to be imported into\n\
          the Nectar Cloud dashboard before use.</p>\n<ul>\n<li>\n<p>Log into the\
          \ <a href=\"https://dashboard.rc.nectar.org.au\">Cloud Dashboard</a></p>\n\
          </li>\n<li>\n<p>Go to the Access and Security tab and then to the Keypairs\
          \ page</p>\n</li>\n<li>\n<p>Click 'Import Key Pair' button</p>\n</li>\n\
          <li>\n<p>Type in a keypair name and paste the contents of the public key.\
          \ For Windows\n users, open PuTTYgen and click 'Load' button to load the\
          \ related private key and\n copy/paste the public key contents. For Linux/Mac\
          \ user, type\n cat ~/.ssh/id_rsa.pub and copy/paste the public key contents\
          \ from the terminal\n output</p>\n</li>\n</ul>\n<h3>Nectar Cloud Dashboard</h3>\n\
          <p>Key pairs can also be created directly through the Nectar Cloud Dashboard.</p>\n\
          <ul>\n<li>\n<p>Login to the <a href=\"https://dashboard.rc.nectar.org.au\"\
          >Cloud Dashboard</a></p>\n</li>\n<li>\n<p>Go to the Access and Security\
          \ tab and then to the Keypairs page</p>\n</li>\n<li>\n<p>Click the 'Create\
          \ Key Pair' button</p>\n</li>\n<li>\n<p>Type in a keypair name in the popup\
          \ window and click the 'Create Key Pair'\n button</p>\n</li>\n<li>\n<p>Save\
          \ the private key into a directory</p>\n</li>\n</ul>\n<p>Notes: If you are\
          \ running a Windows machine the SSH private key will need to be\nconverted\
          \ (use PuTTYgen for converting keys)</p>\n<ul>\n<li>\n<p>Open PuTTYgen</p>\n\
          </li>\n<li>\n<p>Click 'Load' button to load the private key generated by\
          \ the Cloud Dashboard</p>\n</li>\n<li>\n<p>Click 'Export OpenSSH key' from\
          \ 'Conversions' menu</p>\n</li>\n<li>\n<p>Type a private key name and save</p>\n\
          </li>\n</ul>\n<h2>Select an Image</h2>\n<p>You need to select an image to\
          \ be used for your instance. The image defines what\noperating system the\
          \ instance uses and thus you need to select an image based on\nyour needs.\
          \ Nectar Cloud offers a list of official images and for\nsimplicity, these\
          \ images are recommended. You can find a complete list of\nofficial images\
          \ from <a href=\"https://wiki.rc.nectar.org.au/wiki/Image_Catalog\">Nectar\
          \ image catalog</a>. You can also find all\navailable images from the <a\
          \ href=\"https://dashboard.rc.nectar.org.au\">Cloud Dashboard</a>.</p>\n\
          <ul>\n<li>\n<p>Login to the <a href=\"https://dashboard.rc.nectar.org.au\"\
          >Cloud Dashboard</a></p>\n</li>\n<li>\n<p>Go to the Dashboard Images tab</p>\n\
          </li>\n</ul>\n<p>For advanced users, you can also create your own images.\
          \ Please refer to\nthe <a href=\"http://docs.openstack.org/image-guide/content/ch_creating_images_manually.html\"\
          >openstack documentation</a> for more details.</p>\n<h2>Configure Instance</h2>\n\
          <p>Before you can launch an instance, you need to configure the below options:</p>\n\
          <h3>Details</h3>\n<ul>\n<li>\n<p>Instance Name: the name used by the dashboard\
          \ to identify the instance</p>\n</li>\n<li>\n<p>Flavour: the resources available\
          \ for the instance. It specifies the number of\n VCPUs, size of root disk,\
          \ size of ephemeral disk and size of RAM.\n Your allocated flavour or lesser\
          \ configurations can be selected (the\n default is m2.tiny; a 1 VCPU machine)</p>\n\
          </li>\n<li>\n<p>Instance Count: number of instance to launch (the default\
          \ is 1)</p>\n</li>\n<li>\n<p>Instance Boot Source: the media used to boot\
          \ the instance. You can boot from\n image, snapshot and volume (the default\
          \ is boot from image)</p>\n</li>\n<li>\n<p>Boot from image: Boot instance\
          \ using an image</p>\n</li>\n<li>\n<p>Boot from snapshot: Boot instance\
          \ using a snapshot</p>\n</li>\n<li>\n<p>Boot from volume: Boot instance\
          \ from volume storage</p>\n</li>\n<li>\n<p>Image Name: the name of an Image.\
          \ This option is used when the Instance Boot\n Source is 'Boot from image'</p>\n\
          </li>\n</ul>\n<h4>Access &amp; Security</h4>\n<ul>\n<li>\n<p>Key Pair: the\
          \ public/private keys used to log into the instance. See above to\n see\
          \ how to create them. This can't be added or changed after the instance\
          \ is\n created.</p>\n</li>\n<li>\n<p>Security Groups: add network access\
          \ to your instances. This determines what\n services can be accessed on\
          \ the instance. You must select 'SSH' Security Groups\n to allow you to\
          \ login via SSH. If 'SSH' Security Groups is not available, you\n can create\
          \ it by going to Access &amp; Security tab on the right hand side of the\n\
          \ Cloud Dashboard. The default Security Group (no network access at first)\
          \ is\n pre-selected</p>\n</li>\n</ul>\n<p>To create a Security Group:</p>\n\
          <ul>\n<li>\n<p>Login to the <a href=\"https://dashboard.rc.nectar.org.au\"\
          >Cloud Dashboard</a></p>\n</li>\n<li>\n<p>Go to the Access &amp; Security\
          \ tab</p>\n</li>\n<li>\n<p>Click 'Create Security Group' button</p>\n</li>\n\
          <li>\n<p>Give a name for the Security Group</p>\n</li>\n<li>\n<p>Give a\
          \ meaningful description for the Security Group</p>\n</li>\n<li>\n<p>Click\
          \ 'Create Security Group' button</p>\n</li>\n</ul>\n<p>The newly created\
          \ Security Group has no rules added (no network access defined).\nTo add\
          \ rules to a Security Group:</p>\n<ul>\n<li>\n<p>Go to the Access &amp;\
          \ Security tab</p>\n</li>\n<li>\n<p>Tick to select the Security Group to\
          \ add rules</p>\n</li>\n<li>\n<p>Click 'Manage Rules' button</p>\n</li>\n\
          <li>\n<p>Click 'Add Rule' button</p>\n</li>\n<li>\n<p>Select what type of\
          \ Rule you want to create</p>\n</li>\n<li>\n<p>Select from 'Open Port' the\
          \ 'Port' option to open one single port, or 'Port Range'\n to open a range\
          \ of ports</p>\n</li>\n<li>\n<p>The 'Remote' option specifies the source\
          \ of the traffic to be allowed via this\n rule. You may do so either in\
          \ the form of an IP address block (CIDR) or via a\n source group (Security\
          \ Group).</p>\n</li>\n<li>\n<p>Click 'Add' button</p>\n</li>\n</ul>\n<p>You\
          \ can also click 'Delete Rule' button to delete a rule</p>\n<h3>Availability\
          \ Zone</h3>\n<p>Select the Availability Zone for your instance. The Availability\
          \ Zone is the\nlocation for your instance. By default, the system will select\
          \ an available\nlocation for you. You can also click the 'Advanced' button\
          \ to select from a\ncomplete list of available Availability Zones</p>\n\
          <h3>Post-Creation</h3>\n<p>You can execute a customization script after\
          \ you launch your instance. You can\ndo any initialization and customization\
          \ to your instance by using this and it\nis executed only once at the first\
          \ boot of your instance. You can copy/paste\nyour script by selecting 'Direct\
          \ Input' or you can upload a script file. The\nscript can be a shell script\
          \ or Cloud-init script.</p>\n<h3>Advanced Options</h3>\n<p>You can choose\
          \ whether you automaticly or manually create the disk partition.\nIn most\
          \ cases, you shouldn't change the default.</p>\n<p>Notes: The above configuration\
          \ options can be set in the 'Launch Instance' popup\nwindow. To launch the\
          \ popup window, you can go to the Instances tab and\nclick 'Launch Instance'\
          \ button.</p>\n<p>To get more information about the terms used, please refer\
          \ to\n<a href=\"http://bla.bla.bla\">the glossary</a>.</p>\n<h2>Example\
          \ Launch of an Instance</h2>\n<ul>\n<li>\n<p>Login to the <a href=\"https://dashboard.rc.nectar.org.au\"\
          >Cloud Dashboard</a></p>\n</li>\n<li>\n<p>Go to Dashboard Instances tab</p>\n\
          </li>\n<li>\n<p>Click 'Launch Instance' button</p>\n</li>\n<li>\n<p>Type\
          \ instance name</p>\n</li>\n<li>\n<p>Select a flavour. Flavour indicates\
          \ the specification of a instance. You can\n find more information in the\
          \ Flavour Details.</p>\n</li>\n<li>\n<p>Select an NeCTAR offical image (we\
          \ suggest selecting an Ubuntu image such as\n NeCTAR Ubuntu 14.10 (Utopic)\
          \ amd64)</p>\n</li>\n<li>\n<p>Click Access &amp; Security tab</p>\n</li>\n\
          <li>\n<p>Select a key pair created earlier</p>\n</li>\n<li>\n<p>Select security\
          \ groups to use. Tick 'ssh' and 'http' (these are pre-defined\n groups in\
          \ the default personal project)</p>\n</li>\n<li>\n<p>Click Availability\
          \ Zone</p>\n</li>\n<li>\n<p>Select the location of your instance or leave\
          \ as unselected (the system will\n auto select available location)</p>\n\
          </li>\n<li>\n<p>Click launch button and the page will change to the Instances\
          \ Tab</p>\n</li>\n<li>\n<p>After a while (usually a couple of minutes),\
          \ your instance will become active\n and will have an IP address. The IP\
          \ address is available in the Instances table\n on your Nectar Dashboard.</p>\n\
          </li>\n</ul>\n<p>The launch button begins Cloud provisioning and initialisation\
          \ of a running\ninstance from the selected image and your configuration\
          \ options. The instance\nwill normally pass from status \"Build\" to \"\
          Active\". Depending on your image\nsize and cloud activity, the length of\
          \ time required may vary. Your instance\nwill have a public IP address and\
          \ be reachable according to the\nSecurity Groups selected.</p>\n<p>You can\
          \ connect to your new instance via\n<a href=\"http://bla.bla.bla\">Accessing\
          \ Your Instance</a></p>\n<h2>If Launch is Unsuccessful</h2>\n<p>You may\
          \ get a message that your quota has been exceeded or you have\ninsufficient\
          \ resources. Check the table to the right on the Launch Instance page\n\
          for the number of instances you may run simultaneously, then check the\n\
          Instances tab to see how many Instances you already have running. You may\
          \ have\nto terminate a running Instance to free resources before you can\
          \ launch another\n(see Instance tab to Terminate). If you need more resources\
          \ see the allocation\ntab to apply for an increase.</p>\n<p>If the above\
          \ doesn't apply to you, alternatively, you can send an email to the\nCloud\
          \ Help Desk. Please find how to lodge a support ticket from\n<a href=\"\
          https://support.rc.nectar.org.au/docs/support\">Nectar Support</a>.</p>"
        folder:
          category_id: 6000122278
          created_at: '2015-09-03T01:28:04-04:00'
          customer_folders: []
          description: Cloud Basics
          id: 6000190150
          is_default: false
          language_id: 6
          name: Cloud Basics
          parent_id: 6000190150
          position: 2
          updated_at: '2015-09-03T01:28:04-04:00'
          visibility: 1
        folder_id: 6000190150
        hits: 0
        id: 6000055376
        int_01: null
        int_02: null
        int_03: null
        language_id: 6
        modified_at: '2015-09-03T01:28:10-04:00'
        modified_by: null
        outdated: false
        parent_id: 6000055376
        position: 1
        seo_data: {}
        status: 2
        string_01: null
        string_02: null
        tags: []
        thumbs_down: 0
        thumbs_up: 0
        title: Launching Virtual Machines
        updated_at: '2015-09-03T01:28:10-04:00'
        user_id: 6002464727
  html: "<p>This guide describes launching a running instance (virtual machine) with\
    \ SSH login\nenabled.</p>\n<h2>Preparation</h2>\n<p>You need to create a public/private\
    \ key pair before you can use SSH to login to \nthe newly created instance. The\
    \ public key will be inserted into the instance and\nthe private key is used on\
    \ your desktop/laptop.</p>\n<h3>Windows User</h3>\n<p>Use PuTTYgen key generator\
    \ to generate the required key pair.</p>\n<ul>\n<li>\n<p>Download PuTTYgen (<code>puttygen.exe</code>)\
    \ from <a href=\"http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html\"\
    >PuTTYgen download page</a></p>\n</li>\n<li>\n<p>Launch the PuTTYgen application\
    \ by double clicking the <code>puttygen.exe</code></p>\n</li>\n<li>\n<p>The default\
    \ settings are fine for this case, click the 'Generate' button</p>\n</li>\n<li>\n\
    <p>Save your public key by clicking 'Save public key' button. You should give\
    \ a\n name that will help identify the key in the future</p>\n</li>\n<li>\n<p>Save\
    \ your private key by clicking 'Save private key' button. You should give\n a\
    \ sensible name for future reference. The passphrase can provide additional\n\
    \ security, though can be left empty.</p>\n</li>\n</ul>\n<h3>Linux/Mac User</h3>\n\
    <p>Type <code>ssh-keygen</code> in the terminal and enter. This generates a public\
    \ key\n(<code>id_rsa.pub</code>) and a private key (<code>id_rsa</code>). By default,\
    \ the two keys are\nlocated in <code>~/.ssh</code></p>\n<h3>Import Public Key</h3>\n\
    <p>The public key generated by Windows/Linux/Mac are required to be imported into\n\
    the Nectar Cloud dashboard before use.</p>\n<ul>\n<li>\n<p>Log into the <a href=\"\
    https://dashboard.rc.nectar.org.au\">Cloud Dashboard</a></p>\n</li>\n<li>\n<p>Go\
    \ to the Access and Security tab and then to the Keypairs page</p>\n</li>\n<li>\n\
    <p>Click 'Import Key Pair' button</p>\n</li>\n<li>\n<p>Type in a keypair name\
    \ and paste the contents of the public key. For Windows\n users, open PuTTYgen\
    \ and click 'Load' button to load the related private key and\n copy/paste the\
    \ public key contents. For Linux/Mac user, type\n cat ~/.ssh/id_rsa.pub and copy/paste\
    \ the public key contents from the terminal\n output</p>\n</li>\n</ul>\n<h3>Nectar\
    \ Cloud Dashboard</h3>\n<p>Key pairs can also be created directly through the\
    \ Nectar Cloud Dashboard.</p>\n<ul>\n<li>\n<p>Login to the <a href=\"https://dashboard.rc.nectar.org.au\"\
    >Cloud Dashboard</a></p>\n</li>\n<li>\n<p>Go to the Access and Security tab and\
    \ then to the Keypairs page</p>\n</li>\n<li>\n<p>Click the 'Create Key Pair' button</p>\n\
    </li>\n<li>\n<p>Type in a keypair name in the popup window and click the 'Create\
    \ Key Pair'\n button</p>\n</li>\n<li>\n<p>Save the private key into a directory</p>\n\
    </li>\n</ul>\n<p>Notes: If you are running a Windows machine the SSH private key\
    \ will need to be\nconverted (use PuTTYgen for converting keys)</p>\n<ul>\n<li>\n\
    <p>Open PuTTYgen</p>\n</li>\n<li>\n<p>Click 'Load' button to load the private\
    \ key generated by the Cloud Dashboard</p>\n</li>\n<li>\n<p>Click 'Export OpenSSH\
    \ key' from 'Conversions' menu</p>\n</li>\n<li>\n<p>Type a private key name and\
    \ save</p>\n</li>\n</ul>\n<h2>Select an Image</h2>\n<p>You need to select an image\
    \ to be used for your instance. The image defines what\noperating system the instance\
    \ uses and thus you need to select an image based on\nyour needs. Nectar Cloud\
    \ offers a list of official images and for\nsimplicity, these images are recommended.\
    \ You can find a complete list of\nofficial images from <a href=\"https://wiki.rc.nectar.org.au/wiki/Image_Catalog\"\
    >Nectar image catalog</a>. You can also find all\navailable images from the <a\
    \ href=\"https://dashboard.rc.nectar.org.au\">Cloud Dashboard</a>.</p>\n<ul>\n\
    <li>\n<p>Login to the <a href=\"https://dashboard.rc.nectar.org.au\">Cloud Dashboard</a></p>\n\
    </li>\n<li>\n<p>Go to the Dashboard Images tab</p>\n</li>\n</ul>\n<p>For advanced\
    \ users, you can also create your own images. Please refer to\nthe <a href=\"\
    http://docs.openstack.org/image-guide/content/ch_creating_images_manually.html\"\
    >openstack documentation</a> for more details.</p>\n<h2>Configure Instance</h2>\n\
    <p>Before you can launch an instance, you need to configure the below options:</p>\n\
    <h3>Details</h3>\n<ul>\n<li>\n<p>Instance Name: the name used by the dashboard\
    \ to identify the instance</p>\n</li>\n<li>\n<p>Flavour: the resources available\
    \ for the instance. It specifies the number of\n VCPUs, size of root disk, size\
    \ of ephemeral disk and size of RAM.\n Your allocated flavour or lesser configurations\
    \ can be selected (the\n default is m2.tiny; a 1 VCPU machine)</p>\n</li>\n<li>\n\
    <p>Instance Count: number of instance to launch (the default is 1)</p>\n</li>\n\
    <li>\n<p>Instance Boot Source: the media used to boot the instance. You can boot\
    \ from\n image, snapshot and volume (the default is boot from image)</p>\n</li>\n\
    <li>\n<p>Boot from image: Boot instance using an image</p>\n</li>\n<li>\n<p>Boot\
    \ from snapshot: Boot instance using a snapshot</p>\n</li>\n<li>\n<p>Boot from\
    \ volume: Boot instance from volume storage</p>\n</li>\n<li>\n<p>Image Name: the\
    \ name of an Image. This option is used when the Instance Boot\n Source is 'Boot\
    \ from image'</p>\n</li>\n</ul>\n<h4>Access &amp; Security</h4>\n<ul>\n<li>\n\
    <p>Key Pair: the public/private keys used to log into the instance. See above\
    \ to\n see how to create them. This can't be added or changed after the instance\
    \ is\n created.</p>\n</li>\n<li>\n<p>Security Groups: add network access to your\
    \ instances. This determines what\n services can be accessed on the instance.\
    \ You must select 'SSH' Security Groups\n to allow you to login via SSH. If 'SSH'\
    \ Security Groups is not available, you\n can create it by going to Access &amp;\
    \ Security tab on the right hand side of the\n Cloud Dashboard. The default Security\
    \ Group (no network access at first) is\n pre-selected</p>\n</li>\n</ul>\n<p>To\
    \ create a Security Group:</p>\n<ul>\n<li>\n<p>Login to the <a href=\"https://dashboard.rc.nectar.org.au\"\
    >Cloud Dashboard</a></p>\n</li>\n<li>\n<p>Go to the Access &amp; Security tab</p>\n\
    </li>\n<li>\n<p>Click 'Create Security Group' button</p>\n</li>\n<li>\n<p>Give\
    \ a name for the Security Group</p>\n</li>\n<li>\n<p>Give a meaningful description\
    \ for the Security Group</p>\n</li>\n<li>\n<p>Click 'Create Security Group' button</p>\n\
    </li>\n</ul>\n<p>The newly created Security Group has no rules added (no network\
    \ access defined).\nTo add rules to a Security Group:</p>\n<ul>\n<li>\n<p>Go to\
    \ the Access &amp; Security tab</p>\n</li>\n<li>\n<p>Tick to select the Security\
    \ Group to add rules</p>\n</li>\n<li>\n<p>Click 'Manage Rules' button</p>\n</li>\n\
    <li>\n<p>Click 'Add Rule' button</p>\n</li>\n<li>\n<p>Select what type of Rule\
    \ you want to create</p>\n</li>\n<li>\n<p>Select from 'Open Port' the 'Port' option\
    \ to open one single port, or 'Port Range'\n to open a range of ports</p>\n</li>\n\
    <li>\n<p>The 'Remote' option specifies the source of the traffic to be allowed\
    \ via this\n rule. You may do so either in the form of an IP address block (CIDR)\
    \ or via a\n source group (Security Group).</p>\n</li>\n<li>\n<p>Click 'Add' button</p>\n\
    </li>\n</ul>\n<p>You can also click 'Delete Rule' button to delete a rule</p>\n\
    <h3>Availability Zone</h3>\n<p>Select the Availability Zone for your instance.\
    \ The Availability Zone is the\nlocation for your instance. By default, the system\
    \ will select an available\nlocation for you. You can also click the 'Advanced'\
    \ button to select from a\ncomplete list of available Availability Zones</p>\n\
    <h3>Post-Creation</h3>\n<p>You can execute a customization script after you launch\
    \ your instance. You can\ndo any initialization and customization to your instance\
    \ by using this and it\nis executed only once at the first boot of your instance.\
    \ You can copy/paste\nyour script by selecting 'Direct Input' or you can upload\
    \ a script file. The\nscript can be a shell script or Cloud-init script.</p>\n\
    <h3>Advanced Options</h3>\n<p>You can choose whether you automaticly or manually\
    \ create the disk partition.\nIn most cases, you shouldn't change the default.</p>\n\
    <p>Notes: The above configuration options can be set in the 'Launch Instance'\
    \ popup\nwindow. To launch the popup window, you can go to the Instances tab and\n\
    click 'Launch Instance' button.</p>\n<p>To get more information about the terms\
    \ used, please refer to\n<a href=\"http://bla.bla.bla\">the glossary</a>.</p>\n\
    <h2>Example Launch of an Instance</h2>\n<ul>\n<li>\n<p>Login to the <a href=\"\
    https://dashboard.rc.nectar.org.au\">Cloud Dashboard</a></p>\n</li>\n<li>\n<p>Go\
    \ to Dashboard Instances tab</p>\n</li>\n<li>\n<p>Click 'Launch Instance' button</p>\n\
    </li>\n<li>\n<p>Type instance name</p>\n</li>\n<li>\n<p>Select a flavour. Flavour\
    \ indicates the specification of a instance. You can\n find more information in\
    \ the Flavour Details.</p>\n</li>\n<li>\n<p>Select an NeCTAR offical image (we\
    \ suggest selecting an Ubuntu image such as\n NeCTAR Ubuntu 14.10 (Utopic) amd64)</p>\n\
    </li>\n<li>\n<p>Click Access &amp; Security tab</p>\n</li>\n<li>\n<p>Select a\
    \ key pair created earlier</p>\n</li>\n<li>\n<p>Select security groups to use.\
    \ Tick 'ssh' and 'http' (these are pre-defined\n groups in the default personal\
    \ project)</p>\n</li>\n<li>\n<p>Click Availability Zone</p>\n</li>\n<li>\n<p>Select\
    \ the location of your instance or leave as unselected (the system will\n auto\
    \ select available location)</p>\n</li>\n<li>\n<p>Click launch button and the\
    \ page will change to the Instances Tab</p>\n</li>\n<li>\n<p>After a while (usually\
    \ a couple of minutes), your instance will become active\n and will have an IP\
    \ address. The IP address is available in the Instances table\n on your Nectar\
    \ Dashboard.</p>\n</li>\n</ul>\n<p>The launch button begins Cloud provisioning\
    \ and initialisation of a running\ninstance from the selected image and your configuration\
    \ options. The instance\nwill normally pass from status \"Build\" to \"Active\"\
    . Depending on your image\nsize and cloud activity, the length of time required\
    \ may vary. Your instance\nwill have a public IP address and be reachable according\
    \ to the\nSecurity Groups selected.</p>\n<p>You can connect to your new instance\
    \ via\n<a href=\"http://bla.bla.bla\">Accessing Your Instance</a></p>\n<h2>If\
    \ Launch is Unsuccessful</h2>\n<p>You may get a message that your quota has been\
    \ exceeded or you have\ninsufficient resources. Check the table to the right on\
    \ the Launch Instance page\nfor the number of instances you may run simultaneously,\
    \ then check the\nInstances tab to see how many Instances you already have running.\
    \ You may have\nto terminate a running Instance to free resources before you can\
    \ launch another\n(see Instance tab to Terminate). If you need more resources\
    \ see the allocation\ntab to apply for an increase.</p>\n<p>If the above doesn't\
    \ apply to you, alternatively, you can send an email to the\nCloud Help Desk.\
    \ Please find how to lodge a support ticket from\n<a href=\"https://support.rc.nectar.org.au/docs/support\"\
    >Nectar Support</a>.</p>"
  parent: 21
  sha1: be39e3d6aae9fc279e47f9ff1b7fe26e4b07ef99
  title: Launching Virtual Machines
34:
  freshdesk:
    fd_attributes:
      article:
        art_type: 1
        bool_01: null
        created_at: '2015-09-03T01:28:12-04:00'
        datetime_01: null
        delta: true
        desc_un_html: " If you work or study at an Australian University you will\
          \ be able to login to\nthe Nectar Cloud using your institutional credentials.\
          \ Access to the Nectar\nCloud is enabled by the Australian Access Federation\
          \ (AAF). \n AAF Authentication \n Your AAF credentials are the same as your\
          \ institutional username and password.\nTo check that your organisation\
          \ is a member of the AAF check the\ncomplete AAF member list here. \n If\
          \ your institution is not a member of the AAF, talk to your local IT team\n\
          to arrange access. \n Logging in \n Once you have obtained your AAF credentials,\
          \ you can follow these steps to\nlogin to NeCTAR Dashboard: \n \n \n Click\
          \ 'log in' \n \n \n In dropdown list, select the name of your research institution\
          \ \n \n \n Click 'Select' \n \n \n Wait until the selected institutional\
          \ login page appears \n \n \n Type in your username and password \n \n \n\
          \ Click 'Continue' \n \n \n If you have any issues contact the Nectar help\
          \ team. \n API Credentials \n The first time you login to the dashboard\
          \ a NeCTAR Cloud account is created\nfor you. You will need this account\
          \ if you want to access the Cloud outside of\nthe dashboard through the\
          \ API. The API is a programming interface providing\nmore flexibility of\
          \ utilising the power of the cloud. \n There are two types of API credentials\
          \ and which one you use will depend on\nthe API client you use. The below\
          \ section only works for Linux/Unix users. \n Openstack API \n It requires\
          \ 6 variables to be set in order to authenticate against\nthe NeCTAR Cloud:\
          \ \n \n \n OS_AUTH_URL: authentication URL \n \n \n OS_TENANT_ID: tenant\
          \ id \n \n \n OS_TENANT_NAME: tenant name (optional) \n \n \n OS_USERNAME:\
          \ username \n \n \n OS_PASSWORD: password \n \n \n OS_REGION_NAME:  location\
          \ of your configuration (optional) \n \n \n You can set these variables\
          \ through\nenvironment variables. For example: \n OS_AUTH_URL: URL \n OS_TENANT_NAME=my_science_project\
          \ \n OS_USERNAME=clouduser@example.edu.au \n OS_PASSWORD=XXXXXX \n If you\
          \ are a member of multiple projects (tenants) you may also want to set:\n\
          OS_NO_CACHE=True \n The Dashboard provides a convenient way to help you\
          \ setting up these variables\nvia a shell script file. You can follow the\
          \ below steps to obtain it: \n \n \n Go To Dashboard \n \n \n Login to dashboard\
          \ via AAF Credentials \n \n \n Click 'Access & Security' \n \n \n Click\
          \ 'API Access' tap \n \n \n Click 'Download OpenStack RC File' \n \n \n\
          \ Save the shell script file in your local computer/laptop \n \n \n The\
          \ password is not automatically set for you for security reason. You can\
          \ also\nobtain the API password from NeCTAR cloud. Please follow the below\
          \ steps to get\nthe password: \n \n \n Go To Dashboard \n \n \n Login to\
          \ dashboard via AAF Credentials \n \n \n On the right top of the page, click\
          \ drop down list containing your email\n address \n \n \n Click 'Settings'\
          \ \n \n \n Click 'Reset Password' button \n \n \n The copy/paste the password\
          \ appeared on the screen to a text file, then save\n the text file in your\
          \ local computer/laptop. \n \n \n To execute the shell script file, type\
          \ source filename, then enter the password\nyou obtained earlier from NeCTAR\
          \ dashboard. \n Now, you are authenticated and please refer to\nrelevant\
          \ API document to see how to interact with the\nNeCTAR Cloud. \n EC2 API\
          \ \n There are 2 variables needed when using EC2 API clients: \n \n \n EC2_ACCESS_KEY:\
          \ username \n \n \n EC2_SECRET_KEY: password \n \n \n You can obtain these\
          \ 2 variables via the NeTCAR Dashboard: \n \n \n Go To Dashboard \n \n \n\
          \ Login to dashboard via AAF Credentials \n \n \n Click 'Access & Security'\
          \ \n \n \n Click 'API Access' tap \n \n \n Click 'Download EC2 Credentials'\
          \ \n \n \n Save the zip file in your local computer/laptop \n \n \n Unzip\
          \ the saved zip file and open ec2rc.sh file via a text editor \n \n \n You\
          \ can find EC2_ACCESS_KEY and EC2_SECRET_KEY in the file \n \n \n Login\
          \ Problems \n If your login details are rejected first\ncheck your Research\
          \ Institution is a member of the AAF. \n If your research institution is\
          \ a member but you still can't login, you can\ncontact IT Service department\
          \ of your own research institution.\nThey can provide support for issues\
          \ with your login credentials. Alternatively,\nyou can email to support@rc.nectar.org.au. "
        description: "<p>If you work or study at an Australian University you will\
          \ be able to login to\nthe Nectar Cloud using your institutional credentials.\
          \ Access to the Nectar\nCloud is enabled by the <a href=\"http://aaf.edu.au/\"\
          >Australian Access Federation (AAF)</a>.</p>\n<h2>AAF Authentication</h2>\n\
          <p>Your AAF credentials are the same as your institutional username and\
          \ password.\nTo check that your organisation is a member of the AAF check\
          \ the\n<a href=\"http://aaf.edu.au/subscribe/subscribers/\">complete AAF\
          \ member list here</a>.</p>\n<p>If your institution is not a member of the\
          \ AAF, talk to your local IT team\nto arrange access.</p>\n<h2>Logging in</h2>\n\
          <p>Once you have obtained your AAF credentials, you can follow these steps\
          \ to\nlogin to <a href=\"https://dashboard.rc.nectar.org.au/\">NeCTAR Dashboard</a>:</p>\n\
          <ul>\n<li>\n<p>Click 'log in'</p>\n</li>\n<li>\n<p>In dropdown list, select\
          \ the name of your research institution</p>\n</li>\n<li>\n<p>Click 'Select'</p>\n\
          </li>\n<li>\n<p>Wait until the selected institutional login page appears</p>\n\
          </li>\n<li>\n<p>Type in your username and password</p>\n</li>\n<li>\n<p>Click\
          \ 'Continue'</p>\n</li>\n</ul>\n<p>If you have any issues contact the Nectar\
          \ help team.</p>\n<h2>API Credentials</h2>\n<p>The first time you login\
          \ to the dashboard a NeCTAR Cloud account is created\nfor you. You will\
          \ need this account if you want to access the Cloud outside of\nthe dashboard\
          \ through the API. The API is a programming interface providing\nmore flexibility\
          \ of utilising the power of the cloud.</p>\n<p>There are two types of API\
          \ credentials and which one you use will depend on\nthe API client you use.\
          \ The below section only works for Linux/Unix users.</p>\n<h3>Openstack\
          \ API</h3>\n<p>It requires 6 variables to be set in order to authenticate\
          \ against\nthe NeCTAR Cloud:</p>\n<ul>\n<li>\n<p>OS_AUTH_URL: authentication\
          \ URL</p>\n</li>\n<li>\n<p>OS_TENANT_ID: tenant id</p>\n</li>\n<li>\n<p>OS_TENANT_NAME:\
          \ tenant name (optional)</p>\n</li>\n<li>\n<p>OS_USERNAME: username</p>\n\
          </li>\n<li>\n<p>OS_PASSWORD: password</p>\n</li>\n<li>\n<p>OS_REGION_NAME:\
          \  location of your configuration (optional)</p>\n</li>\n</ul>\n<p>You can\
          \ set these variables through\n<a href=\"https://www.digitalocean.com/community/tutorials/how-to-read-and-set-environmental-and-shell-variables-on-a-linux-vps\"\
          >environment variables</a>. For example:</p>\n<p>OS_AUTH_URL: URL</p>\n\
          <p>OS_TENANT_NAME=my_science_project</p>\n<p>OS_USERNAME=clouduser@example.edu.au</p>\n\
          <p>OS_PASSWORD=XXXXXX</p>\n<p>If you are a member of multiple projects (tenants)\
          \ you may also want to set:\nOS_NO_CACHE=True</p>\n<p>The Dashboard provides\
          \ a convenient way to help you setting up these variables\nvia a shell script\
          \ file. You can follow the below steps to obtain it:</p>\n<ul>\n<li>\n<p>Go\
          \ To <a href=\"https://dashboard.rc.nectar.org.au\">Dashboard</a></p>\n\
          </li>\n<li>\n<p>Login to dashboard via AAF Credentials</p>\n</li>\n<li>\n\
          <p>Click 'Access &amp; Security'</p>\n</li>\n<li>\n<p>Click 'API Access'\
          \ tap</p>\n</li>\n<li>\n<p>Click 'Download OpenStack RC File'</p>\n</li>\n\
          <li>\n<p>Save the shell script file in your local computer/laptop</p>\n\
          </li>\n</ul>\n<p>The password is not automatically set for you for security\
          \ reason. You can also\nobtain the API password from NeCTAR cloud. Please\
          \ follow the below steps to get\nthe password:</p>\n<ul>\n<li>\n<p>Go To\
          \ <a href=\"https://dashboard.rc.nectar.org.au\">Dashboard</a></p>\n</li>\n\
          <li>\n<p>Login to dashboard via AAF Credentials</p>\n</li>\n<li>\n<p>On\
          \ the right top of the page, click drop down list containing your email\n\
          \ address</p>\n</li>\n<li>\n<p>Click 'Settings'</p>\n</li>\n<li>\n<p>Click\
          \ 'Reset Password' button</p>\n</li>\n<li>\n<p>The copy/paste the password\
          \ appeared on the screen to a text file, then save\n the text file in your\
          \ local computer/laptop.</p>\n</li>\n</ul>\n<p>To execute the shell script\
          \ file, type source filename, then enter the password\nyou obtained earlier\
          \ from NeCTAR dashboard.</p>\n<p>Now, you are authenticated and please refer\
          \ to\n<a href=\"http://developer.openstack.org/api-ref.html\">relevant API\
          \ document</a> to see how to interact with the\nNeCTAR Cloud.</p>\n<h3>EC2\
          \ API</h3>\n<p>There are 2 variables needed when using EC2 API clients:</p>\n\
          <ul>\n<li>\n<p>EC2_ACCESS_KEY: username</p>\n</li>\n<li>\n<p>EC2_SECRET_KEY:\
          \ password</p>\n</li>\n</ul>\n<p>You can obtain these 2 variables via the\
          \ NeTCAR Dashboard:</p>\n<ul>\n<li>\n<p>Go To <a href=\"https://dashboard.rc.nectar.org.au\"\
          >Dashboard</a></p>\n</li>\n<li>\n<p>Login to dashboard via AAF Credentials</p>\n\
          </li>\n<li>\n<p>Click 'Access &amp; Security'</p>\n</li>\n<li>\n<p>Click\
          \ 'API Access' tap</p>\n</li>\n<li>\n<p>Click 'Download EC2 Credentials'</p>\n\
          </li>\n<li>\n<p>Save the zip file in your local computer/laptop</p>\n</li>\n\
          <li>\n<p>Unzip the saved zip file and open ec2rc.sh file via a text editor</p>\n\
          </li>\n<li>\n<p>You can find EC2_ACCESS_KEY and EC2_SECRET_KEY in the file</p>\n\
          </li>\n</ul>\n<h2>Login Problems</h2>\n<p>If your login details are rejected\
          \ first\n<a href=\"http://aaf.edu.au/subscribe/subscribers/\">check your\
          \ Research Institution is a member of the AAF</a>.</p>\n<p>If your research\
          \ institution is a member but you still can't login, you can\ncontact IT\
          \ Service department of your own research institution.\nThey can provide\
          \ support for issues with your login credentials. Alternatively,\nyou can\
          \ email to support@rc.nectar.org.au.</p>"
        folder:
          category_id: 6000122278
          created_at: '2015-09-03T01:28:04-04:00'
          customer_folders: []
          description: Cloud Basics
          id: 6000190150
          is_default: false
          language_id: 6
          name: Cloud Basics
          parent_id: 6000190150
          position: 2
          updated_at: '2015-09-03T01:28:04-04:00'
          visibility: 1
        folder_id: 6000190150
        hits: 0
        id: 6000055377
        int_01: null
        int_02: null
        int_03: null
        language_id: 6
        modified_at: '2015-09-03T01:28:12-04:00'
        modified_by: null
        outdated: false
        parent_id: 6000055377
        position: 2
        seo_data: {}
        status: 2
        string_01: null
        string_02: null
        tags: []
        thumbs_down: 0
        thumbs_up: 0
        title: Getting an account
        updated_at: '2015-09-03T01:28:12-04:00'
        user_id: 6002464727
  html: "<p>If you work or study at an Australian University you will be able to login\
    \ to\nthe Nectar Cloud using your institutional credentials. Access to the Nectar\n\
    Cloud is enabled by the <a href=\"http://aaf.edu.au/\">Australian Access Federation\
    \ (AAF)</a>.</p>\n<h2>AAF Authentication</h2>\n<p>Your AAF credentials are the\
    \ same as your institutional username and password.\nTo check that your organisation\
    \ is a member of the AAF check the\n<a href=\"http://aaf.edu.au/subscribe/subscribers/\"\
    >complete AAF member list here</a>.</p>\n<p>If your institution is not a member\
    \ of the AAF, talk to your local IT team\nto arrange access.</p>\n<h2>Logging\
    \ in</h2>\n<p>Once you have obtained your AAF credentials, you can follow these\
    \ steps to\nlogin to <a href=\"https://dashboard.rc.nectar.org.au/\">NeCTAR Dashboard</a>:</p>\n\
    <ul>\n<li>\n<p>Click 'log in'</p>\n</li>\n<li>\n<p>In dropdown list, select the\
    \ name of your research institution</p>\n</li>\n<li>\n<p>Click 'Select'</p>\n\
    </li>\n<li>\n<p>Wait until the selected institutional login page appears</p>\n\
    </li>\n<li>\n<p>Type in your username and password</p>\n</li>\n<li>\n<p>Click\
    \ 'Continue'</p>\n</li>\n</ul>\n<p>If you have any issues contact the Nectar help\
    \ team.</p>\n<h2>API Credentials</h2>\n<p>The first time you login to the dashboard\
    \ a NeCTAR Cloud account is created\nfor you. You will need this account if you\
    \ want to access the Cloud outside of\nthe dashboard through the API. The API\
    \ is a programming interface providing\nmore flexibility of utilising the power\
    \ of the cloud.</p>\n<p>There are two types of API credentials and which one you\
    \ use will depend on\nthe API client you use. The below section only works for\
    \ Linux/Unix users.</p>\n<h3>Openstack API</h3>\n<p>It requires 6 variables to\
    \ be set in order to authenticate against\nthe NeCTAR Cloud:</p>\n<ul>\n<li>\n\
    <p>OS_AUTH_URL: authentication URL</p>\n</li>\n<li>\n<p>OS_TENANT_ID: tenant id</p>\n\
    </li>\n<li>\n<p>OS_TENANT_NAME: tenant name (optional)</p>\n</li>\n<li>\n<p>OS_USERNAME:\
    \ username</p>\n</li>\n<li>\n<p>OS_PASSWORD: password</p>\n</li>\n<li>\n<p>OS_REGION_NAME:\
    \  location of your configuration (optional)</p>\n</li>\n</ul>\n<p>You can set\
    \ these variables through\n<a href=\"https://www.digitalocean.com/community/tutorials/how-to-read-and-set-environmental-and-shell-variables-on-a-linux-vps\"\
    >environment variables</a>. For example:</p>\n<p>OS_AUTH_URL: URL</p>\n<p>OS_TENANT_NAME=my_science_project</p>\n\
    <p>OS_USERNAME=clouduser@example.edu.au</p>\n<p>OS_PASSWORD=XXXXXX</p>\n<p>If\
    \ you are a member of multiple projects (tenants) you may also want to set:\n\
    OS_NO_CACHE=True</p>\n<p>The Dashboard provides a convenient way to help you setting\
    \ up these variables\nvia a shell script file. You can follow the below steps\
    \ to obtain it:</p>\n<ul>\n<li>\n<p>Go To <a href=\"https://dashboard.rc.nectar.org.au\"\
    >Dashboard</a></p>\n</li>\n<li>\n<p>Login to dashboard via AAF Credentials</p>\n\
    </li>\n<li>\n<p>Click 'Access &amp; Security'</p>\n</li>\n<li>\n<p>Click 'API\
    \ Access' tap</p>\n</li>\n<li>\n<p>Click 'Download OpenStack RC File'</p>\n</li>\n\
    <li>\n<p>Save the shell script file in your local computer/laptop</p>\n</li>\n\
    </ul>\n<p>The password is not automatically set for you for security reason. You\
    \ can also\nobtain the API password from NeCTAR cloud. Please follow the below\
    \ steps to get\nthe password:</p>\n<ul>\n<li>\n<p>Go To <a href=\"https://dashboard.rc.nectar.org.au\"\
    >Dashboard</a></p>\n</li>\n<li>\n<p>Login to dashboard via AAF Credentials</p>\n\
    </li>\n<li>\n<p>On the right top of the page, click drop down list containing\
    \ your email\n address</p>\n</li>\n<li>\n<p>Click 'Settings'</p>\n</li>\n<li>\n\
    <p>Click 'Reset Password' button</p>\n</li>\n<li>\n<p>The copy/paste the password\
    \ appeared on the screen to a text file, then save\n the text file in your local\
    \ computer/laptop.</p>\n</li>\n</ul>\n<p>To execute the shell script file, type\
    \ source filename, then enter the password\nyou obtained earlier from NeCTAR dashboard.</p>\n\
    <p>Now, you are authenticated and please refer to\n<a href=\"http://developer.openstack.org/api-ref.html\"\
    >relevant API document</a> to see how to interact with the\nNeCTAR Cloud.</p>\n\
    <h3>EC2 API</h3>\n<p>There are 2 variables needed when using EC2 API clients:</p>\n\
    <ul>\n<li>\n<p>EC2_ACCESS_KEY: username</p>\n</li>\n<li>\n<p>EC2_SECRET_KEY: password</p>\n\
    </li>\n</ul>\n<p>You can obtain these 2 variables via the NeTCAR Dashboard:</p>\n\
    <ul>\n<li>\n<p>Go To <a href=\"https://dashboard.rc.nectar.org.au\">Dashboard</a></p>\n\
    </li>\n<li>\n<p>Login to dashboard via AAF Credentials</p>\n</li>\n<li>\n<p>Click\
    \ 'Access &amp; Security'</p>\n</li>\n<li>\n<p>Click 'API Access' tap</p>\n</li>\n\
    <li>\n<p>Click 'Download EC2 Credentials'</p>\n</li>\n<li>\n<p>Save the zip file\
    \ in your local computer/laptop</p>\n</li>\n<li>\n<p>Unzip the saved zip file\
    \ and open ec2rc.sh file via a text editor</p>\n</li>\n<li>\n<p>You can find EC2_ACCESS_KEY\
    \ and EC2_SECRET_KEY in the file</p>\n</li>\n</ul>\n<h2>Login Problems</h2>\n\
    <p>If your login details are rejected first\n<a href=\"http://aaf.edu.au/subscribe/subscribers/\"\
    >check your Research Institution is a member of the AAF</a>.</p>\n<p>If your research\
    \ institution is a member but you still can't login, you can\ncontact IT Service\
    \ department of your own research institution.\nThey can provide support for issues\
    \ with your login credentials. Alternatively,\nyou can email to support@rc.nectar.org.au.</p>"
  parent: 21
  sha1: 06f70595a408bd9c58ee0c83949d02da2a2e27b4
  title: Getting an account
35:
  freshdesk:
    fd_attributes:
      article:
        art_type: 1
        bool_01: null
        created_at: '2015-09-03T01:28:13-04:00'
        datetime_01: null
        delta: true
        desc_un_html: " Welcome to the Nectar Cloud knowledge base. Browse or search\
          \ our\nuser documentation, and if you can't find what you're looking\nfor\
          \ contact our support team at [email] or [phone]. \n What is the Nectar\
          \ Cloud \n Nectar (National eResearch Collaboration Tools and Resources)\
          \ is an Australian Government project funded to build new infrastructure\
          \ specifically for the needs of Australian researchers.  The Nectar Cloud\
          \ provides supported computing infrastructure, giving researchers access\
          \ to computing resources without the need to purchase or host their own\
          \ hardware. \nAll Australian researchers have access to the Nectar Cloud\
          \ via the AAF. \n To access the cloud all users must first login through\
          \ the\nNectar Cloud dashboard:\nhttps://dashboard.rc.nectar.org.au/ \n Instances\
          \ \n Instances running inside the Research Cloud are just like real-life\
          \ machines but\nin a remote location. The Research Cloud is used to start,\
          \ copy and delete\ninstances. They have an operating system (you select\
          \ it from a list), network\naccess (a real IP address & you specify any\
          \ access), and hard disk storage.\nWith no hardware to maintain you can\
          \ copy (Snapshot) and customise new\nmachines rapidly. \n Tools \n The Nectar\
          \ Cloud Dashboard \n The Dashboard provides a web interface to get all the\
          \ basic\nResearch Cloud related jobs done. \n Use the dashboard: \n \n for\
          \ basic Cloud operations: (launching, duplicating & terminating ) instances\
          \ \n to get [Credentials] you can use with other [API clients] \n to make\
          \ an allocation request for a larger ongoing share of Research Cloud Resources.\
          \ \n \n More about instances \n If you are familiar with connecting to remote\
          \ machines already\nthe same tools and techniques apply when connecting\
          \ to running\ninstances. Your instance has a public IP address and, if\n\
          configured, can be reached and controlled with any remote\naccess tools\
          \ you wish to use. Example SSH. \n More information about launching and\
          \ managing instances is here \n Images \n Instances originate from Images\
          \ and can be a plain \"off the\nshelf\" Operating System or include software\
          \ packages and\nconfig changes to suit a particular purpose (eg Webserving).\n\
          There are publicly available images in the cloud ready for\nyou to use.\
          \ \n To suit your specific purposes an instance may need some\ncustomisation,\
          \ configuration changes or software installation.\nIts a good idea to make\
          \ a copy of the instance if you wish to\nre-use its current state as a starting\
          \ point for new instances.\nIf you are experimenting and making changes,\
          \ a copy allows you\nto return to the copied state and dispose of the experiment\n\
          without having to undo/redo configuration changes. \n You can create an\
          \ Image from scratch, but usually its easier\nto customise & copy a running\
          \ instance that is close\nto what you need. \n Copies of instances are called\
          \ Snapshots and can be used\nlike other Images to start new instances. Making\
          \ a Snapshot\nis simple: \n \n Go to the Dashboard \"Instances\" tab \n\
          \ Click \"Create Snapshot\" for the running instance you wish to copy. \n\
          \ \n Keypairs \n Key Pairs enable you to communicate with your instance\
          \ via\nSSH. When launching an instance you specify an existing key\npair.\
          \ The public key is injected into the running\ninstance's authorized_keys\
          \ file. \n You can manage your keypairs through the Dashboard or via\nthe\
          \ nova CLI client. \n In the dashboard under the Access & Security tab you\
          \ can\nmanage your keys. You have the option of: \n \n Importing an existing\
          \ SSH key you own \n Creating a new SSH Key \n \n Important: Keypairs can\
          \ only be specified on instance\ncreation, if you don't specify a keypair\
          \ on creation you will\nnot be able to add it later. \n Security groups\
          \ \n Incoming network access to your machines is usually required.\nSecurity\
          \ Groups are how to add network access. If you can't\nreach your instance\
          \ by SSH to login or by browser if it\nruns a Webserver additional Security\
          \ Group settings could be\nneeded. \n [Add link to more info] \n Storage\
          \ in the cloud \n The NeCTAR Research Cloud provides instances for research\n\
          use. While resources like processing cores, RAM and the\namount of storage\
          \ you get are dedicated to a particular\ninstance, other resources like\
          \ the network and the underlying\nstorage system are shared among instances.\
          \ Furthermore, not\nall storage is created equal, and Research Cloud users\n\
          have a few different types of storage available which differ\naccording\
          \ to performance, persistence and data safety. \n To find out which storage\
          \ option is right for you. We need\nto write the documentation for it. [LINK] "
        description: '<p>Welcome to the Nectar Cloud knowledge base. Browse or search
          our

          user documentation, and if you can''t find what you''re looking

          for contact our support team at [email] or [phone].</p>

          <h2>What is the Nectar Cloud</h2>

          <p><a href="http://nectar.org.au/">Nectar</a> (National eResearch Collaboration
          Tools and Resources) is an Australian Government project funded to build
          new infrastructure specifically for the needs of Australian researchers.  The
          Nectar Cloud provides supported computing infrastructure, giving researchers
          access to computing resources without the need to purchase or host their
          own hardware.<br>

          All Australian researchers have access to the Nectar Cloud via the <a href="http://support.rc.nectar.org.au/node/111">AAF</a>.</p>

          <p>To access the cloud all users must first login through the

          Nectar Cloud dashboard:

          <a href="https://dashboard.rc.nectar.org.au/">https://dashboard.rc.nectar.org.au/</a></p>

          <h2>Instances</h2>

          <p>Instances running inside the Research Cloud are just like real-life machines
          but

          in a remote location. The Research Cloud is used to start, copy and delete

          instances. They have an operating system (you select it from a list), network

          access (a real IP address &amp; you specify any access), and hard disk storage.

          With no hardware to maintain you can copy (Snapshot) and customise new

          machines rapidly.</p>

          <h2>Tools</h2>

          <h3>The Nectar Cloud Dashboard</h3>

          <p>The Dashboard provides a web interface to get all the basic

          Research Cloud related jobs done.</p>

          <p>Use the dashboard:</p>

          <ul>

          <li>for basic Cloud operations: (launching, duplicating &amp; terminating
          ) instances</li>

          <li>to get [Credentials] you can use with other [API clients]</li>

          <li>to make an allocation request for a larger ongoing share of Research
          Cloud Resources.</li>

          </ul>

          <h3>More about instances</h3>

          <p>If you are familiar with connecting to remote machines already

          the same tools and techniques apply when connecting to running

          instances. Your instance has a public IP address and, if

          configured, can be reached and controlled with any remote

          access tools you wish to use. Example SSH.</p>

          <p>More information about launching and managing instances is here</p>

          <h3>Images</h3>

          <p>Instances originate from Images and can be a plain "off the

          shelf" Operating System or include software packages and

          config changes to suit a particular purpose (eg Webserving).

          There are publicly available images in the cloud ready for

          you to use.</p>

          <p>To suit your specific purposes an instance may need some

          customisation, configuration changes or software installation.

          Its a good idea to make a copy of the instance if you wish to

          re-use its current state as a starting point for new instances.

          If you are experimenting and making changes, a copy allows you

          to return to the copied state and dispose of the experiment

          without having to undo/redo configuration changes.</p>

          <p>You can create an Image from scratch, but usually its easier

          to customise &amp; copy a running instance that is close

          to what you need.</p>

          <p>Copies of instances are called Snapshots and can be used

          like other Images to start new instances. Making a Snapshot

          is simple:</p>

          <ol>

          <li>Go to the Dashboard "Instances" tab</li>

          <li>Click "Create Snapshot" for the running instance you wish to copy.</li>

          </ol>

          <h2>Keypairs</h2>

          <p>Key Pairs enable you to communicate with your instance via

          SSH. When launching an instance you specify an existing key

          pair. The public key is injected into the running

          instance''s authorized_keys file.</p>

          <p>You can manage your keypairs through the Dashboard or via

          the nova CLI client.</p>

          <p>In the dashboard under the Access &amp; Security tab you can

          manage your keys. You have the option of:</p>

          <ul>

          <li>Importing an existing SSH key you own</li>

          <li>Creating a new SSH Key</li>

          </ul>

          <p><strong>Important:</strong> Keypairs can only be specified on instance

          creation, if you don''t specify a keypair on creation you will

          not be able to add it later.</p>

          <h2>Security groups</h2>

          <p>Incoming network access to your machines is usually required.

          Security Groups are how to add network access. If you can''t

          reach your instance by SSH to login or by browser if it

          runs a Webserver additional Security Group settings could be

          needed.</p>

          <p>[Add link to more info]</p>

          <h2>Storage in the cloud</h2>

          <p>The NeCTAR Research Cloud provides instances for research

          use. While resources like processing cores, RAM and the

          amount of storage you get are dedicated to a particular

          instance, other resources like the network and the underlying

          storage system are shared among instances. Furthermore, not

          all storage is created equal, and Research Cloud users

          have a few different types of storage available which differ

          according to performance, persistence and data safety.</p>

          <p>To find out which storage option is right for you. We need

          to write the documentation for it. [LINK]</p>'
        folder:
          category_id: 6000122278
          created_at: '2015-09-03T01:28:04-04:00'
          customer_folders: []
          description: Cloud Basics
          id: 6000190150
          is_default: false
          language_id: 6
          name: Cloud Basics
          parent_id: 6000190150
          position: 2
          updated_at: '2015-09-03T01:28:04-04:00'
          visibility: 1
        folder_id: 6000190150
        hits: 0
        id: 6000055378
        int_01: null
        int_02: null
        int_03: null
        language_id: 6
        modified_at: '2015-09-03T01:28:13-04:00'
        modified_by: null
        outdated: false
        parent_id: 6000055378
        position: 3
        seo_data: {}
        status: 2
        string_01: null
        string_02: null
        tags: []
        thumbs_down: 0
        thumbs_up: 0
        title: Welcome
        updated_at: '2015-09-03T01:28:13-04:00'
        user_id: 6002464727
  html: '<p>Welcome to the Nectar Cloud knowledge base. Browse or search our

    user documentation, and if you can''t find what you''re looking

    for contact our support team at [email] or [phone].</p>

    <h2>What is the Nectar Cloud</h2>

    <p><a href="http://nectar.org.au/">Nectar</a> (National eResearch Collaboration
    Tools and Resources) is an Australian Government project funded to build new infrastructure
    specifically for the needs of Australian researchers.  The Nectar Cloud provides
    supported computing infrastructure, giving researchers access to computing resources
    without the need to purchase or host their own hardware.<br>

    All Australian researchers have access to the Nectar Cloud via the <a href="http://support.rc.nectar.org.au/node/111">AAF</a>.</p>

    <p>To access the cloud all users must first login through the

    Nectar Cloud dashboard:

    <a href="https://dashboard.rc.nectar.org.au/">https://dashboard.rc.nectar.org.au/</a></p>

    <h2>Instances</h2>

    <p>Instances running inside the Research Cloud are just like real-life machines
    but

    in a remote location. The Research Cloud is used to start, copy and delete

    instances. They have an operating system (you select it from a list), network

    access (a real IP address &amp; you specify any access), and hard disk storage.

    With no hardware to maintain you can copy (Snapshot) and customise new

    machines rapidly.</p>

    <h2>Tools</h2>

    <h3>The Nectar Cloud Dashboard</h3>

    <p>The Dashboard provides a web interface to get all the basic

    Research Cloud related jobs done.</p>

    <p>Use the dashboard:</p>

    <ul>

    <li>for basic Cloud operations: (launching, duplicating &amp; terminating ) instances</li>

    <li>to get [Credentials] you can use with other [API clients]</li>

    <li>to make an allocation request for a larger ongoing share of Research Cloud
    Resources.</li>

    </ul>

    <h3>More about instances</h3>

    <p>If you are familiar with connecting to remote machines already

    the same tools and techniques apply when connecting to running

    instances. Your instance has a public IP address and, if

    configured, can be reached and controlled with any remote

    access tools you wish to use. Example SSH.</p>

    <p>More information about launching and managing instances is here</p>

    <h3>Images</h3>

    <p>Instances originate from Images and can be a plain "off the

    shelf" Operating System or include software packages and

    config changes to suit a particular purpose (eg Webserving).

    There are publicly available images in the cloud ready for

    you to use.</p>

    <p>To suit your specific purposes an instance may need some

    customisation, configuration changes or software installation.

    Its a good idea to make a copy of the instance if you wish to

    re-use its current state as a starting point for new instances.

    If you are experimenting and making changes, a copy allows you

    to return to the copied state and dispose of the experiment

    without having to undo/redo configuration changes.</p>

    <p>You can create an Image from scratch, but usually its easier

    to customise &amp; copy a running instance that is close

    to what you need.</p>

    <p>Copies of instances are called Snapshots and can be used

    like other Images to start new instances. Making a Snapshot

    is simple:</p>

    <ol>

    <li>Go to the Dashboard "Instances" tab</li>

    <li>Click "Create Snapshot" for the running instance you wish to copy.</li>

    </ol>

    <h2>Keypairs</h2>

    <p>Key Pairs enable you to communicate with your instance via

    SSH. When launching an instance you specify an existing key

    pair. The public key is injected into the running

    instance''s authorized_keys file.</p>

    <p>You can manage your keypairs through the Dashboard or via

    the nova CLI client.</p>

    <p>In the dashboard under the Access &amp; Security tab you can

    manage your keys. You have the option of:</p>

    <ul>

    <li>Importing an existing SSH key you own</li>

    <li>Creating a new SSH Key</li>

    </ul>

    <p><strong>Important:</strong> Keypairs can only be specified on instance

    creation, if you don''t specify a keypair on creation you will

    not be able to add it later.</p>

    <h2>Security groups</h2>

    <p>Incoming network access to your machines is usually required.

    Security Groups are how to add network access. If you can''t

    reach your instance by SSH to login or by browser if it

    runs a Webserver additional Security Group settings could be

    needed.</p>

    <p>[Add link to more info]</p>

    <h2>Storage in the cloud</h2>

    <p>The NeCTAR Research Cloud provides instances for research

    use. While resources like processing cores, RAM and the

    amount of storage you get are dedicated to a particular

    instance, other resources like the network and the underlying

    storage system are shared among instances. Furthermore, not

    all storage is created equal, and Research Cloud users

    have a few different types of storage available which differ

    according to performance, persistence and data safety.</p>

    <p>To find out which storage option is right for you. We need

    to write the documentation for it. [LINK]</p>'
  parent: 21
  sha1: 3948767f7053219dd717f36be1f665be992cb195
  title: Welcome
36:
  freshdesk:
    fd_attributes:
      article:
        art_type: 1
        bool_01: null
        created_at: '2015-09-03T01:28:14-04:00'
        datetime_01: null
        delta: true
        desc_un_html: " Consider Security \n Security of your NeCTAR instances is\
          \ your responsibility. \n If we see evidence that an instance's security\
          \ has been comprised, we\nwill take steps to shut down and isolate it so\
          \ that it doesn't do any further\ndamage to cloud infrastructure or to other\
          \ users' assets. \n Compromised Nectar instances are a real issue. Across\
          \ the Nectar federation, we\nsee examples at least once a month. \n Apply\
          \ system patches as often as possible \n Keeping your system up to date\
          \ is one of the simplest and most effective\nways to secure your system\
          \ against unwanted intrusion. \n It is easy and more practical to configure\
          \ a recent Linux system to apply\npatches automatically.  Alternatively\
          \ If you are applying patches by hand, we\nrecommend that you do it at least\
          \ once a week. \n Understand the lifecycle of your Linux Distribution \n\
          \ Every release of a linux distribution (such as Debian Wheezy, or Ubuntu\n\
          Precise) will have a published end of life date.  Assuming you are doing\
          \ the\nright thing and applying patches regularly, once the end of life\
          \ date is\nreached, the patches will no longer be available. \n If system\
          \ patches are discontinued, you should update to a more recent version\n\
          of the operating system.  You should treat this as a matter of urgency.\
          \ \n It is trivially easy for a Bad Person(tm) to scan your machine and\
          \ determine\nexactly which attacks your instance is vulnerable to. \n Understand\
          \ SSH authentication \n It is undeniable that ssh key authentication is\
          \ the most effective way to\nsecure ssh access to your instance.  Enabling\
          \ ssh password authentication may\nseem like a good idea, but doing so opens\
          \ your machine to brute force password\nattacks.  Don't underestimate the\
          \ means and will of Bad People(tm) to exploit\nyour instance for their nefarious\
          \ purposes. \n Don't share your ssh private key with anyone, ever.   Like\
          \ giving machine guns\nto monkeys, it's a very bad idea. \n Don't use VNC,\
          \ use x2go instead \n VNC is one of those longstanding ways of getting graphical\
          \ access to your\ncomputer over a network.  While it's well known and loved,\
          \ there are in fact\nmany ways to exploit VNC and there are now better ways\
          \ to get to your graphical\ncontent. \n X2go is technically superior to\
          \ VNC and tunnels your graphical content over\nssh. \n Terminate instances\
          \ that you no longer require \n In theory, you can run an instance as long\
          \ as you like.  In practice, we would\nprefer you to promptly terminate\
          \ any instance that are not using actively, so\nthat other users can make\
          \ use of the resources. \n Currently, there is no formal Nectar mechanism\
          \ to discourage wasteful use of\nyour allocation, but this is likely to\
          \ change. \n What should I do when I am finished with an instance \n When\
          \ you are finished with an Instance, you should terminate it.  Leaving an\n\
          instance running, or in \"paused\" or \"suspended\" or \"shutdown\" states\
          \ is tying\ndown resources that other people could be using. \n Note that\
          \ terminating an instance destroys its primary and ephemeral file\nsystems.\
          \  If you want to save the primary file system (so that you can launch a\n\
          new instance), snapshot the instance before you terminate it. "
        description: '<h2>Consider Security</h2>

          <p>Security of your NeCTAR instances is your responsibility.</p>

          <p>If we see evidence that an instance''s security has been comprised, we

          will take steps to shut down and isolate it so that it doesn''t do any further

          damage to cloud infrastructure or to other users'' assets.</p>

          <p>Compromised Nectar instances are a real issue. Across the Nectar federation,
          we

          see examples at least once a month.</p>

          <h2>Apply system patches as often as possible</h2>

          <p>Keeping your system up to date is one of the simplest and most effective

          ways to secure your system against unwanted intrusion.</p>

          <p>It is easy and more practical to configure a recent Linux system to apply

          patches automatically.  Alternatively If you are applying patches by hand,
          we

          recommend that you do it at least once a week.</p>

          <h2>Understand the lifecycle of your Linux Distribution</h2>

          <p>Every release of a linux distribution (such as Debian Wheezy, or Ubuntu

          Precise) will have a published end of life date.  Assuming you are doing
          the

          right thing and applying patches regularly, once the end of life date is

          reached, the patches will no longer be available.</p>

          <p>If system patches are discontinued, you should update to a more recent
          version

          of the operating system.  You should treat this as a matter of urgency.</p>

          <p>It is trivially easy for a Bad Person(tm) to scan your machine and determine

          exactly which attacks your instance is vulnerable to.</p>

          <h2>Understand SSH authentication</h2>

          <p>It is undeniable that ssh key authentication is the most effective way
          to

          secure ssh access to your instance.  Enabling ssh password authentication
          may

          seem like a good idea, but doing so opens your machine to brute force password

          attacks.  Don''t underestimate the means and will of Bad People(tm) to exploit

          your instance for their nefarious purposes.</p>

          <p>Don''t share your ssh private key with anyone, ever.   Like giving machine
          guns

          to monkeys, it''s a very bad idea.</p>

          <h2>Don''t use VNC, use x2go instead</h2>

          <p>VNC is one of those longstanding ways of getting graphical access to
          your

          computer over a network.  While it''s well known and loved, there are in
          fact

          many ways to exploit VNC and there are now better ways to get to your graphical

          content.</p>

          <p>X2go is technically superior to VNC and tunnels your graphical content
          over

          ssh.</p>

          <h2>Terminate instances that you no longer require</h2>

          <p>In theory, you can run an instance as long as you like.  In practice,
          we would

          prefer you to promptly terminate any instance that are not using actively,
          so

          that other users can make use of the resources.</p>

          <p>Currently, there is no formal Nectar mechanism to discourage wasteful
          use of

          your allocation, but this is likely to change.</p>

          <h2>What should I do when I am finished with an instance</h2>

          <p>When you are finished with an Instance, you should terminate it.  Leaving
          an

          instance running, or in "paused" or "suspended" or "shutdown" states is
          tying

          down resources that other people could be using.</p>

          <p>Note that terminating an instance destroys its primary and ephemeral
          file

          systems.  If you want to save the primary file system (so that you can launch
          a

          new instance), snapshot the instance before you terminate it.</p>'
        folder:
          category_id: 6000122278
          created_at: '2015-09-03T01:28:04-04:00'
          customer_folders: []
          description: Cloud Basics
          id: 6000190150
          is_default: false
          language_id: 6
          name: Cloud Basics
          parent_id: 6000190150
          position: 2
          updated_at: '2015-09-03T01:28:04-04:00'
          visibility: 1
        folder_id: 6000190150
        hits: 0
        id: 6000055379
        int_01: null
        int_02: null
        int_03: null
        language_id: 6
        modified_at: '2015-09-03T01:28:14-04:00'
        modified_by: null
        outdated: false
        parent_id: 6000055379
        position: 4
        seo_data: {}
        status: 2
        string_01: null
        string_02: null
        tags: []
        thumbs_down: 0
        thumbs_up: 0
        title: Good Practices
        updated_at: '2015-09-03T01:28:14-04:00'
        user_id: 6002464727
  html: '<h2>Consider Security</h2>

    <p>Security of your NeCTAR instances is your responsibility.</p>

    <p>If we see evidence that an instance''s security has been comprised, we

    will take steps to shut down and isolate it so that it doesn''t do any further

    damage to cloud infrastructure or to other users'' assets.</p>

    <p>Compromised Nectar instances are a real issue. Across the Nectar federation,
    we

    see examples at least once a month.</p>

    <h2>Apply system patches as often as possible</h2>

    <p>Keeping your system up to date is one of the simplest and most effective

    ways to secure your system against unwanted intrusion.</p>

    <p>It is easy and more practical to configure a recent Linux system to apply

    patches automatically.  Alternatively If you are applying patches by hand, we

    recommend that you do it at least once a week.</p>

    <h2>Understand the lifecycle of your Linux Distribution</h2>

    <p>Every release of a linux distribution (such as Debian Wheezy, or Ubuntu

    Precise) will have a published end of life date.  Assuming you are doing the

    right thing and applying patches regularly, once the end of life date is

    reached, the patches will no longer be available.</p>

    <p>If system patches are discontinued, you should update to a more recent version

    of the operating system.  You should treat this as a matter of urgency.</p>

    <p>It is trivially easy for a Bad Person(tm) to scan your machine and determine

    exactly which attacks your instance is vulnerable to.</p>

    <h2>Understand SSH authentication</h2>

    <p>It is undeniable that ssh key authentication is the most effective way to

    secure ssh access to your instance.  Enabling ssh password authentication may

    seem like a good idea, but doing so opens your machine to brute force password

    attacks.  Don''t underestimate the means and will of Bad People(tm) to exploit

    your instance for their nefarious purposes.</p>

    <p>Don''t share your ssh private key with anyone, ever.   Like giving machine
    guns

    to monkeys, it''s a very bad idea.</p>

    <h2>Don''t use VNC, use x2go instead</h2>

    <p>VNC is one of those longstanding ways of getting graphical access to your

    computer over a network.  While it''s well known and loved, there are in fact

    many ways to exploit VNC and there are now better ways to get to your graphical

    content.</p>

    <p>X2go is technically superior to VNC and tunnels your graphical content over

    ssh.</p>

    <h2>Terminate instances that you no longer require</h2>

    <p>In theory, you can run an instance as long as you like.  In practice, we would

    prefer you to promptly terminate any instance that are not using actively, so

    that other users can make use of the resources.</p>

    <p>Currently, there is no formal Nectar mechanism to discourage wasteful use of

    your allocation, but this is likely to change.</p>

    <h2>What should I do when I am finished with an instance</h2>

    <p>When you are finished with an Instance, you should terminate it.  Leaving an

    instance running, or in "paused" or "suspended" or "shutdown" states is tying

    down resources that other people could be using.</p>

    <p>Note that terminating an instance destroys its primary and ephemeral file

    systems.  If you want to save the primary file system (so that you can launch
    a

    new instance), snapshot the instance before you terminate it.</p>'
  parent: 21
  sha1: 16b9cd15a0754709d46f6e8ff5dfda05615d4df6
  title: Good Practices
37:
  freshdesk:
    fd_attributes:
      article:
        art_type: 1
        bool_01: null
        created_at: '2015-09-03T01:28:15-04:00'
        datetime_01: null
        delta: true
        desc_un_html: " The Cloud \n The Nectar Cloud supports thousands of virtual\
          \ machines\nusing 20,000 VCPUs across Australia. \n Sharing it out (allocations)\
          \ \n The Nectar Cloud provides access to the cloud via projects, each with\
          \ an\nallocation of time & capacity (virtual CPUs). \n \n All researchers\
          \ initially (and without application) get a personal\n project with 2 VCPUs\
          \ for 3 Months. \n This means you can run 2 Small or 1 Medium instance for\
          \ three months. \n Need more time or computing power? Submit an allocation\
          \ request. \n Multiple users can share an allocation a project. \n \n Instances\
          \ available by size \n The resources available to an instance are selected\
          \ by different\n'flavors' when launching the instance for the first time.\
          \ \n The flavors define the number of VCPUs, the root disk size and the\n\
          size of the ephemeral disk. The current flavors use a name\npre-fixed with\
          \ 'm2.' \n \n m2.tiny: 1 VCPUs, 768MB RAM, 5GB root disk, no ephemeral disk\
          \ \n m2.xsmall: 1 VCPUs, 2GB RAM, 10GB root disk, no ephemeral disk \n m2.small:\
          \ 1 VCPUs, 4GB RAM, 30GB root disk, no ephemeral disk \n m2.medium: 2 VCPUs,\
          \ 6GB RAM, 30GB root disk, no ephemeral disk \n m2.large: 4 core, 12GB RAM,\
          \ 30GB root disk, 80GB ephemeral disk \n m2.xlarge: 12 core, 48GB RAM, 30GB\
          \ root disk, 360GB ephemeral disk \n \n Legacy flavors use a prefix of 'm1.'\
          \ and have a smaller root disk. \n \n m1.small: 1 core, 4GB RAM, 10GB root\
          \ disk, 30GB secondary disk \n m1.medium: 2 cores, 8GB RAM, 10GB root disk,\
          \ 60GB secondary disk \n m1.large: 4 cores, 16GB RAM, 10GB root disk, 120GB\
          \ secondary disk \n m1.xlarge: 8 cores, 32GB RAM, 10GB root disk, 240GB\
          \ secondary disk \n m1.xxlarge: 16 cores, 64GB RAM, 10GB root disk, 480GB\
          \ secondary disk \n \n Larger instances require more resources than available\
          \ in the\npersonal project; a new project with more resources can be requested\n\
          via an allocation request. \n Internet Traffic Quotas (downloads to your\
          \ instances) \n \n On-Net internet traffic is unlimited (check AARNET off/on\
          \ net status) \n Off-Net: 1GB of off-net traffic per core per month \n How\
          \ to manage and monitor your usage: see Manage my Account\n \n "
        description: "<h2>The Cloud</h2>\n<p>The Nectar Cloud supports <a href=\"\
          http://status.rc.nectar.org.au/growth/infrastructure/\">thousands of virtual\
          \ machines</a>\nusing <a href=\"http://status.rc.nectar.org.au/growth/infrastructure/\"\
          >20,000 VCPUs</a> across Australia.</p>\n<h2>Sharing it out (allocations)</h2>\n\
          <p>The Nectar Cloud provides access to the cloud via projects, each with\
          \ an\nallocation of time &amp; capacity (virtual CPUs).</p>\n<ul>\n<li>All\
          \ researchers initially (and without application) get a personal\n project\
          \ with 2 VCPUs for 3 Months.</li>\n<li>This means you can run 2 Small or\
          \ 1 Medium instance for three months.</li>\n<li>Need more time or computing\
          \ power? Submit an allocation request.</li>\n<li>Multiple users can share\
          \ an allocation a project.</li>\n</ul>\n<h2>Instances available by size</h2>\n\
          <p>The resources available to an instance are selected by different\n'flavors'\
          \ when launching the instance for the first time.</p>\n<p>The flavors define\
          \ the number of VCPUs, the root disk size and the\nsize of the ephemeral\
          \ disk. The current flavors use a name\npre-fixed with 'm2.'</p>\n<ul>\n\
          <li>m2.tiny: 1 VCPUs, 768MB RAM, 5GB root disk, no ephemeral disk</li>\n\
          <li>m2.xsmall: 1 VCPUs, 2GB RAM, 10GB root disk, no ephemeral disk</li>\n\
          <li>m2.small: 1 VCPUs, 4GB RAM, 30GB root disk, no ephemeral disk</li>\n\
          <li>m2.medium: 2 VCPUs, 6GB RAM, 30GB root disk, no ephemeral disk</li>\n\
          <li>m2.large: 4 core, 12GB RAM, 30GB root disk, 80GB ephemeral disk</li>\n\
          <li>m2.xlarge: 12 core, 48GB RAM, 30GB root disk, 360GB ephemeral disk</li>\n\
          </ul>\n<p>Legacy flavors use a prefix of 'm1.' and have a smaller root disk.</p>\n\
          <ul>\n<li>m1.small: 1 core, 4GB RAM, 10GB root disk, 30GB secondary disk</li>\n\
          <li>m1.medium: 2 cores, 8GB RAM, 10GB root disk, 60GB secondary disk</li>\n\
          <li>m1.large: 4 cores, 16GB RAM, 10GB root disk, 120GB secondary disk</li>\n\
          <li>m1.xlarge: 8 cores, 32GB RAM, 10GB root disk, 240GB secondary disk</li>\n\
          <li>m1.xxlarge: 16 cores, 64GB RAM, 10GB root disk, 480GB secondary disk</li>\n\
          </ul>\n<p>Larger instances require more resources than available in the\n\
          personal project; a new project with more resources can be requested\nvia\
          \ an allocation request.</p>\n<h2>Internet Traffic Quotas (downloads to\
          \ your instances)</h2>\n<ul>\n<li>On-Net internet traffic is unlimited (<a\
          \ href=\"http://lg.aarnet.edu.au/cgi-bin/traffic.cgi\">check AARNET off/on\
          \ net status</a>)</li>\n<li>Off-Net: 1GB of off-net traffic per core per\
          \ month</li>\n<li>How to manage and monitor your usage: see <a href=\"manage_my_account\"\
          >Manage my Account</a>\n</li>\n</ul>"
        folder:
          category_id: 6000122278
          created_at: '2015-09-03T01:28:04-04:00'
          customer_folders: []
          description: Cloud Basics
          id: 6000190150
          is_default: false
          language_id: 6
          name: Cloud Basics
          parent_id: 6000190150
          position: 2
          updated_at: '2015-09-03T01:28:04-04:00'
          visibility: 1
        folder_id: 6000190150
        hits: 0
        id: 6000055380
        int_01: null
        int_02: null
        int_03: null
        language_id: 6
        modified_at: '2015-09-03T01:28:15-04:00'
        modified_by: null
        outdated: false
        parent_id: 6000055380
        position: 5
        seo_data: {}
        status: 2
        string_01: null
        string_02: null
        tags: []
        thumbs_down: 0
        thumbs_up: 0
        title: Resources available to you
        updated_at: '2015-09-03T01:28:15-04:00'
        user_id: 6002464727
  html: "<h2>The Cloud</h2>\n<p>The Nectar Cloud supports <a href=\"http://status.rc.nectar.org.au/growth/infrastructure/\"\
    >thousands of virtual machines</a>\nusing <a href=\"http://status.rc.nectar.org.au/growth/infrastructure/\"\
    >20,000 VCPUs</a> across Australia.</p>\n<h2>Sharing it out (allocations)</h2>\n\
    <p>The Nectar Cloud provides access to the cloud via projects, each with an\n\
    allocation of time &amp; capacity (virtual CPUs).</p>\n<ul>\n<li>All researchers\
    \ initially (and without application) get a personal\n project with 2 VCPUs for\
    \ 3 Months.</li>\n<li>This means you can run 2 Small or 1 Medium instance for\
    \ three months.</li>\n<li>Need more time or computing power? Submit an allocation\
    \ request.</li>\n<li>Multiple users can share an allocation a project.</li>\n\
    </ul>\n<h2>Instances available by size</h2>\n<p>The resources available to an\
    \ instance are selected by different\n'flavors' when launching the instance for\
    \ the first time.</p>\n<p>The flavors define the number of VCPUs, the root disk\
    \ size and the\nsize of the ephemeral disk. The current flavors use a name\npre-fixed\
    \ with 'm2.'</p>\n<ul>\n<li>m2.tiny: 1 VCPUs, 768MB RAM, 5GB root disk, no ephemeral\
    \ disk</li>\n<li>m2.xsmall: 1 VCPUs, 2GB RAM, 10GB root disk, no ephemeral disk</li>\n\
    <li>m2.small: 1 VCPUs, 4GB RAM, 30GB root disk, no ephemeral disk</li>\n<li>m2.medium:\
    \ 2 VCPUs, 6GB RAM, 30GB root disk, no ephemeral disk</li>\n<li>m2.large: 4 core,\
    \ 12GB RAM, 30GB root disk, 80GB ephemeral disk</li>\n<li>m2.xlarge: 12 core,\
    \ 48GB RAM, 30GB root disk, 360GB ephemeral disk</li>\n</ul>\n<p>Legacy flavors\
    \ use a prefix of 'm1.' and have a smaller root disk.</p>\n<ul>\n<li>m1.small:\
    \ 1 core, 4GB RAM, 10GB root disk, 30GB secondary disk</li>\n<li>m1.medium: 2\
    \ cores, 8GB RAM, 10GB root disk, 60GB secondary disk</li>\n<li>m1.large: 4 cores,\
    \ 16GB RAM, 10GB root disk, 120GB secondary disk</li>\n<li>m1.xlarge: 8 cores,\
    \ 32GB RAM, 10GB root disk, 240GB secondary disk</li>\n<li>m1.xxlarge: 16 cores,\
    \ 64GB RAM, 10GB root disk, 480GB secondary disk</li>\n</ul>\n<p>Larger instances\
    \ require more resources than available in the\npersonal project; a new project\
    \ with more resources can be requested\nvia an allocation request.</p>\n<h2>Internet\
    \ Traffic Quotas (downloads to your instances)</h2>\n<ul>\n<li>On-Net internet\
    \ traffic is unlimited (<a href=\"http://lg.aarnet.edu.au/cgi-bin/traffic.cgi\"\
    >check AARNET off/on net status</a>)</li>\n<li>Off-Net: 1GB of off-net traffic\
    \ per core per month</li>\n<li>How to manage and monitor your usage: see <a href=\"\
    manage_my_account\">Manage my Account</a></li>\n</ul>"
  parent: 21
  sha1: cf17e60f5be2860ef7cb927d2a768f255165ab4f
  title: Resources available to you
38:
  freshdesk:
    fd_attributes:
      article:
        art_type: 1
        bool_01: null
        created_at: '2015-09-03T01:28:16-04:00'
        datetime_01: null
        delta: true
        desc_un_html: " The Nectar Cloud is organised in Availability Zones, that\
          \ are hosted by the\nparticipating institutions. An availability zone is\
          \ a virtual area in the\ncloud where your VM will reside. In many cloud\
          \ usage scenarios you won't need\nto worry about these: the Nectar software\
          \ will select a suitable Availability\nZone for you when you launch your\
          \ VM. In certain other scenarios, however, you\nhave to select the AZ that\
          \ is right for your purpose. \n How to select an Availability Zone at launch\
          \ \n You can select a specific Availability Zone for your VM at Launch time\
          \ in the\nLaunch Dialog's Availability Zone. The default option is \"(Any\
          \ availability\nzone)\" If you leave this selected Nectar will find a suitable\
          \ AZ for you.\n \n Scenarios \n If your VM uses persistent volume storage,\
          \ your VM and your storage must\nbe in compatible Availability Zones. You\
          \ can find more information about\nstorage here \n In some scenarios you\
          \ can use institutionally licensed software, in which\ncase you may need\
          \ to select the appropriate Availability Zone \n Some participating institutions\
          \ offer private availability zones, for which\nyou may be eligible. You\
          \ will have to contact your Node's local support. "
        description: '<p>The Nectar Cloud is organised in Availability Zones, that
          are hosted by the

          participating institutions. An availability zone is a virtual area in the

          cloud where your VM will reside. In many cloud usage scenarios you won''t
          need

          to worry about these: the Nectar software will select a suitable Availability

          Zone for you when you launch your VM. In certain other scenarios, however,
          you

          have to select the AZ that is right for your purpose.</p>

          <h2>How to select an Availability Zone at launch</h2>

          <p>You can select a specific Availability Zone for your VM at Launch time
          in the

          Launch Dialog''s Availability Zone. The default option is "(Any availability

          zone)" If you leave this selected Nectar will find a suitable AZ for you.

          <img alt="Screenshot of Launch Dialog AZ Tab" src="https://github.com/NeCTAR-RC/nectarcloud-tier0doco/blob/master/articles/NeCTAR%20Documentation--DOCID16/NeCTAR%20Fundamentals--DOCID26/images/launch_dialog_az_tab.png?raw=true"></p>

          <h2>Scenarios</h2>

          <p>If your VM uses <strong>persistent volume storage</strong>, your VM and
          your storage must

          be in compatible Availability Zones. You can find more information about

          storage <a href="../Cloud%20Basics/Introduction%20to%20Cloud%20Storage.md">here</a></p>

          <p>In some scenarios you can use <strong>institutionally licensed software</strong>,
          in which

          case you may need to select the appropriate Availability Zone</p>

          <p>Some participating institutions offer <strong>private availability zones</strong>,
          for which

          you may be eligible. You will have to contact your Node''s local support.</p>'
        folder:
          category_id: 6000122278
          created_at: '2015-09-03T01:28:09-04:00'
          customer_folders: []
          description: NeCTAR Fundamentals
          id: 6000190155
          is_default: false
          language_id: 6
          name: NeCTAR Fundamentals
          parent_id: 6000190155
          position: 7
          updated_at: '2015-09-03T01:28:09-04:00'
          visibility: 1
        folder_id: 6000190155
        hits: 0
        id: 6000055381
        int_01: null
        int_02: null
        int_03: null
        language_id: 6
        modified_at: '2015-09-03T01:28:16-04:00'
        modified_by: null
        outdated: false
        parent_id: 6000055381
        position: 1
        seo_data: {}
        status: 2
        string_01: null
        string_02: null
        tags: []
        thumbs_down: 0
        thumbs_up: 0
        title: Availability Zones
        updated_at: '2015-09-03T01:28:16-04:00'
        user_id: 6002464727
  html: '<p>The Nectar Cloud is organised in Availability Zones, that are hosted by
    the

    participating institutions. An availability zone is a virtual area in the

    cloud where your VM will reside. In many cloud usage scenarios you won''t need

    to worry about these: the Nectar software will select a suitable Availability

    Zone for you when you launch your VM. In certain other scenarios, however, you

    have to select the AZ that is right for your purpose.</p>

    <h2>How to select an Availability Zone at launch</h2>

    <p>You can select a specific Availability Zone for your VM at Launch time in the

    Launch Dialog''s Availability Zone. The default option is "(Any availability

    zone)" If you leave this selected Nectar will find a suitable AZ for you.

    <img alt="Screenshot of Launch Dialog AZ Tab" src="https://github.com/NeCTAR-RC/nectarcloud-tier0doco/blob/master/articles/NeCTAR
    Documentation--DOCID16/NeCTAR Fundamentals--DOCID26/images/launch_dialog_az_tab.png?raw=true"></p>

    <h2>Scenarios</h2>

    <p>If your VM uses <strong>persistent volume storage</strong>, your VM and your
    storage must

    be in compatible Availability Zones. You can find more information about

    storage <a href="../Cloud%20Basics/Introduction%20to%20Cloud%20Storage.md">here</a></p>

    <p>In some scenarios you can use <strong>institutionally licensed software</strong>,
    in which

    case you may need to select the appropriate Availability Zone</p>

    <p>Some participating institutions offer <strong>private availability zones</strong>,
    for which

    you may be eligible. You will have to contact your Node''s local support.</p>'
  parent: 26
  sha1: f5d14d797b4f2c7f8f08e78b2988746c514f63d6
  title: Availability Zones
39:
  freshdesk:
    fd_attributes:
      article:
        art_type: 1
        bool_01: null
        created_at: '2015-09-03T01:28:17-04:00'
        datetime_01: null
        delta: true
        desc_un_html: " The NeCTAR virtual machines have many resources binded with\
          \ them in order for it\nto function properly. Among these resources, storage\
          \ is the fundamental component\nfor both the virtual machine and user to\
          \ save and use data. The amount of\nstorage your virtual machine get are\
          \ dedicated, but the underlying storage\nsystem are shared. Furthermore,\
          \ not all storage is created equal, and Research\nCloud users have a few\
          \ different types of storage available which differ\naccording to performance,\
          \ persistence and data safety. \n On Virtual Machine Storage \n Each virtual\
          \ machine in the NeCTAR Cloud comes with a certain amount of built-in\n\
          storage and these storages are appeared as two separated hard disks\n(Root\
          \ Disk and Ephemeral Disk). These storage run off robust\nenterprise-grade\
          \ storage hardware on the back. However, both storage are not\nsuitable\
          \ for long-term persistent data as data will be lost after termination or\n\
          rebuilt of virtual machine. \n Root Disk \n This storage is used for operating\
          \ system of the virtual machine to boot it\ninto a functional state. It\
          \ has a limited 10GB in size, which is same for every\nstandard size of\
          \ virtual machine (Small, Medium, Large, Extra Large and\nExtra Extra Large).\
          \ The size various for non standard virtual machines such as\ntiny, which\
          \ only has 5GB root storage. \n Data stored on the root storage are persistent\
          \ until the termination or rebuilt\nof the virtual machine and are copied\
          \ during the snapshot. That means, if you\nreboot your virtual machine,\
          \ the data remains in tact and when you take a\npoint-in-time snapshot of\
          \ your virtual machine, the entire root storage is\ncopied. As the root\
          \ storage comes with fixed size and are used by the operation\nsystem, caution\
          \ need to be taken as it should not be filled in full. The name of\nthis\
          \ disk as seen from the virtual machine is usually /dev/vda. \n Ephemeral\
          \ Disk \n This storage appears as a second hard disk in your virtual machine\
          \ and are raw\nand unformatted block device, that you can format and use\
          \ as you wish. It varies\nin size according to the size of virtual machine\
          \ (from 0GB to 480GB). For every\nCPU an standard virtual machine will get\
          \ 30GB of additional ephemeral storage.\nIt various in size for non-standard\
          \ virtual machine. The name of this device as\nseen from the instance is\
          \ usually /dev/vdb and some operating systems will\nautomatically format\
          \ and mount the ephemeral disk. For example, Ubuntu creates\nan ext3 partition\
          \ and mounts it at /mnt. For operating system don't do it\nautomatically,\
          \ you can format it by executing mkfs.ext4 /dev/vdb in command line\nand\
          \ mount it by executing mount /dev/vdb /mnt. You also need to have root\n\
          permission to do that. \n Data stored on ephemeral disk are only persistent\
          \ until the termination or\nrebuilt of virtual machine, which are same as\
          \ the root disk. The only difference\nis data on ephemeral disk are not\
          \ copied when taking an snapshot of virtual\nmachine, which means you cannot\
          \ use snapshot to save data stored on ephemeral\ndisk. \n Backup of Ephemeral\
          \ Disk \n Data on the ephemeral disk does not get saved in a snapshot, and\
          \ requires other\ntechniques to make a backup. Other forms of storage can\
          \ be used such as the\nObject Store and Volume Storage within the Research\
          \ Cloud or external locations. \n Persistent Volume Storage \n Persistent\
          \ volume storage can live outside your virtual machine. It is appears\n\
          as block storage which can be attached then accessed and even booted from.\
          \ This\nis a storage volume that you can attach to from within your virtual\
          \ machine,\nrea and write data, detach it, and make it available to another\
          \ virtual machine.\nYour data on a persistent volume is retained even when\
          \ you terminate your\nvirtual machine. Persistent Volumes offer a snapshot\
          \ feature which can be used\nto make convenient backups (uses some of your\
          \ overall Persistent Volume quota). \n NOTE: Persistent Volumes are local\
          \ services and only virtual machines in the\navailability zone where the\
          \ persistent Volume has been created can access it. \n How to Get Persistent\
          \ Volume Storage \n By default, there are no persistent volume storage available\
          \ to your project.\nYou need to make an allocation request to apply for\
          \ how many persistent volume\nstorage you want to have for your project.\
          \ Follow the below steps to make a\nrequest: \n \n \n Login to NeCTAR Cloud\
          \ Dashboard \n \n \n Go to Allocations and you can either click 'New Request'\
          \ to make a new request\n or 'My Requests' to amend an existing request\
          \ \n \n \n Under section 'Storage Quota', you select 'Resource' as volume,\
          \ select the\n Zone you want the storage to be and enter the GB in the 'Requested\
          \ Quota'. \n \n \n Click 'Submit' button \n \n \n Note:\nIt would take a\
          \ while before your request get approved. \n Create a persistent volume\
          \ storage \n Once your request has been approved, your project should have\
          \ volume storage\navailable. You need to create volume storage in NeCTAR\
          \ Cloud Dashboard first\nbefore you can use it. \n \n \n Login to NeCTAR\
          \ Cloud Dashboard \n \n \n Go to 'Volumes' \n \n \n Click 'Create Volume'\
          \ button \n \n \n Give a Volume Name and meaningful description \n \n \n\
          \ Select a volume source, this is how volume get built. You can select\n\
          \ 'No source empty volume' to create new empty volume. You can select 'image'\
          \ to\n build a volume from a image or 'Volume' to build a volume from existing\
          \ volume \n \n \n Give size to volume in GB \n \n \n Give a availability\
          \ zone \n \n \n Click 'Create Volume' button \n \n \n Attach a persistent\
          \ volume storage \n you can attach the volume created earlier to a running\
          \ virtual machine. See the\nbelow instruction: \n \n \n Login to NeCTAR\
          \ Cloud Dashboard \n \n \n Go to 'Volumes' \n \n \n Click the action list\
          \ of volume \n \n \n Click 'Edit Attachment' \n \n \n Click 'Attach to Instance'\
          \ drop down list to select a virtual machine to\n attach a volume \n \n\
          \ \n Click 'Attach Volume' button \n \n \n Use Persistent Volume Storage\
          \ in Virtual Machine \n For a standard flavor virtual machine the persistent\
          \ volume will be attached\nas /dev/vdc. \n A new volume may not have a file\
          \ system (depending on how it was created) and\nyou need to create one before\
          \ mounting. \n The exact mount command syntax is dependent on the virtual\
          \ machine' operating\nsystem and the type of file system you require. \n\
          \ You can use below command to create file system on the new volume:\nsudo\
          \ mkfs.ext4 /dev/vdc \n WARNING: This can cause data loss if a file system\
          \ already exists on the target\nVolume. \n You can use below command to\
          \ mount the volume to /mnt\nsudo mount /dev/vdc /mnt -t auto \n Notes:\n\
          Volumes must be detached before deletion. \n Object Storage \n The NeCTAR\
          \ Cloud Object Storage is not a traditional file system, but rather a\n\
          distributed storage system for static data such as virtual machine images,\n\
          photo storage, email storage, backups and archives. Having no central \"\
          brain\" or\nmaster point of control provides greater scalability, redundancy\
          \ and durability.\nWhen you put a file in the NeCTAR Cloud Object Store,\
          \ 3 copies of your data are\ndistributed to different hardware for extra\
          \ data safety and performance. \n Think about that dataset comprised of\
          \ 2GB files that you read in and analyse\nmany times, but in general it\
          \ doesn't change. Or the images you want to use on\nthe cloud. Those are\
          \ a couple examples of what's perfect for Object Storage.\nObjects are written\
          \ to multiple hardware devices in the data center to ensure\nintegrity,\
          \ and great performance! \n In general, the object store is great for data\
          \ you write once and read many\ntimes, but not suitable for applications\
          \ like databases. It's the safest place\nto put your data on the NeCTAR\
          \ Research Cloud as multiple redundant copies of\nyour data are made, and\
          \ it has great performance. You can access the objec\nstore from anywhere\
          \ on the Internet, and data from Object Storage can be\ntransferred to and\
          \ from your virtual machine with a variety of http-capable\ntools. \n Object\
          \ Storage is completely decoupled from your virtual machine, so even if\
          \ you\nreboot, delete or crash your virtual machine, your Object Storage\
          \ files will\nremain safe (unless you remove them yourself). Object Storage\
          \ persists\nindependently from the life of an instance. \n Swift \n Swift\
          \ is the component that provides object storage for OpenStack. With your\n\
          credentials and via a URL you can request Swift to reserve & create storage\n\
          (called containers or buckets). Files (known as objects when stored in Swift)\n\
          can then be uploaded and accessed similarly by your running virtual machines.\
          \ \n The NeCTAR implementation of Swift is geodistributed across Nodes of\
          \ the NeCTAR\nCloud so that availability is not rely on any one data center\
          \ or network\ninfrastructure. Each collection of Swift nodes/hardware is\
          \ known as a region,\nwhich may or may not include a Swift proxy server\
          \ (the Internet facing and\nserving component of Swift). With some Swift\
          \ clients/APIs users can explicitly\nchose which proxy to connect to, this\
          \ might be useful e.g. for speeding up\nwrites to object storage by choosing\
          \ the nearest proxy. Due to NeCTAR's Swift\nhaving multiple regions (some\
          \ of which are Node private) some clients/APIs\nrequire explicit configuration\
          \ of a default region, which should be \"Melbourne\"\nfor most users. "
        description: "<p>The NeCTAR virtual machines have many resources binded with\
          \ them in order for it\nto function properly. Among these resources, storage\
          \ is the fundamental component\nfor both the virtual machine and user to\
          \ save and use data. The amount of\nstorage your virtual machine get are\
          \ dedicated, but the underlying storage\nsystem are shared. Furthermore,\
          \ not all storage is created equal, and Research\nCloud users have a few\
          \ different types of storage available which differ\naccording to performance,\
          \ persistence and data safety.</p>\n<h2>On Virtual Machine Storage</h2>\n\
          <p>Each virtual machine in the NeCTAR Cloud comes with a certain amount\
          \ of built-in\nstorage and these storages are appeared as two separated\
          \ hard disks\n(Root Disk and Ephemeral Disk). These storage run off robust\n\
          enterprise-grade storage hardware on the back. However, both storage are\
          \ not\nsuitable for long-term persistent data as data will be lost after\
          \ termination or\nrebuilt of virtual machine.</p>\n<h3>Root Disk</h3>\n\
          <p>This storage is used for operating system of the virtual machine to boot\
          \ it\ninto a functional state. It has a limited 10GB in size, which is same\
          \ for every\nstandard size of virtual machine (Small, Medium, Large, Extra\
          \ Large and\nExtra Extra Large). The size various for non standard virtual\
          \ machines such as\ntiny, which only has 5GB root storage.</p>\n<p>Data\
          \ stored on the root storage are persistent until the termination or rebuilt\n\
          of the virtual machine and are copied during the snapshot. That means, if\
          \ you\nreboot your virtual machine, the data remains in tact and when you\
          \ take a\npoint-in-time snapshot of your virtual machine, the entire root\
          \ storage is\ncopied. As the root storage comes with fixed size and are\
          \ used by the operation\nsystem, caution need to be taken as it should not\
          \ be filled in full. The name of\nthis disk as seen from the virtual machine\
          \ is usually /dev/vda.</p>\n<h3>Ephemeral Disk</h3>\n<p>This storage appears\
          \ as a second hard disk in your virtual machine and are raw\nand unformatted\
          \ block device, that you can format and use as you wish. It varies\nin size\
          \ according to the size of virtual machine (from 0GB to 480GB). For every\n\
          CPU an standard virtual machine will get 30GB of additional ephemeral storage.\n\
          It various in size for non-standard virtual machine. The name of this device\
          \ as\nseen from the instance is usually /dev/vdb and some operating systems\
          \ will\nautomatically format and mount the ephemeral disk. For example,\
          \ Ubuntu creates\nan ext3 partition and mounts it at /mnt. For operating\
          \ system don't do it\nautomatically, you can format it by executing mkfs.ext4\
          \ /dev/vdb in command line\nand mount it by executing mount /dev/vdb /mnt.\
          \ You also need to have root\npermission to do that.</p>\n<p>Data stored\
          \ on ephemeral disk are only persistent until the termination or\nrebuilt\
          \ of virtual machine, which are same as the root disk. The only difference\n\
          is data on ephemeral disk are not copied when taking an snapshot of virtual\n\
          machine, which means you cannot use snapshot to save data stored on ephemeral\n\
          disk.</p>\n<h4>Backup of Ephemeral Disk</h4>\n<p>Data on the ephemeral disk\
          \ does not get saved in a snapshot, and requires other\ntechniques to make\
          \ a backup. Other forms of storage can be used such as the\nObject Store\
          \ and Volume Storage within the Research Cloud or external locations.</p>\n\
          <h2>Persistent Volume Storage</h2>\n<p>Persistent volume storage can live\
          \ outside your virtual machine. It is appears\nas block storage which can\
          \ be attached then accessed and even booted from. This\nis a storage volume\
          \ that you can attach to from within your virtual machine,\nrea and write\
          \ data, detach it, and make it available to another virtual machine.\nYour\
          \ data on a persistent volume is retained even when you terminate your\n\
          virtual machine. Persistent Volumes offer a snapshot feature which can be\
          \ used\nto make convenient backups (uses some of your overall Persistent\
          \ Volume quota).</p>\n<p>NOTE: Persistent Volumes are local services and\
          \ only virtual machines in the\navailability zone where the persistent Volume\
          \ has been created can access it.</p>\n<h3>How to Get Persistent Volume\
          \ Storage</h3>\n<p>By default, there are no persistent volume storage available\
          \ to your project.\nYou need to make an allocation request to apply for\
          \ how many persistent volume\nstorage you want to have for your project.\
          \ Follow the below steps to make a\nrequest:</p>\n<ul>\n<li>\n<p>Login to\
          \ NeCTAR Cloud <a href=\"https://dashboard.rc.nectar.org.au\">Dashboard</a></p>\n\
          </li>\n<li>\n<p>Go to Allocations and you can either click 'New Request'\
          \ to make a new request\n or 'My Requests' to amend an existing request</p>\n\
          </li>\n<li>\n<p>Under section 'Storage Quota', you select 'Resource' as\
          \ volume, select the\n Zone you want the storage to be and enter the GB\
          \ in the 'Requested Quota'.</p>\n</li>\n<li>\n<p>Click 'Submit' button</p>\n\
          </li>\n</ul>\n<p>Note:\nIt would take a while before your request get approved.</p>\n\
          <h3>Create a persistent volume storage</h3>\n<p>Once your request has been\
          \ approved, your project should have volume storage\navailable. You need\
          \ to create volume storage in NeCTAR Cloud Dashboard first\nbefore you can\
          \ use it.</p>\n<ul>\n<li>\n<p>Login to NeCTAR Cloud <a href=\"https://dashboard.rc.nectar.org.au\"\
          >Dashboard</a></p>\n</li>\n<li>\n<p>Go to 'Volumes'</p>\n</li>\n<li>\n<p>Click\
          \ 'Create Volume' button</p>\n</li>\n<li>\n<p>Give a Volume Name and meaningful\
          \ description</p>\n</li>\n<li>\n<p>Select a volume source, this is how volume\
          \ get built. You can select\n 'No source empty volume' to create new empty\
          \ volume. You can select 'image' to\n build a volume from a image or 'Volume'\
          \ to build a volume from existing volume</p>\n</li>\n<li>\n<p>Give size\
          \ to volume in GB</p>\n</li>\n<li>\n<p>Give a availability zone</p>\n</li>\n\
          <li>\n<p>Click 'Create Volume' button</p>\n</li>\n</ul>\n<h3>Attach a persistent\
          \ volume storage</h3>\n<p>you can attach the volume created earlier to a\
          \ running virtual machine. See the\nbelow instruction:</p>\n<ul>\n<li>\n\
          <p>Login to NeCTAR Cloud <a href=\"https://dashboard.rc.nectar.org.au\"\
          >Dashboard</a></p>\n</li>\n<li>\n<p>Go to 'Volumes'</p>\n</li>\n<li>\n<p>Click\
          \ the action list of volume</p>\n</li>\n<li>\n<p>Click 'Edit Attachment'</p>\n\
          </li>\n<li>\n<p>Click 'Attach to Instance' drop down list to select a virtual\
          \ machine to\n attach a volume</p>\n</li>\n<li>\n<p>Click 'Attach Volume'\
          \ button</p>\n</li>\n</ul>\n<h3>Use Persistent Volume Storage in Virtual\
          \ Machine</h3>\n<p>For a standard flavor virtual machine the persistent\
          \ volume will be attached\nas /dev/vdc.</p>\n<p>A new volume may not have\
          \ a file system (depending on how it was created) and\nyou need to create\
          \ one before mounting.</p>\n<p>The exact mount command syntax is dependent\
          \ on the virtual machine' operating\nsystem and the type of file system\
          \ you require.</p>\n<p>You can use below command to create file system on\
          \ the new volume:\nsudo mkfs.ext4 /dev/vdc</p>\n<p>WARNING: This can cause\
          \ data loss if a file system already exists on the target\nVolume.</p>\n\
          <p>You can use below command to mount the volume to /mnt\nsudo mount /dev/vdc\
          \ /mnt -t auto</p>\n<p>Notes:\nVolumes must be detached before deletion.</p>\n\
          <h2>Object Storage</h2>\n<p>The NeCTAR Cloud Object Storage is not a traditional\
          \ file system, but rather a\ndistributed storage system for static data\
          \ such as virtual machine images,\nphoto storage, email storage, backups\
          \ and archives. Having no central \"brain\" or\nmaster point of control\
          \ provides greater scalability, redundancy and durability.\nWhen you put\
          \ a file in the NeCTAR Cloud Object Store, 3 copies of your data are\ndistributed\
          \ to different hardware for extra data safety and performance.</p>\n<p>Think\
          \ about that dataset comprised of 2GB files that you read in and analyse\n\
          many times, but in general it doesn't change. Or the images you want to\
          \ use on\nthe cloud. Those are a couple examples of what's perfect for Object\
          \ Storage.\nObjects are written to multiple hardware devices in the data\
          \ center to ensure\nintegrity, and great performance!</p>\n<p>In general,\
          \ the object store is great for data you write once and read many\ntimes,\
          \ but not suitable for applications like databases. It's the safest place\n\
          to put your data on the NeCTAR Research Cloud as multiple redundant copies\
          \ of\nyour data are made, and it has great performance. You can access the\
          \ objec\nstore from anywhere on the Internet, and data from Object Storage\
          \ can be\ntransferred to and from your virtual machine with a variety of\
          \ http-capable\ntools.</p>\n<p>Object Storage is completely decoupled from\
          \ your virtual machine, so even if you\nreboot, delete or crash your virtual\
          \ machine, your Object Storage files will\nremain safe (unless you remove\
          \ them yourself). Object Storage persists\nindependently from the life of\
          \ an instance.</p>\n<h3>Swift</h3>\n<p>Swift is the component that provides\
          \ object storage for OpenStack. With your\ncredentials and via a URL you\
          \ can request Swift to reserve &amp; create storage\n(called containers\
          \ or buckets). Files (known as objects when stored in Swift)\ncan then be\
          \ uploaded and accessed similarly by your running virtual machines.</p>\n\
          <p>The NeCTAR implementation of Swift is geodistributed across Nodes of\
          \ the NeCTAR\nCloud so that availability is not rely on any one data center\
          \ or network\ninfrastructure. Each collection of Swift nodes/hardware is\
          \ known as a region,\nwhich may or may not include a Swift proxy server\
          \ (the Internet facing and\nserving component of Swift). With some Swift\
          \ clients/APIs users can explicitly\nchose which proxy to connect to, this\
          \ might be useful e.g. for speeding up\nwrites to object storage by choosing\
          \ the nearest proxy. Due to NeCTAR's Swift\nhaving multiple regions (some\
          \ of which are Node private) some clients/APIs\nrequire explicit configuration\
          \ of a default region, which should be \"Melbourne\"\nfor most users.</p>"
        folder:
          category_id: 6000122278
          created_at: '2015-09-03T01:28:04-04:00'
          customer_folders: []
          description: Cloud Basics
          id: 6000190150
          is_default: false
          language_id: 6
          name: Cloud Basics
          parent_id: 6000190150
          position: 2
          updated_at: '2015-09-03T01:28:04-04:00'
          visibility: 1
        folder_id: 6000190150
        hits: 0
        id: 6000055382
        int_01: null
        int_02: null
        int_03: null
        language_id: 6
        modified_at: '2015-09-03T01:28:17-04:00'
        modified_by: null
        outdated: false
        parent_id: 6000055382
        position: 6
        seo_data: {}
        status: 2
        string_01: null
        string_02: null
        tags: []
        thumbs_down: 0
        thumbs_up: 0
        title: Introduction to Cloud Storage
        updated_at: '2015-09-03T01:28:17-04:00'
        user_id: 6002464727
  html: "<p>The NeCTAR virtual machines have many resources binded with them in order\
    \ for it\nto function properly. Among these resources, storage is the fundamental\
    \ component\nfor both the virtual machine and user to save and use data. The amount\
    \ of\nstorage your virtual machine get are dedicated, but the underlying storage\n\
    system are shared. Furthermore, not all storage is created equal, and Research\n\
    Cloud users have a few different types of storage available which differ\naccording\
    \ to performance, persistence and data safety.</p>\n<h2>On Virtual Machine Storage</h2>\n\
    <p>Each virtual machine in the NeCTAR Cloud comes with a certain amount of built-in\n\
    storage and these storages are appeared as two separated hard disks\n(Root Disk\
    \ and Ephemeral Disk). These storage run off robust\nenterprise-grade storage\
    \ hardware on the back. However, both storage are not\nsuitable for long-term\
    \ persistent data as data will be lost after termination or\nrebuilt of virtual\
    \ machine.</p>\n<h3>Root Disk</h3>\n<p>This storage is used for operating system\
    \ of the virtual machine to boot it\ninto a functional state. It has a limited\
    \ 10GB in size, which is same for every\nstandard size of virtual machine (Small,\
    \ Medium, Large, Extra Large and\nExtra Extra Large). The size various for non\
    \ standard virtual machines such as\ntiny, which only has 5GB root storage.</p>\n\
    <p>Data stored on the root storage are persistent until the termination or rebuilt\n\
    of the virtual machine and are copied during the snapshot. That means, if you\n\
    reboot your virtual machine, the data remains in tact and when you take a\npoint-in-time\
    \ snapshot of your virtual machine, the entire root storage is\ncopied. As the\
    \ root storage comes with fixed size and are used by the operation\nsystem, caution\
    \ need to be taken as it should not be filled in full. The name of\nthis disk\
    \ as seen from the virtual machine is usually /dev/vda.</p>\n<h3>Ephemeral Disk</h3>\n\
    <p>This storage appears as a second hard disk in your virtual machine and are\
    \ raw\nand unformatted block device, that you can format and use as you wish.\
    \ It varies\nin size according to the size of virtual machine (from 0GB to 480GB).\
    \ For every\nCPU an standard virtual machine will get 30GB of additional ephemeral\
    \ storage.\nIt various in size for non-standard virtual machine. The name of this\
    \ device as\nseen from the instance is usually /dev/vdb and some operating systems\
    \ will\nautomatically format and mount the ephemeral disk. For example, Ubuntu\
    \ creates\nan ext3 partition and mounts it at /mnt. For operating system don't\
    \ do it\nautomatically, you can format it by executing mkfs.ext4 /dev/vdb in command\
    \ line\nand mount it by executing mount /dev/vdb /mnt. You also need to have root\n\
    permission to do that.</p>\n<p>Data stored on ephemeral disk are only persistent\
    \ until the termination or\nrebuilt of virtual machine, which are same as the\
    \ root disk. The only difference\nis data on ephemeral disk are not copied when\
    \ taking an snapshot of virtual\nmachine, which means you cannot use snapshot\
    \ to save data stored on ephemeral\ndisk.</p>\n<h4>Backup of Ephemeral Disk</h4>\n\
    <p>Data on the ephemeral disk does not get saved in a snapshot, and requires other\n\
    techniques to make a backup. Other forms of storage can be used such as the\n\
    Object Store and Volume Storage within the Research Cloud or external locations.</p>\n\
    <h2>Persistent Volume Storage</h2>\n<p>Persistent volume storage can live outside\
    \ your virtual machine. It is appears\nas block storage which can be attached\
    \ then accessed and even booted from. This\nis a storage volume that you can attach\
    \ to from within your virtual machine,\nrea and write data, detach it, and make\
    \ it available to another virtual machine.\nYour data on a persistent volume is\
    \ retained even when you terminate your\nvirtual machine. Persistent Volumes offer\
    \ a snapshot feature which can be used\nto make convenient backups (uses some\
    \ of your overall Persistent Volume quota).</p>\n<p>NOTE: Persistent Volumes are\
    \ local services and only virtual machines in the\navailability zone where the\
    \ persistent Volume has been created can access it.</p>\n<h3>How to Get Persistent\
    \ Volume Storage</h3>\n<p>By default, there are no persistent volume storage available\
    \ to your project.\nYou need to make an allocation request to apply for how many\
    \ persistent volume\nstorage you want to have for your project. Follow the below\
    \ steps to make a\nrequest:</p>\n<ul>\n<li>\n<p>Login to NeCTAR Cloud <a href=\"\
    https://dashboard.rc.nectar.org.au\">Dashboard</a></p>\n</li>\n<li>\n<p>Go to\
    \ Allocations and you can either click 'New Request' to make a new request\n or\
    \ 'My Requests' to amend an existing request</p>\n</li>\n<li>\n<p>Under section\
    \ 'Storage Quota', you select 'Resource' as volume, select the\n Zone you want\
    \ the storage to be and enter the GB in the 'Requested Quota'.</p>\n</li>\n<li>\n\
    <p>Click 'Submit' button</p>\n</li>\n</ul>\n<p>Note:\nIt would take a while before\
    \ your request get approved.</p>\n<h3>Create a persistent volume storage</h3>\n\
    <p>Once your request has been approved, your project should have volume storage\n\
    available. You need to create volume storage in NeCTAR Cloud Dashboard first\n\
    before you can use it.</p>\n<ul>\n<li>\n<p>Login to NeCTAR Cloud <a href=\"https://dashboard.rc.nectar.org.au\"\
    >Dashboard</a></p>\n</li>\n<li>\n<p>Go to 'Volumes'</p>\n</li>\n<li>\n<p>Click\
    \ 'Create Volume' button</p>\n</li>\n<li>\n<p>Give a Volume Name and meaningful\
    \ description</p>\n</li>\n<li>\n<p>Select a volume source, this is how volume\
    \ get built. You can select\n 'No source empty volume' to create new empty volume.\
    \ You can select 'image' to\n build a volume from a image or 'Volume' to build\
    \ a volume from existing volume</p>\n</li>\n<li>\n<p>Give size to volume in GB</p>\n\
    </li>\n<li>\n<p>Give a availability zone</p>\n</li>\n<li>\n<p>Click 'Create Volume'\
    \ button</p>\n</li>\n</ul>\n<h3>Attach a persistent volume storage</h3>\n<p>you\
    \ can attach the volume created earlier to a running virtual machine. See the\n\
    below instruction:</p>\n<ul>\n<li>\n<p>Login to NeCTAR Cloud <a href=\"https://dashboard.rc.nectar.org.au\"\
    >Dashboard</a></p>\n</li>\n<li>\n<p>Go to 'Volumes'</p>\n</li>\n<li>\n<p>Click\
    \ the action list of volume</p>\n</li>\n<li>\n<p>Click 'Edit Attachment'</p>\n\
    </li>\n<li>\n<p>Click 'Attach to Instance' drop down list to select a virtual\
    \ machine to\n attach a volume</p>\n</li>\n<li>\n<p>Click 'Attach Volume' button</p>\n\
    </li>\n</ul>\n<h3>Use Persistent Volume Storage in Virtual Machine</h3>\n<p>For\
    \ a standard flavor virtual machine the persistent volume will be attached\nas\
    \ /dev/vdc.</p>\n<p>A new volume may not have a file system (depending on how\
    \ it was created) and\nyou need to create one before mounting.</p>\n<p>The exact\
    \ mount command syntax is dependent on the virtual machine' operating\nsystem\
    \ and the type of file system you require.</p>\n<p>You can use below command to\
    \ create file system on the new volume:\nsudo mkfs.ext4 /dev/vdc</p>\n<p>WARNING:\
    \ This can cause data loss if a file system already exists on the target\nVolume.</p>\n\
    <p>You can use below command to mount the volume to /mnt\nsudo mount /dev/vdc\
    \ /mnt -t auto</p>\n<p>Notes:\nVolumes must be detached before deletion.</p>\n\
    <h2>Object Storage</h2>\n<p>The NeCTAR Cloud Object Storage is not a traditional\
    \ file system, but rather a\ndistributed storage system for static data such as\
    \ virtual machine images,\nphoto storage, email storage, backups and archives.\
    \ Having no central \"brain\" or\nmaster point of control provides greater scalability,\
    \ redundancy and durability.\nWhen you put a file in the NeCTAR Cloud Object Store,\
    \ 3 copies of your data are\ndistributed to different hardware for extra data\
    \ safety and performance.</p>\n<p>Think about that dataset comprised of 2GB files\
    \ that you read in and analyse\nmany times, but in general it doesn't change.\
    \ Or the images you want to use on\nthe cloud. Those are a couple examples of\
    \ what's perfect for Object Storage.\nObjects are written to multiple hardware\
    \ devices in the data center to ensure\nintegrity, and great performance!</p>\n\
    <p>In general, the object store is great for data you write once and read many\n\
    times, but not suitable for applications like databases. It's the safest place\n\
    to put your data on the NeCTAR Research Cloud as multiple redundant copies of\n\
    your data are made, and it has great performance. You can access the objec\nstore\
    \ from anywhere on the Internet, and data from Object Storage can be\ntransferred\
    \ to and from your virtual machine with a variety of http-capable\ntools.</p>\n\
    <p>Object Storage is completely decoupled from your virtual machine, so even if\
    \ you\nreboot, delete or crash your virtual machine, your Object Storage files\
    \ will\nremain safe (unless you remove them yourself). Object Storage persists\n\
    independently from the life of an instance.</p>\n<h3>Swift</h3>\n<p>Swift is the\
    \ component that provides object storage for OpenStack. With your\ncredentials\
    \ and via a URL you can request Swift to reserve &amp; create storage\n(called\
    \ containers or buckets). Files (known as objects when stored in Swift)\ncan then\
    \ be uploaded and accessed similarly by your running virtual machines.</p>\n<p>The\
    \ NeCTAR implementation of Swift is geodistributed across Nodes of the NeCTAR\n\
    Cloud so that availability is not rely on any one data center or network\ninfrastructure.\
    \ Each collection of Swift nodes/hardware is known as a region,\nwhich may or\
    \ may not include a Swift proxy server (the Internet facing and\nserving component\
    \ of Swift). With some Swift clients/APIs users can explicitly\nchose which proxy\
    \ to connect to, this might be useful e.g. for speeding up\nwrites to object storage\
    \ by choosing the nearest proxy. Due to NeCTAR's Swift\nhaving multiple regions\
    \ (some of which are Node private) some clients/APIs\nrequire explicit configuration\
    \ of a default region, which should be \"Melbourne\"\nfor most users.</p>"
  parent: 21
  sha1: 5d6df91fc2e2deaa66567ccb90fd402e63e7381b
  title: Introduction to Cloud Storage
46:
  freshdesk:
    fd_attributes:
      article:
        art_type: 1
        bool_01: null
        created_at: '2015-09-03T01:28:19-04:00'
        datetime_01: null
        delta: true
        desc_un_html: " \n Heat \n Heat is a template driven service that automates\
          \ the management of the entire\nlifecycle of your application on the NeCTAR\
          \ cloud. \n A 'template driven service' simply means that you define your\
          \ application's\nrequirements in a human readable text file - the template.\
          \ In this file you to\ndescribe both the infrastructure and its relationships\
          \ that your application\nwill need to run on the NeCTAR cloud. \n Heat then\
          \ uses this template to provision the required infrastructure and\nmanage\
          \ the lifecycle of your application from start to finish. This template,\n\
          and the infrastructure that it has created, is termed a 'stack'. \n As part\
          \ of the life cycle management, the Heat service supports both scaling on\n\
          demand and the freeing up of infrastructure once the application is finished.\
          \ \n Heat integrates well with configuration management tools, such as Chef\
          \ and\nPuppet. Thus the Heat service offers executable documentation of\
          \ your\napplication's deployment and lifecycle, making your deployments\
          \ repeatable and\nreliable. The net effect is to limit human error and to\
          \ save you time. Thus\nsaving you money. \n The stack template format(s)\
          \ \n Heat is modelled after Amazon's CloudFormation\nservice, and endeavours\
          \ to maintain some degree of compatibility with this\nservice. Hence Heat\
          \ supports two different template formats. \n \n The first is a JSON based\
          \ implementation that\n  mimics the Amazon specification. \n The second\
          \ is a YAML based native OpenStack\n  implementation termed 'HOT'. \n \n\
          \ We strongly recommend that you use the HOT format. \n The stack lifecycle\
          \ \n A template is created, using a standard text editor (such as Brackets).\n\
          It is then uploaded into the OpenStack Heat service, either by means of\
          \ the\nHeat command line client, or the Horizon dashboard. \n If uploaded\
          \ via the command line client, the engine expects any mandatory\nparameters\
          \ to be provided as arguments added at the point the template was\nuploaded.\
          \ \n If, however, uploaded via the dashboard, then the dashboard will create\
          \ an\ninput wizard that will step the person who uploaded the template through\
          \ the\nprocess of entering the required parameter values. \n Once all the\
          \ required data has been gathered the stack is then provisioned and\nlaunched.\
          \ \n The template and its associated parameters will remain in the Heat\
          \ database\nuntil such time as the engine is instructed to destroy the stack.\
          \ \n At that point all the provisioned infrastructure will be destroyed,\
          \ its\nresources released, and then the template and its parameters will\
          \ be removed\nfrom the Heat database \n More information \n The following\
          \ pages offer more in depth technical information on using Heat in\nthe\
          \ NeCTAR cloud. \n \n \nEnough YAML to read a template (useful if you don't\
          \ know YAML) \n A walk through of a YAML template \n Actions that can be\
          \ performed \n The command line client \n The dashboard \n Preparing your\
          \ images - you need more than just cloud-init! \n Good practices \n Debugging\
          \ \n Oddities and gotcha's \n Supported resources \n \n Further links \n\
          \ \n \nNeCTAR sample templates -\n  a set of templates that have been run\
          \ against the NeCTAR cloud. \n The OpenStack End User Guide Heat\n  page.\
          \ \n The Heat wiki\n \n The Heat template guide\n \n The command line client\n\
          \ \n "
        description: "<h1>\n<img alt=\"flame logo\" src=\"https://github.com/NeCTAR-RC/nectarcloud-tier0doco/blob/master/articles/Cloud%20Expert--DOCID19/Heat--DOCID42/images/glossy_flame.png?raw=true\"\
          > Heat</h1>\n<p>Heat is a template driven service that automates the management\
          \ of the entire\nlifecycle of your application on the NeCTAR cloud.</p>\n\
          <p>A 'template driven service' simply means that you define your application's\n\
          requirements in a human readable text file - the template. In this file\
          \ you to\ndescribe both the infrastructure and its relationships that your\
          \ application\nwill need to run on the NeCTAR cloud.</p>\n<p>Heat then uses\
          \ this template to provision the required infrastructure and\nmanage the\
          \ lifecycle of your application from start to finish. This template,\nand\
          \ the infrastructure that it has created, is termed a 'stack'.</p>\n<p>As\
          \ part of the life cycle management, the Heat service supports both scaling\
          \ on\ndemand and the freeing up of infrastructure once the application is\
          \ finished.</p>\n<p>Heat integrates well with configuration management tools,\
          \ such as Chef and\nPuppet. Thus the Heat service offers executable documentation\
          \ of your\napplication's deployment and lifecycle, making your deployments\
          \ repeatable and\nreliable. The net effect is to limit human error and to\
          \ save you time. Thus\nsaving you money.</p>\n<h2>The stack template format(s)</h2>\n\
          <p>Heat is modelled after Amazon's <a href=\"http://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/Welcome.html\"\
          >CloudFormation</a>\nservice, and endeavours to maintain some degree of\
          \ compatibility with this\nservice. Hence Heat supports two different template\
          \ formats.</p>\n<ul>\n<li>The first is a <a href=\"http://www.json.org/\"\
          >JSON</a> based implementation that\n  mimics the Amazon specification.</li>\n\
          <li>The second is a <a href=\"http://www.yaml.org/\">YAML</a> based native\
          \ OpenStack\n  implementation termed 'HOT'.</li>\n</ul>\n<p>We strongly\
          \ recommend that you use the HOT format.</p>\n<h2>The stack lifecycle</h2>\n\
          <p>A template is created, using a standard text editor (such as <a href=\"\
          http://brackets.io/\">Brackets</a>).\nIt is then uploaded into the OpenStack\
          \ Heat service, either by means of the\nHeat command line client, or the\
          \ Horizon dashboard.</p>\n<p>If uploaded via the command line client, the\
          \ engine expects any mandatory\nparameters to be provided as arguments added\
          \ at the point the template was\nuploaded.</p>\n<p>If, however, uploaded\
          \ via the dashboard, then the dashboard will create an\ninput wizard that\
          \ will step the person who uploaded the template through the\nprocess of\
          \ entering the required parameter values.</p>\n<p>Once all the required\
          \ data has been gathered the stack is then provisioned and\nlaunched.</p>\n\
          <p>The template and its associated parameters will remain in the Heat database\n\
          until such time as the engine is instructed to destroy the stack.</p>\n\
          <p>At that point all the provisioned infrastructure will be destroyed, its\n\
          resources released, and then the template and its parameters will be removed\n\
          from the Heat database</p>\n<h2>More information</h2>\n<p>The following\
          \ pages offer more in depth technical information on using Heat in\nthe\
          \ NeCTAR cloud.</p>\n<ul>\n<li>\n<a href=\"Introduction%20to%20YAML--DOCID48.md\"\
          >Enough YAML to read a template</a> (useful if you don't know YAML)</li>\n\
          <li>A walk through of a YAML template</li>\n<li>Actions that can be performed</li>\n\
          <li>The command line client</li>\n<li>The dashboard</li>\n<li>Preparing\
          \ your images - you need more than just cloud-init!</li>\n<li>Good practices</li>\n\
          <li>Debugging</li>\n<li>Oddities and gotcha's</li>\n<li><a href=\"https://github.com/NeCTAR-RC/heat-templates\"\
          >Supported resources</a></li>\n</ul>\n<h2>Further links</h2>\n<ul>\n<li>\n\
          <a href=\"https://github.com/NeCTAR-RC/heat-templates\">NeCTAR sample templates</a>\
          \ -\n  a set of templates that have been run against the NeCTAR cloud.</li>\n\
          <li>The OpenStack End User Guide <a href=\"http://docs.openstack.org/user-guide/dashboard_stacks.html\"\
          >Heat</a>\n  page.</li>\n<li>The Heat <a href=\"https://wiki.openstack.org/wiki/Heat\"\
          >wiki</a>\n</li>\n<li>The Heat <a href=\"http://docs.openstack.org/developer/heat/template_guide/\"\
          >template guide</a>\n</li>\n<li>The <a href=\"http://docs.openstack.org/user-guide/cli_create_and_manage_stacks.html\"\
          >command line client</a>\n</li>\n</ul>"
        folder:
          category_id: 6000122279
          created_at: '2015-09-03T01:28:02-04:00'
          customer_folders: []
          description: Heat
          id: 6000190148
          is_default: false
          language_id: 6
          name: Heat
          parent_id: 6000190148
          position: 5
          updated_at: '2015-09-03T01:28:02-04:00'
          visibility: 1
        folder_id: 6000190148
        hits: 0
        id: 6000055383
        int_01: null
        int_02: null
        int_03: null
        language_id: 6
        modified_at: '2015-09-03T01:28:19-04:00'
        modified_by: null
        outdated: false
        parent_id: 6000055383
        position: 1
        seo_data: {}
        status: 2
        string_01: null
        string_02: null
        tags: []
        thumbs_down: 0
        thumbs_up: 0
        title: Introduction to HEAT
        updated_at: '2015-09-03T01:28:19-04:00'
        user_id: 6002464727
  html: "<h1><img alt=\"flame logo\" src=\"https://github.com/NeCTAR-RC/nectarcloud-tier0doco/blob/master/articles/Cloud\
    \ Expert--DOCID19/Heat--DOCID42/images/glossy_flame.png?raw=true\"> Heat</h1>\n\
    <p>Heat is a template driven service that automates the management of the entire\n\
    lifecycle of your application on the NeCTAR cloud.</p>\n<p>A 'template driven\
    \ service' simply means that you define your application's\nrequirements in a\
    \ human readable text file - the template. In this file you to\ndescribe both\
    \ the infrastructure and its relationships that your application\nwill need to\
    \ run on the NeCTAR cloud.</p>\n<p>Heat then uses this template to provision the\
    \ required infrastructure and\nmanage the lifecycle of your application from start\
    \ to finish. This template,\nand the infrastructure that it has created, is termed\
    \ a 'stack'.</p>\n<p>As part of the life cycle management, the Heat service supports\
    \ both scaling on\ndemand and the freeing up of infrastructure once the application\
    \ is finished.</p>\n<p>Heat integrates well with configuration management tools,\
    \ such as Chef and\nPuppet. Thus the Heat service offers executable documentation\
    \ of your\napplication's deployment and lifecycle, making your deployments repeatable\
    \ and\nreliable. The net effect is to limit human error and to save you time.\
    \ Thus\nsaving you money.</p>\n<h2>The stack template format(s)</h2>\n<p>Heat\
    \ is modelled after Amazon's <a href=\"http://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/Welcome.html\"\
    >CloudFormation</a>\nservice, and endeavours to maintain some degree of compatibility\
    \ with this\nservice. Hence Heat supports two different template formats.</p>\n\
    <ul>\n<li>The first is a <a href=\"http://www.json.org/\">JSON</a> based implementation\
    \ that\n  mimics the Amazon specification.</li>\n<li>The second is a <a href=\"\
    http://www.yaml.org/\">YAML</a> based native OpenStack\n  implementation termed\
    \ 'HOT'.</li>\n</ul>\n<p>We strongly recommend that you use the HOT format.</p>\n\
    <h2>The stack lifecycle</h2>\n<p>A template is created, using a standard text\
    \ editor (such as <a href=\"http://brackets.io/\">Brackets</a>).\nIt is then uploaded\
    \ into the OpenStack Heat service, either by means of the\nHeat command line client,\
    \ or the Horizon dashboard.</p>\n<p>If uploaded via the command line client, the\
    \ engine expects any mandatory\nparameters to be provided as arguments added at\
    \ the point the template was\nuploaded.</p>\n<p>If, however, uploaded via the\
    \ dashboard, then the dashboard will create an\ninput wizard that will step the\
    \ person who uploaded the template through the\nprocess of entering the required\
    \ parameter values.</p>\n<p>Once all the required data has been gathered the stack\
    \ is then provisioned and\nlaunched.</p>\n<p>The template and its associated parameters\
    \ will remain in the Heat database\nuntil such time as the engine is instructed\
    \ to destroy the stack.</p>\n<p>At that point all the provisioned infrastructure\
    \ will be destroyed, its\nresources released, and then the template and its parameters\
    \ will be removed\nfrom the Heat database</p>\n<h2>More information</h2>\n<p>The\
    \ following pages offer more in depth technical information on using Heat in\n\
    the NeCTAR cloud.</p>\n<ul>\n<li><a href=\"Introduction to YAML--DOCID48.md\"\
    >Enough YAML to read a template</a> (useful if you don't know YAML)</li>\n<li>A\
    \ walk through of a YAML template</li>\n<li>Actions that can be performed</li>\n\
    <li>The command line client</li>\n<li>The dashboard</li>\n<li>Preparing your images\
    \ - you need more than just cloud-init!</li>\n<li>Good practices</li>\n<li>Debugging</li>\n\
    <li>Oddities and gotcha's</li>\n<li><a href=\"https://github.com/NeCTAR-RC/heat-templates\"\
    >Supported resources</a></li>\n</ul>\n<h2>Further links</h2>\n<ul>\n<li><a href=\"\
    https://github.com/NeCTAR-RC/heat-templates\">NeCTAR sample templates</a> -\n\
    \  a set of templates that have been run against the NeCTAR cloud.</li>\n<li>The\
    \ OpenStack End User Guide <a href=\"http://docs.openstack.org/user-guide/dashboard_stacks.html\"\
    >Heat</a>\n  page.</li>\n<li>The Heat <a href=\"https://wiki.openstack.org/wiki/Heat\"\
    >wiki</a></li>\n<li>The Heat <a href=\"http://docs.openstack.org/developer/heat/template_guide/\"\
    >template guide</a></li>\n<li>The <a href=\"http://docs.openstack.org/user-guide/cli_create_and_manage_stacks.html\"\
    >command line client</a></li>\n</ul>"
  parent: 42
  sha1: de3c11e8ea7d0655134160ab99e1e6eb958fd77b
  title: Introduction to HEAT
47:
  freshdesk:
    fd_attributes:
      article:
        art_type: 1
        bool_01: null
        created_at: '2015-09-03T01:28:20-04:00'
        datetime_01: null
        delta: true
        desc_un_html: " Walk through of a YAML template \n Template sections \n A\
          \ Heat template is divided into several sections. These are the sections\
          \ that\nwill typically appear in a Heat template: \n \n \nheat_template_version\
          \ - A field that allows you to specify which version\n   of Heat the template\
          \ was written for (optional) \n \ndescription - A field that allows you\
          \ to describe the intent of the template\n  to a human audience (optional)\
          \ \n \nparameters - The specification of any arguments that the user might\
          \ be\n  required to provide (optional) \n \nresources - The specification\
          \ of the OpenStack resources that are to be\n  created (mandatory) \n \n\
          outputs - Any expected values that are to be returned once the template\n\
          \  has been processed (optional). \n \n The following table contains a guided\
          \ tour of a template\nin the NeCTAR sample template repository\nthat will\
          \ install the Apache web server on a single Ubuntu instance. \n\n\n\nSection\n\
          Template content\n\n\n\n\nVersion indicator\n\n\n\n\n The first line of\
          \ a YAML template should list a version indicator.\nIf present Heat will\
          \ parse the file  appropriately. If not present then\nHeat will assume that\
          \ the file adheres to the most recent specification. \n\n\n\nSection\nTemplate\
          \ content\n\n\n\n\nDescription\n\n\n\n\n Description is optional section\
          \ that allows you to provide a description of\nthe template. \n\n\n\nSection\n\
          Template content\n\n\n\n\nParameters\n\n\n\n\n Parameters is an optional\
          \ section that allows you to specify any input\nparameters that might be\
          \ required when the configuration described in the\ntemplate is built. \n\
          \n\n\nSection\nTemplate content\n\n\n\n\nParameters\n\n\n\n\n Each parameter\
          \ is in its own nested block, with the name appearing in\nthe first line,\
          \ and its attributes as further nested elements. \n\n\n\nSection\nTemplate\
          \ content\n\n\n\n\nParameters\n\n\n\n\n \n \ntype is a mandatory element\
          \ for a parameter that can be one of:\n  string, number, json or comma_delimited_list\n\
          \ \n \ndescription is an optional attribute that provided guidance to people\n\
          \  using the template. \n \n\n\n\nSection\nTemplate content\n\n\n\n\nParameters\n\
          \n\n\n\n \n \ndefault is an optional attribute that provides a default value\
          \ for\n  the parameter. \n Constraints on the user entered value can also\
          \ be set. \n \n\n\n\nSection\nTemplate content\n\n\n\n\nResources\n\n\n\n\
          \n Resources is a mandatory section that defines the resources that the\n\
          application will need. \n\n\n\nSection\nTemplate content\n\n\n\n\nResources\n\
          \n\n\n\n Each resource is in its own nested block, with the name appearing\
          \ in the\nfirst line, and attributes as  further nested elements \n Type\
          \ defines the OpenStack resource to be built. The complete list\nsupported\
          \ can be found in the template guide\nThis resource type will build a security\
          \ group. \n Each resource has its own attribute set. These are documented\
          \ in the\ntemplate guide - e.g.: for the AWS::EC2::SecurityGroup \n\n\n\n\
          Section\nTemplate content\n\n\n\n\nResources\n\n\n\n\n This resource type\
          \ builds an instance with apache installed. \n The AWS::CloudFormation::Init\
          \ section provides instructions as to what\nshould be done on the instance\
          \ once it has booted. \n Fn::Select is a function that will select an item\
          \ from a list. \n get_param is a function that returns the value of the\
          \ named parameter\nthat was set by the user. \n The Heat manual contains\
          \ a complete list of built in functions\nCurrently NeCTAR supports releases\
          \ up to Juno. \n UserData is a mechanism by which information can be passed\
          \ to an instance at\nlaunch time. Typically this will be either a a shell\
          \ script or a configuration\nfile. \n Note that the chosen image for the\
          \ instance must have the cloudinit\npackaged installed for AWS::CloudFormation::Init\
          \ to work. \n\n\n\nSection\nTemplate content\n\n\n\n\nResources\n\n\n\n\n\
          \ These resource types will notify the heat engine when the software is\n\
          fully installed on the instance. \n\n\n\nSection\nTemplate content\n\n\n\
          \n\nOutputs\n\n\n\n\n The outputs will show once the heat engine has finished\
          \ building the template. "
        description: "<h1>Walk through of a YAML template</h1>\n<h2>Template sections</h2>\n\
          <p>A Heat template is divided into several sections. These are the sections\
          \ that\nwill typically appear in a Heat template:</p>\n<ul>\n<li>\n<code>heat_template_version</code>\
          \ - A field that allows you to specify which version\n   of Heat the template\
          \ was written for (optional)</li>\n<li>\n<code>description</code> - A field\
          \ that allows you to describe the intent of the template\n  to a human audience\
          \ (optional)</li>\n<li>\n<code>parameters</code> - The specification of\
          \ any arguments that the user might be\n  required to provide (optional)</li>\n\
          <li>\n<code>resources</code> - The specification of the OpenStack resources\
          \ that are to be\n  created (mandatory)</li>\n<li>\n<code>outputs</code>\
          \ - Any expected values that are to be returned once the template\n  has\
          \ been processed (optional).</li>\n</ul>\n<p>The following table contains\
          \ a guided tour of a <a href=\"https://raw.githubusercontent.com/NeCTAR-RC/heat-templates/master/juno/Ubuntu/apache_single_instance_aws.yaml\"\
          >template</a>\nin the <a href=\"https://github.com/NeCTAR-RC/heat-templates\"\
          >NeCTAR sample template repository</a>\nthat will install the Apache web\
          \ server on a single Ubuntu instance.</p>\n<table>\n<thead>\n<tr>\n<th>Section</th>\n\
          <th>Template content</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Version indicator</td>\n\
          <td><img alt=\"version info\" src=\"https://github.com/NeCTAR-RC/nectarcloud-tier0doco/blob/master/articles/Cloud%20Expert--DOCID19/Heat--DOCID42/images/heat_template_version.png?raw=true\"\
          ></td>\n</tr>\n</tbody>\n</table>\n<p>The first line of a YAML template\
          \ should list a version indicator.\nIf present Heat will parse the file\
          \  appropriately. If not present then\nHeat will assume that the file adheres\
          \ to the most recent specification.</p>\n<table>\n<thead>\n<tr>\n<th>Section</th>\n\
          <th>Template content</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Description</td>\n\
          <td><img alt=\"description\" src=\"https://github.com/NeCTAR-RC/nectarcloud-tier0doco/blob/master/articles/Cloud%20Expert--DOCID19/Heat--DOCID42/images/heat_description.png?raw=true\"\
          ></td>\n</tr>\n</tbody>\n</table>\n<p>Description is optional section that\
          \ allows you to provide a description of\nthe template.</p>\n<table>\n<thead>\n\
          <tr>\n<th>Section</th>\n<th>Template content</th>\n</tr>\n</thead>\n<tbody>\n\
          <tr>\n<td>Parameters</td>\n<td><img alt=\"parameters\" src=\"https://github.com/NeCTAR-RC/nectarcloud-tier0doco/blob/master/articles/Cloud%20Expert--DOCID19/Heat--DOCID42/images/heat_parameters.png?raw=true\"\
          ></td>\n</tr>\n</tbody>\n</table>\n<p>Parameters is an optional section\
          \ that allows you to specify any input\nparameters that might be required\
          \ when the configuration described in the\ntemplate is built.</p>\n<table>\n\
          <thead>\n<tr>\n<th>Section</th>\n<th>Template content</th>\n</tr>\n</thead>\n\
          <tbody>\n<tr>\n<td>Parameters</td>\n<td><img alt=\"key name\" src=\"https://github.com/NeCTAR-RC/nectarcloud-tier0doco/blob/master/articles/Cloud%20Expert--DOCID19/Heat--DOCID42/images/heat_key_name.png?raw=true\"\
          ></td>\n</tr>\n</tbody>\n</table>\n<p>Each parameter is in its own nested\
          \ block, with the name appearing in\nthe first line, and its attributes\
          \ as further nested elements.</p>\n<table>\n<thead>\n<tr>\n<th>Section</th>\n\
          <th>Template content</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Parameters</td>\n\
          <td><img alt=\"instance type\" src=\"https://github.com/NeCTAR-RC/nectarcloud-tier0doco/blob/master/articles/Cloud%20Expert--DOCID19/Heat--DOCID42/images/heat_instance_type.png?raw=true\"\
          ></td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>\n<code>type</code> is a mandatory\
          \ element for a parameter that can be one of:\n  <code>string</code>, <code>number</code>,\
          \ <code>json</code> or <code>comma_delimited_list</code>\n</li>\n<li>\n\
          <code>description</code> is an optional attribute that provided guidance\
          \ to people\n  using the template.</li>\n</ul>\n<table>\n<thead>\n<tr>\n\
          <th>Section</th>\n<th>Template content</th>\n</tr>\n</thead>\n<tbody>\n\
          <tr>\n<td>Parameters</td>\n<td><img alt=\"image name\" src=\"https://github.com/NeCTAR-RC/nectarcloud-tier0doco/blob/master/articles/Cloud%20Expert--DOCID19/Heat--DOCID42/images/heat_image_name.png?raw=true\"\
          ></td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>\n<code>default</code> is an\
          \ optional attribute that provides a default value for\n  the parameter.</li>\n\
          <li>Constraints on the user entered value can also be set.</li>\n</ul>\n\
          <table>\n<thead>\n<tr>\n<th>Section</th>\n<th>Template content</th>\n</tr>\n\
          </thead>\n<tbody>\n<tr>\n<td>Resources</td>\n<td><img alt=\"resources\"\
          \ src=\"https://github.com/NeCTAR-RC/nectarcloud-tier0doco/blob/master/articles/Cloud%20Expert--DOCID19/Heat--DOCID42/images/heat_resources.png?raw=true\"\
          ></td>\n</tr>\n</tbody>\n</table>\n<p>Resources is a mandatory section that\
          \ defines the resources that the\napplication will need.</p>\n<table>\n\
          <thead>\n<tr>\n<th>Section</th>\n<th>Template content</th>\n</tr>\n</thead>\n\
          <tbody>\n<tr>\n<td>Resources</td>\n<td><img alt=\"web security group\" src=\"\
          https://github.com/NeCTAR-RC/nectarcloud-tier0doco/blob/master/articles/Cloud%20Expert--DOCID19/Heat--DOCID42/images/heat_web_security_group.png?raw=true\"\
          ></td>\n</tr>\n</tbody>\n</table>\n<p>Each resource is in its own nested\
          \ block, with the name appearing in the\nfirst line, and attributes as \
          \ further nested elements</p>\n<p>Type defines the OpenStack resource to\
          \ be built. The complete list\nsupported can be found in the <a href=\"\
          http://docs.openstack.org/developer/heat/template_guide/\">template guide</a>\n\
          This resource type will build a security group.</p>\n<p>Each resource has\
          \ its own attribute set. These are documented in the\ntemplate guide - e.g.:\
          \ for the <a href=\"http://docs.openstack.org/developer/heat/template_guide/cfn.html#AWS::EC2::SecurityGroup\"\
          ><code>AWS::EC2::SecurityGroup</code></a></p>\n<table>\n<thead>\n<tr>\n\
          <th>Section</th>\n<th>Template content</th>\n</tr>\n</thead>\n<tbody>\n\
          <tr>\n<td>Resources</td>\n<td><img alt=\"apache server\" src=\"https://github.com/NeCTAR-RC/nectarcloud-tier0doco/blob/master/articles/Cloud%20Expert--DOCID19/Heat--DOCID42/images/heat_apache_server.png?raw=true\"\
          ></td>\n</tr>\n</tbody>\n</table>\n<p>This resource type builds an instance\
          \ with apache installed.</p>\n<p>The <code>AWS::CloudFormation::Init</code>\
          \ section provides instructions as to what\nshould be done on the instance\
          \ once it has booted.</p>\n<p><code>Fn::Select</code> is a function that\
          \ will select an item from a list.</p>\n<p><code>get_param</code> is a function\
          \ that returns the value of the named parameter\nthat was set by the user.</p>\n\
          <p>The Heat manual contains a complete list of <a href=\"http://docs.openstack.org/developer/heat/template_guide/hot_spec.html\"\
          >built in functions</a>\nCurrently NeCTAR supports releases up to Juno.</p>\n\
          <p>UserData is a mechanism by which information can be passed to an instance\
          \ at\nlaunch time. Typically this will be either a a shell script or a configuration\n\
          file.</p>\n<p>Note that the chosen image for the instance must have the\
          \ <code>cloudinit</code>\npackaged installed for <code>AWS::CloudFormation::Init</code>\
          \ to work.</p>\n<table>\n<thead>\n<tr>\n<th>Section</th>\n<th>Template content</th>\n\
          </tr>\n</thead>\n<tbody>\n<tr>\n<td>Resources</td>\n<td><img alt=\"apache\
          \ server\" src=\"https://github.com/NeCTAR-RC/nectarcloud-tier0doco/blob/master/articles/Cloud%20Expert--DOCID19/Heat--DOCID42/images/heat_wait_handle.png?raw=true\"\
          ></td>\n</tr>\n</tbody>\n</table>\n<p>These resource types will notify the\
          \ heat engine when the software is\nfully installed on the instance.</p>\n\
          <table>\n<thead>\n<tr>\n<th>Section</th>\n<th>Template content</th>\n</tr>\n\
          </thead>\n<tbody>\n<tr>\n<td>Outputs</td>\n<td><img alt=\"apache server\"\
          \ src=\"https://github.com/NeCTAR-RC/nectarcloud-tier0doco/blob/master/articles/Cloud%20Expert--DOCID19/Heat--DOCID42/images/heat_outputs.png?raw=true\"\
          ></td>\n</tr>\n</tbody>\n</table>\n<p>The outputs will show once the heat\
          \ engine has finished building the template.</p>"
        folder:
          category_id: 6000122279
          created_at: '2015-09-03T01:28:02-04:00'
          customer_folders: []
          description: Heat
          id: 6000190148
          is_default: false
          language_id: 6
          name: Heat
          parent_id: 6000190148
          position: 5
          updated_at: '2015-09-03T01:28:02-04:00'
          visibility: 1
        folder_id: 6000190148
        hits: 0
        id: 6000055384
        int_01: null
        int_02: null
        int_03: null
        language_id: 6
        modified_at: '2015-09-03T01:28:20-04:00'
        modified_by: null
        outdated: false
        parent_id: 6000055384
        position: 2
        seo_data: {}
        status: 2
        string_01: null
        string_02: null
        tags: []
        thumbs_down: 0
        thumbs_up: 0
        title: Heat Template Walk Through
        updated_at: '2015-09-03T01:28:20-04:00'
        user_id: 6002464727
  html: "<h1>Walk through of a YAML template</h1>\n<h2>Template sections</h2>\n<p>A\
    \ Heat template is divided into several sections. These are the sections that\n\
    will typically appear in a Heat template:</p>\n<ul>\n<li><code>heat_template_version</code>\
    \ - A field that allows you to specify which version\n   of Heat the template\
    \ was written for (optional)</li>\n<li><code>description</code> - A field that\
    \ allows you to describe the intent of the template\n  to a human audience (optional)</li>\n\
    <li><code>parameters</code> - The specification of any arguments that the user\
    \ might be\n  required to provide (optional)</li>\n<li><code>resources</code>\
    \ - The specification of the OpenStack resources that are to be\n  created (mandatory)</li>\n\
    <li><code>outputs</code> - Any expected values that are to be returned once the\
    \ template\n  has been processed (optional).</li>\n</ul>\n<p>The following table\
    \ contains a guided tour of a <a href=\"https://raw.githubusercontent.com/NeCTAR-RC/heat-templates/master/juno/Ubuntu/apache_single_instance_aws.yaml\"\
    >template</a>\nin the <a href=\"https://github.com/NeCTAR-RC/heat-templates\"\
    >NeCTAR sample template repository</a>\nthat will install the Apache web server\
    \ on a single Ubuntu instance.</p>\n<table>\n<thead>\n<tr>\n<th>Section</th>\n\
    <th>Template content</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Version indicator</td>\n\
    <td><img alt=\"version info\" src=\"https://github.com/NeCTAR-RC/nectarcloud-tier0doco/blob/master/articles/Cloud\
    \ Expert--DOCID19/Heat--DOCID42/images/heat_template_version.png?raw=true\"></td>\n\
    </tr>\n</tbody>\n</table>\n<p>The first line of a YAML template should list a\
    \ version indicator.\nIf present Heat will parse the file  appropriately. If not\
    \ present then\nHeat will assume that the file adheres to the most recent specification.</p>\n\
    <table>\n<thead>\n<tr>\n<th>Section</th>\n<th>Template content</th>\n</tr>\n</thead>\n\
    <tbody>\n<tr>\n<td>Description</td>\n<td><img alt=\"description\" src=\"https://github.com/NeCTAR-RC/nectarcloud-tier0doco/blob/master/articles/Cloud\
    \ Expert--DOCID19/Heat--DOCID42/images/heat_description.png?raw=true\"></td>\n\
    </tr>\n</tbody>\n</table>\n<p>Description is optional section that allows you\
    \ to provide a description of\nthe template.</p>\n<table>\n<thead>\n<tr>\n<th>Section</th>\n\
    <th>Template content</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Parameters</td>\n\
    <td><img alt=\"parameters\" src=\"https://github.com/NeCTAR-RC/nectarcloud-tier0doco/blob/master/articles/Cloud\
    \ Expert--DOCID19/Heat--DOCID42/images/heat_parameters.png?raw=true\"></td>\n\
    </tr>\n</tbody>\n</table>\n<p>Parameters is an optional section that allows you\
    \ to specify any input\nparameters that might be required when the configuration\
    \ described in the\ntemplate is built.</p>\n<table>\n<thead>\n<tr>\n<th>Section</th>\n\
    <th>Template content</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Parameters</td>\n\
    <td><img alt=\"key name\" src=\"https://github.com/NeCTAR-RC/nectarcloud-tier0doco/blob/master/articles/Cloud\
    \ Expert--DOCID19/Heat--DOCID42/images/heat_key_name.png?raw=true\"></td>\n</tr>\n\
    </tbody>\n</table>\n<p>Each parameter is in its own nested block, with the name\
    \ appearing in\nthe first line, and its attributes as further nested elements.</p>\n\
    <table>\n<thead>\n<tr>\n<th>Section</th>\n<th>Template content</th>\n</tr>\n</thead>\n\
    <tbody>\n<tr>\n<td>Parameters</td>\n<td><img alt=\"instance type\" src=\"https://github.com/NeCTAR-RC/nectarcloud-tier0doco/blob/master/articles/Cloud\
    \ Expert--DOCID19/Heat--DOCID42/images/heat_instance_type.png?raw=true\"></td>\n\
    </tr>\n</tbody>\n</table>\n<ul>\n<li><code>type</code> is a mandatory element\
    \ for a parameter that can be one of:\n  <code>string</code>, <code>number</code>,\
    \ <code>json</code> or <code>comma_delimited_list</code></li>\n<li><code>description</code>\
    \ is an optional attribute that provided guidance to people\n  using the template.</li>\n\
    </ul>\n<table>\n<thead>\n<tr>\n<th>Section</th>\n<th>Template content</th>\n</tr>\n\
    </thead>\n<tbody>\n<tr>\n<td>Parameters</td>\n<td><img alt=\"image name\" src=\"\
    https://github.com/NeCTAR-RC/nectarcloud-tier0doco/blob/master/articles/Cloud\
    \ Expert--DOCID19/Heat--DOCID42/images/heat_image_name.png?raw=true\"></td>\n\
    </tr>\n</tbody>\n</table>\n<ul>\n<li><code>default</code> is an optional attribute\
    \ that provides a default value for\n  the parameter.</li>\n<li>Constraints on\
    \ the user entered value can also be set.</li>\n</ul>\n<table>\n<thead>\n<tr>\n\
    <th>Section</th>\n<th>Template content</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n\
    <td>Resources</td>\n<td><img alt=\"resources\" src=\"https://github.com/NeCTAR-RC/nectarcloud-tier0doco/blob/master/articles/Cloud\
    \ Expert--DOCID19/Heat--DOCID42/images/heat_resources.png?raw=true\"></td>\n</tr>\n\
    </tbody>\n</table>\n<p>Resources is a mandatory section that defines the resources\
    \ that the\napplication will need.</p>\n<table>\n<thead>\n<tr>\n<th>Section</th>\n\
    <th>Template content</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Resources</td>\n\
    <td><img alt=\"web security group\" src=\"https://github.com/NeCTAR-RC/nectarcloud-tier0doco/blob/master/articles/Cloud\
    \ Expert--DOCID19/Heat--DOCID42/images/heat_web_security_group.png?raw=true\"\
    ></td>\n</tr>\n</tbody>\n</table>\n<p>Each resource is in its own nested block,\
    \ with the name appearing in the\nfirst line, and attributes as  further nested\
    \ elements</p>\n<p>Type defines the OpenStack resource to be built. The complete\
    \ list\nsupported can be found in the <a href=\"http://docs.openstack.org/developer/heat/template_guide/\"\
    >template guide</a>\nThis resource type will build a security group.</p>\n<p>Each\
    \ resource has its own attribute set. These are documented in the\ntemplate guide\
    \ - e.g.: for the <a href=\"http://docs.openstack.org/developer/heat/template_guide/cfn.html#AWS::EC2::SecurityGroup\"\
    ><code>AWS::EC2::SecurityGroup</code></a></p>\n<table>\n<thead>\n<tr>\n<th>Section</th>\n\
    <th>Template content</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Resources</td>\n\
    <td><img alt=\"apache server\" src=\"https://github.com/NeCTAR-RC/nectarcloud-tier0doco/blob/master/articles/Cloud\
    \ Expert--DOCID19/Heat--DOCID42/images/heat_apache_server.png?raw=true\"></td>\n\
    </tr>\n</tbody>\n</table>\n<p>This resource type builds an instance with apache\
    \ installed.</p>\n<p>The <code>AWS::CloudFormation::Init</code> section provides\
    \ instructions as to what\nshould be done on the instance once it has booted.</p>\n\
    <p><code>Fn::Select</code> is a function that will select an item from a list.</p>\n\
    <p><code>get_param</code> is a function that returns the value of the named parameter\n\
    that was set by the user.</p>\n<p>The Heat manual contains a complete list of\
    \ <a href=\"http://docs.openstack.org/developer/heat/template_guide/hot_spec.html\"\
    >built in functions</a>\nCurrently NeCTAR supports releases up to Juno.</p>\n\
    <p>UserData is a mechanism by which information can be passed to an instance at\n\
    launch time. Typically this will be either a a shell script or a configuration\n\
    file.</p>\n<p>Note that the chosen image for the instance must have the <code>cloudinit</code>\n\
    packaged installed for <code>AWS::CloudFormation::Init</code> to work.</p>\n<table>\n\
    <thead>\n<tr>\n<th>Section</th>\n<th>Template content</th>\n</tr>\n</thead>\n\
    <tbody>\n<tr>\n<td>Resources</td>\n<td><img alt=\"apache server\" src=\"https://github.com/NeCTAR-RC/nectarcloud-tier0doco/blob/master/articles/Cloud\
    \ Expert--DOCID19/Heat--DOCID42/images/heat_wait_handle.png?raw=true\"></td>\n\
    </tr>\n</tbody>\n</table>\n<p>These resource types will notify the heat engine\
    \ when the software is\nfully installed on the instance.</p>\n<table>\n<thead>\n\
    <tr>\n<th>Section</th>\n<th>Template content</th>\n</tr>\n</thead>\n<tbody>\n\
    <tr>\n<td>Outputs</td>\n<td><img alt=\"apache server\" src=\"https://github.com/NeCTAR-RC/nectarcloud-tier0doco/blob/master/articles/Cloud\
    \ Expert--DOCID19/Heat--DOCID42/images/heat_outputs.png?raw=true\"></td>\n</tr>\n\
    </tbody>\n</table>\n<p>The outputs will show once the heat engine has finished\
    \ building the template.</p>"
  parent: 42
  sha1: 6be381c7cebba06fe61e16c46dcc06ecdf5ebc69
  title: Heat Template Walk Through
48:
  freshdesk:
    fd_attributes:
      article:
        art_type: 1
        bool_01: null
        created_at: '2015-09-03T01:28:21-04:00'
        datetime_01: null
        delta: true
        desc_un_html: " Just enough YAML to read a template \n Heat templates are\
          \ written in a format named 'YAML'. This\nis a short guide that will, hopefully,\
          \ give you enough background to be able\nto work with heat templates. \n\
          \ YAML \n YAML is a human readable data format. \n It's not a markup language:\
          \ the format of the content gives the meaning. There\nare no embedded tags!\
          \ Hence indentation and justification are important. \n Comments are preceded\
          \ by a hash. A hash can appear anywhere on a line, and will\nmark everything\
          \ to the end of the line as being part of the comment. \n ```yaml \n this\
          \ is a comment \n ``` \n Data is stored in key value maps, wiht the key\
          \ value pairs separated by a colon. \n yaml\ndate: 2014-01-14 \n String\
          \ values can be indicated by no quotes, single quotes, or double quotes.\
          \ \n yaml\nfirst-name: 'Verity'\nsurname: \"Stobs\"\npublication: The Register\
          \ \n Hashes in string values demarcated by quotes are not seen as the start\
          \ of a comment. \n yaml\nexample: \"# this is not a comment\" # but this\
          \ is \n Double quoted strings can contain escaped characters, such as '\\\
          n' (newline). \n yaml\nexample: \"This is \\n a new line\" \n '>' Indicates\
          \ that the following block of lines is a string value that will\nhave each\
          \ line break folded into a space. \n `yaml\nexample: >\n    This\n    has\
          \ a value # and it is 'This has a value' \n '|' indicates that the following\
          \ block of lines is a string value that will\nhave the line breaks preserved.\
          \ \n ```yaml\nexample: |\n    This\n    has a value # and it is 'This\\\
          nhas a value'\n```` \n The value associated with a key can be another map\
          \ of key value pairs. \n If this is the case then don't provide a value:\
          \ simply indent the new set of\nkey value pairs on the following lines.\
          \ So all lines prefixed by more space\nthan the parent key are contained\
          \ inside the parent key as a map of key value\npairs. \n All lines in the\
          \ same map have to have the same level of indentation. \n yaml\nname:\n\
          \    first: Verity\n    last: Stob \n Key value pairs have an alternate\
          \ compact syntax: {key: value, key: value, ...} \n yaml\nname: {first: Verity,\
          \ last: Stob} \n Lists are simply collections of ordered values: hence the\
          \ values in a list have\nno key. But the parent list must belong to a key.\
          \ \n List elements are indicated by a '-'. \n yaml\npublications:\n    -\
          \ '.EXE'\n    - 'Dr. Dobb's Journal'\n    - 'The Register' \n Lists have\
          \ an alternate compact syntax: [value, value, value,...]. \n yaml\npublications:\
          \ ['.EXE', 'Dr. Dobb's Journal', 'The Register'] \n Lists and Maps can be\
          \ nested in any order. \n yaml\nname:\n    first: Verity\n    last: Stob\n\
          \    publications:\n        - '.EXE'\n        - 'Dr. Dobb's Journal'\n \
          \       - 'The Register' "
        description: "<h1>Just enough YAML to read a template</h1>\n<p>Heat templates\
          \ are written in a format named '<a href=\"http://yaml.org/\">YAML</a>'.\
          \ This\nis a short guide that will, hopefully, give you enough background\
          \ to be able\nto work with heat templates.</p>\n<h2>YAML</h2>\n<p>YAML is\
          \ a human readable data format.</p>\n<p>It's not a markup language: the\
          \ format of the content gives the meaning. There\nare no embedded tags!\
          \ Hence indentation and justification are important.</p>\n<p>Comments are\
          \ preceded by a hash. A hash can appear anywhere on a line, and will\nmark\
          \ everything to the end of the line as being part of the comment.</p>\n\
          <p>```yaml</p>\n<h1>this is a comment</h1>\n<p>```</p>\n<p>Data is stored\
          \ in key value maps, wiht the key value pairs separated by a colon.</p>\n\
          <p><code>yaml\ndate: 2014-01-14</code></p>\n<p>String values can be indicated\
          \ by no quotes, single quotes, or double quotes.</p>\n<p><code>yaml\nfirst-name:\
          \ 'Verity'\nsurname: \"Stobs\"\npublication: The Register</code></p>\n<p>Hashes\
          \ in string values demarcated by quotes are not seen as the start of a comment.</p>\n\
          <p><code>yaml\nexample: \"# this is not a comment\" # but this is</code></p>\n\
          <p>Double quoted strings can contain escaped characters, such as <code>'\\\
          n'</code> (newline).</p>\n<p><code>yaml\nexample: \"This is \\n a new line\"\
          </code></p>\n<p><code>'&gt;'</code> Indicates that the following block of\
          \ lines is a string value that will\nhave each line break folded into a\
          \ space.</p>\n<p><code>`yaml\nexample: &gt;\n    This\n    has a value #\
          \ and it is 'This has a value'</code></p>\n<p><code>'|'</code> indicates\
          \ that the following block of lines is a string value that will\nhave the\
          \ line breaks preserved.</p>\n<p>```yaml\nexample: |\n    This\n    has\
          \ a value # and it is 'This\\nhas a value'\n````</p>\n<p>The value associated\
          \ with a key can be another map of key value pairs.</p>\n<p>If this is the\
          \ case then don't provide a value: simply indent the new set of\nkey value\
          \ pairs on the following lines. So all lines prefixed by more space\nthan\
          \ the parent key are contained inside the parent key as a map of key value\n\
          pairs.</p>\n<p>All lines in the same map have to have the same level of\
          \ indentation.</p>\n<p><code>yaml\nname:\n    first: Verity\n    last: Stob</code></p>\n\
          <p>Key value pairs have an alternate compact syntax: <code>{key: value,\
          \ key: value, ...}</code></p>\n<p><code>yaml\nname: {first: Verity, last:\
          \ Stob}</code></p>\n<p>Lists are simply collections of ordered values: hence\
          \ the values in a list have\nno key. But the parent list must belong to\
          \ a key.</p>\n<p>List elements are indicated by a <code>'-'</code>.</p>\n\
          <p><code>yaml\npublications:\n    - '.EXE'\n    - 'Dr. Dobb's Journal'\n\
          \    - 'The Register'</code></p>\n<p>Lists have an alternate compact syntax:\
          \ <code>[value, value, value,...]</code>.</p>\n<p><code>yaml\npublications:\
          \ ['.EXE', 'Dr. Dobb's Journal', 'The Register']</code></p>\n<p>Lists and\
          \ Maps can be nested in any order.</p>\n<p><code>yaml\nname:\n    first:\
          \ Verity\n    last: Stob\n    publications:\n        - '.EXE'\n        -\
          \ 'Dr. Dobb's Journal'\n        - 'The Register'</code></p>"
        folder:
          category_id: 6000122279
          created_at: '2015-09-03T01:28:02-04:00'
          customer_folders: []
          description: Heat
          id: 6000190148
          is_default: false
          language_id: 6
          name: Heat
          parent_id: 6000190148
          position: 5
          updated_at: '2015-09-03T01:28:02-04:00'
          visibility: 1
        folder_id: 6000190148
        hits: 0
        id: 6000055385
        int_01: null
        int_02: null
        int_03: null
        language_id: 6
        modified_at: '2015-09-03T01:28:21-04:00'
        modified_by: null
        outdated: false
        parent_id: 6000055385
        position: 3
        seo_data: {}
        status: 2
        string_01: null
        string_02: null
        tags: []
        thumbs_down: 0
        thumbs_up: 0
        title: Introduction to YAML
        updated_at: '2015-09-03T01:28:21-04:00'
        user_id: 6002464727
  html: "<h1>Just enough YAML to read a template</h1>\n<p>Heat templates are written\
    \ in a format named '<a href=\"http://yaml.org/\">YAML</a>'. This\nis a short\
    \ guide that will, hopefully, give you enough background to be able\nto work with\
    \ heat templates.</p>\n<h2>YAML</h2>\n<p>YAML is a human readable data format.</p>\n\
    <p>It's not a markup language: the format of the content gives the meaning. There\n\
    are no embedded tags! Hence indentation and justification are important.</p>\n\
    <p>Comments are preceded by a hash. A hash can appear anywhere on a line, and\
    \ will\nmark everything to the end of the line as being part of the comment.</p>\n\
    <p>```yaml</p>\n<h1>this is a comment</h1>\n<p>```</p>\n<p>Data is stored in key\
    \ value maps, wiht the key value pairs separated by a colon.</p>\n<p><code>yaml\n\
    date: 2014-01-14</code></p>\n<p>String values can be indicated by no quotes, single\
    \ quotes, or double quotes.</p>\n<p><code>yaml\nfirst-name: 'Verity'\nsurname:\
    \ \"Stobs\"\npublication: The Register</code></p>\n<p>Hashes in string values\
    \ demarcated by quotes are not seen as the start of a comment.</p>\n<p><code>yaml\n\
    example: \"# this is not a comment\" # but this is</code></p>\n<p>Double quoted\
    \ strings can contain escaped characters, such as <code>'\\n'</code> (newline).</p>\n\
    <p><code>yaml\nexample: \"This is \\n a new line\"</code></p>\n<p><code>'&gt;'</code>\
    \ Indicates that the following block of lines is a string value that will\nhave\
    \ each line break folded into a space.</p>\n<p><code>`yaml\nexample: &gt;\n  \
    \  This\n    has a value # and it is 'This has a value'</code></p>\n<p><code>'|'</code>\
    \ indicates that the following block of lines is a string value that will\nhave\
    \ the line breaks preserved.</p>\n<p>```yaml\nexample: |\n    This\n    has a\
    \ value # and it is 'This\\nhas a value'\n````</p>\n<p>The value associated with\
    \ a key can be another map of key value pairs.</p>\n<p>If this is the case then\
    \ don't provide a value: simply indent the new set of\nkey value pairs on the\
    \ following lines. So all lines prefixed by more space\nthan the parent key are\
    \ contained inside the parent key as a map of key value\npairs.</p>\n<p>All lines\
    \ in the same map have to have the same level of indentation.</p>\n<p><code>yaml\n\
    name:\n    first: Verity\n    last: Stob</code></p>\n<p>Key value pairs have an\
    \ alternate compact syntax: <code>{key: value, key: value, ...}</code></p>\n<p><code>yaml\n\
    name: {first: Verity, last: Stob}</code></p>\n<p>Lists are simply collections\
    \ of ordered values: hence the values in a list have\nno key. But the parent list\
    \ must belong to a key.</p>\n<p>List elements are indicated by a <code>'-'</code>.</p>\n\
    <p><code>yaml\npublications:\n    - '.EXE'\n    - 'Dr. Dobb's Journal'\n    -\
    \ 'The Register'</code></p>\n<p>Lists have an alternate compact syntax: <code>[value,\
    \ value, value,...]</code>.</p>\n<p><code>yaml\npublications: ['.EXE', 'Dr. Dobb's\
    \ Journal', 'The Register']</code></p>\n<p>Lists and Maps can be nested in any\
    \ order.</p>\n<p><code>yaml\nname:\n    first: Verity\n    last: Stob\n    publications:\n\
    \        - '.EXE'\n        - 'Dr. Dobb's Journal'\n        - 'The Register'</code></p>"
  parent: 42
  sha1: 831f265c1bdab3e82e173a6819f0fa2e61038b93
  title: Introduction to YAML
49:
  freshdesk:
    fd_attributes:
      article:
        art_type: 1
        bool_01: null
        created_at: '2015-09-03T01:28:23-04:00'
        datetime_01: null
        delta: true
        desc_un_html: " Security Recommendations \n This document lists a number of\
          \ Security Recommendations to help ensure the\nsafe running of your instances\
          \ on the cloud. Security is important, so please\nfollow these. We conduct\
          \ routine and random audits to determine the integrity\nof machine images\
          \ and running instances. If you have discovered a critical\nsecurity flaw,\
          \ or believe your machine has been compromised, please email\nsecurity@rc.nectar.org.au,\
          \ or for non-urgent security questions\nsupport@nectar.org.au. \n Mail Servers\
          \ \n If you run a mail server, make sure it only listens on the localhost\
          \ ip\naddress (127.0.0.1). For many clients, if you don't specify an SMTP\
          \ server\nwhen sending email, it will use the recipients SMTP server automatically.\
          \ This\nis probably what you want. Some nodes (Qld) disallow this and require\
          \ you to\nuse their SMTP server for outgoing mail. \n Enable Automatic Updates\
          \ \n All operating systems have the ability to apply updates automatically,\
          \ and its\neasy to turn this on. Please do so, and ask us if you need help.\
          \ \n Upgrade your kernel \n Some updates, such as a kernel upgrade require\
          \ a reboot of the instance. Please\nschedule this into your regular maintenance.\
          \ \n No open recursive name servers \n If you are running a DNS server,\
          \ please ensure you only allow recursion from\ntrusted hosts. \n Control\
          \ or disable access to your NTP server \n If you run an NTP server, limit\
          \ which systems can access it. Disable the\n'monlist' command as this can\
          \ be used as a denial of service vector on your\nsystem. For info about\
          \ DDoS by NTP, see\nthis article on Cloudflare \n Subscribe to security\
          \ announcements for your OS \n If there is a security problem with your\
          \ Operating System, you need to find\nout as soon as possible. Find the\
          \ appropriate mailing list and keep an eye\nout for anything that requires\
          \ urgent action. \n Run a restrictive firewall \n Your instances should\
          \ be configured so they allow the minimum access required\nto run their\
          \ service. Please use a host-based firewall, in conjunction with\nthe cloud-provided\
          \ firewall to manage access. \n Disable/Remove unneeded accounts \n Keep\
          \ an eye on the user accounts enabled on your system. Some applications\n\
          create default accounts which are insecure. \n Disable SSH password login\
          \ - use keys \n With enough time and compute power it is possible for passwords\
          \ to be brute\nforce attacked. The average SSH server deals with thousands\
          \ of such attacks\nevery week, so use ssh keys. Ubuntu provides some good\
          \ documentation \n Don't store keys on the image \n The cloud provides a\
          \ metadata service so you can download keys on boot, so\nyou don't need\
          \ to copy keys manually. This ensures that if your key is\ncompromised,\
          \ not all running instances of that image are compromised. \n Install ssh\
          \ attack banning tools \n Install a tools like fail2ban or denyhosts, which\
          \ checks log files for\nattempted breaches and then blocks malicious IP\
          \ addresses. \n Disable unneeded services \n Know what services run on your\
          \ image, and disable the unneeded ones before\nyou upload it. This reduces\
          \ the attack surface. \n Use Encrypted Communications \n Wherever possible,\
          \ use encrypted communications to avoid attacks which\nintercept data. \n\
          \ Use best-practices for logging \n Make sure that services are logging\
          \ to a secure location, that is as\ntamperproof as possible. If logging\
          \ remotely, ensure that it is done over\na secure channel so that eavesdroppers\
          \ cannot monitor what is happening on\nyour instance. "
        description: '<h1>Security Recommendations</h1>

          <p>This document lists a number of Security Recommendations to help ensure
          the

          safe running of your instances on the cloud. Security is important, so please

          follow these. We conduct routine and random audits to determine the integrity

          of machine images and running instances. If you have discovered a critical

          security flaw, or believe your machine has been compromised, please email

          <a href="mailto:security@rc.nectar.org.au">security@rc.nectar.org.au</a>,
          or for non-urgent security questions

          <a href="mailto:support@nectar.org.au">support@nectar.org.au</a>.</p>

          <h2>Mail Servers</h2>

          <p>If you run a mail server, make sure it only listens on the localhost
          ip

          address (127.0.0.1). For many clients, if you don''t specify an SMTP server

          when sending email, it will use the recipients SMTP server automatically.
          This

          is probably what you want. Some nodes (Qld) disallow this and require you
          to

          use their SMTP server for outgoing mail.</p>

          <h2>Enable Automatic Updates</h2>

          <p>All operating systems have the ability to apply updates automatically,
          and its

          easy to turn this on. Please do so, and ask us if you need help.</p>

          <h2>Upgrade your kernel</h2>

          <p>Some updates, such as a kernel upgrade require a reboot of the instance.
          Please

          schedule this into your regular maintenance.</p>

          <h2>No open recursive name servers</h2>

          <p>If you are running a DNS server, please ensure you only allow recursion
          from

          trusted hosts.</p>

          <h2>Control or disable access to your NTP server</h2>

          <p>If you run an NTP server, limit which systems can access it. Disable
          the

          ''monlist'' command as this can be used as a denial of service vector on
          your

          system. For info about DDoS by NTP, see

          <a href="https://blog.cloudflare.com/understanding-and-mitigating-ntp-based-ddos-attacks/"
          title="Cloudflare Understanding NTP DDoS">this article on Cloudflare</a></p>

          <h2>Subscribe to security announcements for your OS</h2>

          <p>If there is a security problem with your Operating System, you need to
          find

          out as soon as possible. Find the appropriate mailing list and keep an eye

          out for anything that requires urgent action.</p>

          <h2>Run a restrictive firewall</h2>

          <p>Your instances should be configured so they allow the minimum access
          required

          to run their service. Please use a host-based firewall, in conjunction with

          the cloud-provided firewall to manage access.</p>

          <h2>Disable/Remove unneeded accounts</h2>

          <p>Keep an eye on the user accounts enabled on your system. Some applications

          create default accounts which are insecure.</p>

          <h2>Disable SSH password login - use keys</h2>

          <p>With enough time and compute power it is possible for passwords to be
          brute

          force attacked. The average SSH server deals with thousands of such attacks

          every week, so use ssh keys. Ubuntu provides some good documentation</p>

          <h2>Don''t store keys on the image</h2>

          <p>The cloud provides a metadata service so you can download keys on boot,
          so

          you don''t need to copy keys manually. This ensures that if your key is

          compromised, not all running instances of that image are compromised.</p>

          <h2>Install ssh attack banning tools</h2>

          <p>Install a tools like fail2ban or denyhosts, which checks log files for

          attempted breaches and then blocks malicious IP addresses.</p>

          <h2>Disable unneeded services</h2>

          <p>Know what services run on your image, and disable the unneeded ones before

          you upload it. This reduces the attack surface.</p>

          <h2>Use Encrypted Communications</h2>

          <p>Wherever possible, use encrypted communications to avoid attacks which

          intercept data.</p>

          <h2>Use best-practices for logging</h2>

          <p>Make sure that services are logging to a secure location, that is as

          tamperproof as possible. If logging remotely, ensure that it is done over

          a secure channel so that eavesdroppers cannot monitor what is happening
          on

          your instance.</p>'
        folder:
          category_id: 6000122278
          created_at: '2015-09-03T01:28:05-04:00'
          customer_folders: []
          description: Cloud Expert
          id: 6000190151
          is_default: false
          language_id: 6
          name: Cloud Expert
          parent_id: 6000190151
          position: 3
          updated_at: '2015-09-03T01:28:05-04:00'
          visibility: 1
        folder_id: 6000190151
        hits: 0
        id: 6000055386
        int_01: null
        int_02: null
        int_03: null
        language_id: 6
        modified_at: '2015-09-03T01:28:23-04:00'
        modified_by: null
        outdated: false
        parent_id: 6000055386
        position: 1
        seo_data: {}
        status: 2
        string_01: null
        string_02: null
        tags: []
        thumbs_down: 0
        thumbs_up: 0
        title: Security Guidelines
        updated_at: '2015-09-03T01:28:23-04:00'
        user_id: 6002464727
  html: '<h1>Security Recommendations</h1>

    <p>This document lists a number of Security Recommendations to help ensure the

    safe running of your instances on the cloud. Security is important, so please

    follow these. We conduct routine and random audits to determine the integrity

    of machine images and running instances. If you have discovered a critical

    security flaw, or believe your machine has been compromised, please email

    <a href="&#109;&#97;&#105;&#108;&#116;&#111;&#58;&#115;&#101;&#99;&#117;&#114;&#105;&#116;&#121;&#64;&#114;&#99;&#46;&#110;&#101;&#99;&#116;&#97;&#114;&#46;&#111;&#114;&#103;&#46;&#97;&#117;">&#115;&#101;&#99;&#117;&#114;&#105;&#116;&#121;&#64;&#114;&#99;&#46;&#110;&#101;&#99;&#116;&#97;&#114;&#46;&#111;&#114;&#103;&#46;&#97;&#117;</a>,
    or for non-urgent security questions

    <a href="&#109;&#97;&#105;&#108;&#116;&#111;&#58;&#115;&#117;&#112;&#112;&#111;&#114;&#116;&#64;&#110;&#101;&#99;&#116;&#97;&#114;&#46;&#111;&#114;&#103;&#46;&#97;&#117;">&#115;&#117;&#112;&#112;&#111;&#114;&#116;&#64;&#110;&#101;&#99;&#116;&#97;&#114;&#46;&#111;&#114;&#103;&#46;&#97;&#117;</a>.</p>

    <h2>Mail Servers</h2>

    <p>If you run a mail server, make sure it only listens on the localhost ip

    address (127.0.0.1). For many clients, if you don''t specify an SMTP server

    when sending email, it will use the recipients SMTP server automatically. This

    is probably what you want. Some nodes (Qld) disallow this and require you to

    use their SMTP server for outgoing mail.</p>

    <h2>Enable Automatic Updates</h2>

    <p>All operating systems have the ability to apply updates automatically, and
    its

    easy to turn this on. Please do so, and ask us if you need help.</p>

    <h2>Upgrade your kernel</h2>

    <p>Some updates, such as a kernel upgrade require a reboot of the instance. Please

    schedule this into your regular maintenance.</p>

    <h2>No open recursive name servers</h2>

    <p>If you are running a DNS server, please ensure you only allow recursion from

    trusted hosts.</p>

    <h2>Control or disable access to your NTP server</h2>

    <p>If you run an NTP server, limit which systems can access it. Disable the

    ''monlist'' command as this can be used as a denial of service vector on your

    system. For info about DDoS by NTP, see

    <a href="https://blog.cloudflare.com/understanding-and-mitigating-ntp-based-ddos-attacks/"
    title="Cloudflare Understanding NTP DDoS">this article on Cloudflare</a></p>

    <h2>Subscribe to security announcements for your OS</h2>

    <p>If there is a security problem with your Operating System, you need to find

    out as soon as possible. Find the appropriate mailing list and keep an eye

    out for anything that requires urgent action.</p>

    <h2>Run a restrictive firewall</h2>

    <p>Your instances should be configured so they allow the minimum access required

    to run their service. Please use a host-based firewall, in conjunction with

    the cloud-provided firewall to manage access.</p>

    <h2>Disable/Remove unneeded accounts</h2>

    <p>Keep an eye on the user accounts enabled on your system. Some applications

    create default accounts which are insecure.</p>

    <h2>Disable SSH password login - use keys</h2>

    <p>With enough time and compute power it is possible for passwords to be brute

    force attacked. The average SSH server deals with thousands of such attacks

    every week, so use ssh keys. Ubuntu provides some good documentation</p>

    <h2>Don''t store keys on the image</h2>

    <p>The cloud provides a metadata service so you can download keys on boot, so

    you don''t need to copy keys manually. This ensures that if your key is

    compromised, not all running instances of that image are compromised.</p>

    <h2>Install ssh attack banning tools</h2>

    <p>Install a tools like fail2ban or denyhosts, which checks log files for

    attempted breaches and then blocks malicious IP addresses.</p>

    <h2>Disable unneeded services</h2>

    <p>Know what services run on your image, and disable the unneeded ones before

    you upload it. This reduces the attack surface.</p>

    <h2>Use Encrypted Communications</h2>

    <p>Wherever possible, use encrypted communications to avoid attacks which

    intercept data.</p>

    <h2>Use best-practices for logging</h2>

    <p>Make sure that services are logging to a secure location, that is as

    tamperproof as possible. If logging remotely, ensure that it is done over

    a secure channel so that eavesdroppers cannot monitor what is happening on

    your instance.</p>'
  parent: 22
  sha1: 7b4f6129465bb7b5fd211fc3744bebb505122d8b
  title: Security Guidelines
50:
  freshdesk:
    fd_attributes:
      article:
        art_type: 1
        bool_01: null
        created_at: '2015-09-03T01:28:24-04:00'
        datetime_01: null
        delta: true
        desc_un_html: " Incoming network access to your machines is usually required.\
          \ Security Groups\nare how to add network access. If you can't reach your\
          \ instance by SSH to login\nor by browser if it runs a Webserver additional\
          \ Security Group settings could\nbe needed. \n Adding Network Access \n\
          \ The default Security Group is empty and no incoming access is configured\
          \ until\nyou add rules to specify: \n \n which ports are available for connection\
          \ to your instance and... \n from which addresses your instance will accept\
          \ inbound traffic to the\n  open ports \n \n \n NOTE: If you do not specify\
          \ a security group at boot the default security\ngroup will be applied \n\
          \ \n \n Each rule adds further access, it never cancels or overrides another\
          \ rule. \n Rules can have overlapping ranges and addresses. \n Rules for\
          \ the same ports and addresses can be added to more than one\n  Security\
          \ Group \n \n Removing Network Access \n To remove access to a port or from\
          \ an address locate all security groups with\nrules relating to that port\
          \ or address, then \n \n remove or edit each applicable rule, OR \n do not\
          \ apply those Security Groups that contain the applicable rule(s) \n \n\
          \ Pre-Defined and Default Security Groups \n For Project Trials (pt-xxxx)\
          \ there are pre-defined security groups for\nconvenience. \n \n SSH opens\
          \ tcp port 22 to traffic from all sources (for logging via ssh) \n HTTP\
          \ opens tcp ports 80 and 443 to traffic from all sources (for\n  web servers)\
          \ \n ICMP opens all ICMP traffic from all sources (etc. to allow pinging\
          \ your\n  VMs IP address) \n \n For all other shared projects that are created\
          \ after an allocation request,\nthere is only the empty 'default' security\
          \ group at first. These Projects\nshare their security groups so all changes\
          \ should be made with caution as\nthey may affect instances by other users\
          \ sharing your Project. \n Managing Security Groups \n Sometimes it can\
          \ be convenient to organise rules into multiple Security\nGroups,\nfor example\
          \ \n \n apply only some or all groups depending on a instances purpose.\
          \ \n users experimenting with network access can remove groups and re-apply\n\
          \  them without re-creating rules each time \n testing rules on a temporary\
          \ security group and test Instance before\n  adding the same rules to Security\
          \ Groups already in use.\n  rules can appear in more than one Security Group\
          \ \n \n Applying Security Groups \n Security Groups are most conveniently\
          \ applied before Launching your\ninstance, multiple security groups can\
          \ be selected.\nHowever Security Groups can also be added or removed on\
          \ running instances. \n Click Launch then click the Security Groups field.\
          \ The default group is\npre-selected \n Outgoing traffic \n Outgoing traffic\
          \ is not blocked on any port:  connections that originate\nfrom your instance\
          \ to the outside world, are not blocked by Nectar\nOpenStack configuration\
          \ \n \n Security Note \n Using the Research Cloud creates a publicly accessible\
          \ server (depending on\nSecurity Groups) and therefore that machine can\
          \ be exploited. All users must\nread & follow our Security Guidelines. \n\
          \ "
        description: "<p>Incoming network access to your machines is usually required.\
          \ Security Groups\nare how to add network access. If you can't reach your\
          \ instance by SSH to login\nor by browser if it runs a Webserver additional\
          \ Security Group settings could\nbe needed.</p>\n<h2>Adding Network Access</h2>\n\
          <p>The default Security Group is empty and no incoming access is configured\
          \ until\nyou add rules to specify:</p>\n<ul>\n<li>which ports are available\
          \ for connection to your instance and...</li>\n<li>from which addresses\
          \ your instance will accept inbound traffic to the\n  open ports</li>\n\
          </ul>\n<blockquote>\n<p>NOTE: If you do not specify a security group at\
          \ boot the default security\ngroup will be applied</p>\n</blockquote>\n\
          <ul>\n<li>Each rule adds further access, it never cancels or overrides another\
          \ rule.</li>\n<li>Rules can have overlapping ranges and addresses.</li>\n\
          <li>Rules for the same ports and addresses can be added to more than one\n\
          \  Security Group</li>\n</ul>\n<h2>Removing Network Access</h2>\n<p>To remove\
          \ access to a port or from an address locate all security groups with\n\
          rules relating to that port or address, then</p>\n<ul>\n<li>remove or edit\
          \ each applicable rule, OR</li>\n<li>do not apply those Security Groups\
          \ that contain the applicable rule(s)</li>\n</ul>\n<h2>Pre-Defined and Default\
          \ Security Groups</h2>\n<p>For Project Trials (pt-xxxx) there are pre-defined\
          \ security groups for\nconvenience.</p>\n<ul>\n<li>SSH opens tcp port 22\
          \ to traffic from all sources (for logging via ssh)</li>\n<li>HTTP opens\
          \ tcp ports 80 and 443 to traffic from all sources (for\n  web servers)</li>\n\
          <li>ICMP opens all ICMP traffic from all sources (etc. to allow pinging\
          \ your\n  VMs IP address)</li>\n</ul>\n<p>For all other shared projects\
          \ that are created after an allocation request,\nthere is only the empty\
          \ 'default' security group at first. These Projects\nshare their security\
          \ groups so all changes should be made with caution as\nthey may affect\
          \ instances by other users sharing your Project.</p>\n<h2>Managing Security\
          \ Groups</h2>\n<p>Sometimes it can be convenient to organise rules into\
          \ multiple Security\nGroups,\nfor example</p>\n<ul>\n<li>apply only some\
          \ or all groups depending on a instances purpose.</li>\n<li>users experimenting\
          \ with network access can remove groups and re-apply\n  them without re-creating\
          \ rules each time</li>\n<li>testing rules on a temporary security group\
          \ and test Instance before\n  adding the same rules to Security Groups already\
          \ in use.\n  rules can appear in more than one Security Group</li>\n</ul>\n\
          <h2>Applying Security Groups</h2>\n<p>Security Groups are most conveniently\
          \ applied before Launching your\ninstance, multiple security groups can\
          \ be selected.\nHowever Security Groups can also be added or removed on\
          \ running instances.</p>\n<p>Click Launch then click the Security Groups\
          \ field. The default group is\npre-selected</p>\n<h2>Outgoing traffic</h2>\n\
          <p>Outgoing traffic is not blocked on any port:  connections that originate\n\
          from your instance to the outside world, are not blocked by Nectar\nOpenStack\
          \ configuration</p>\n<blockquote>\n<p>Security Note</p>\n<p>Using the Research\
          \ Cloud creates a publicly accessible server (depending on\nSecurity Groups)\
          \ and therefore that machine can be exploited. All users must\nread &amp;\
          \ follow our <a href=\"../NeCTAR%20Fundamentals/Security%20Guidelines.md\"\
          >Security Guidelines</a>.</p>\n</blockquote>"
        folder:
          category_id: 6000122278
          created_at: '2015-09-03T01:28:09-04:00'
          customer_folders: []
          description: NeCTAR Fundamentals
          id: 6000190155
          is_default: false
          language_id: 6
          name: NeCTAR Fundamentals
          parent_id: 6000190155
          position: 7
          updated_at: '2015-09-03T01:28:09-04:00'
          visibility: 1
        folder_id: 6000190155
        hits: 0
        id: 6000055387
        int_01: null
        int_02: null
        int_03: null
        language_id: 6
        modified_at: '2015-09-03T01:28:24-04:00'
        modified_by: null
        outdated: false
        parent_id: 6000055387
        position: 2
        seo_data: {}
        status: 2
        string_01: null
        string_02: null
        tags: []
        thumbs_down: 0
        thumbs_up: 0
        title: Security Groups
        updated_at: '2015-09-03T01:28:24-04:00'
        user_id: 6002464727
  html: "<p>Incoming network access to your machines is usually required. Security\
    \ Groups\nare how to add network access. If you can't reach your instance by SSH\
    \ to login\nor by browser if it runs a Webserver additional Security Group settings\
    \ could\nbe needed.</p>\n<h2>Adding Network Access</h2>\n<p>The default Security\
    \ Group is empty and no incoming access is configured until\nyou add rules to\
    \ specify:</p>\n<ul>\n<li>which ports are available for connection to your instance\
    \ and...</li>\n<li>from which addresses your instance will accept inbound traffic\
    \ to the\n  open ports</li>\n</ul>\n<blockquote>\n<p>NOTE: If you do not specify\
    \ a security group at boot the default security\ngroup will be applied</p>\n</blockquote>\n\
    <ul>\n<li>Each rule adds further access, it never cancels or overrides another\
    \ rule.</li>\n<li>Rules can have overlapping ranges and addresses.</li>\n<li>Rules\
    \ for the same ports and addresses can be added to more than one\n  Security Group</li>\n\
    </ul>\n<h2>Removing Network Access</h2>\n<p>To remove access to a port or from\
    \ an address locate all security groups with\nrules relating to that port or address,\
    \ then</p>\n<ul>\n<li>remove or edit each applicable rule, OR</li>\n<li>do not\
    \ apply those Security Groups that contain the applicable rule(s)</li>\n</ul>\n\
    <h2>Pre-Defined and Default Security Groups</h2>\n<p>For Project Trials (pt-xxxx)\
    \ there are pre-defined security groups for\nconvenience.</p>\n<ul>\n<li>SSH opens\
    \ tcp port 22 to traffic from all sources (for logging via ssh)</li>\n<li>HTTP\
    \ opens tcp ports 80 and 443 to traffic from all sources (for\n  web servers)</li>\n\
    <li>ICMP opens all ICMP traffic from all sources (etc. to allow pinging your\n\
    \  VMs IP address)</li>\n</ul>\n<p>For all other shared projects that are created\
    \ after an allocation request,\nthere is only the empty 'default' security group\
    \ at first. These Projects\nshare their security groups so all changes should\
    \ be made with caution as\nthey may affect instances by other users sharing your\
    \ Project.</p>\n<h2>Managing Security Groups</h2>\n<p>Sometimes it can be convenient\
    \ to organise rules into multiple Security\nGroups,\nfor example</p>\n<ul>\n<li>apply\
    \ only some or all groups depending on a instances purpose.</li>\n<li>users experimenting\
    \ with network access can remove groups and re-apply\n  them without re-creating\
    \ rules each time</li>\n<li>testing rules on a temporary security group and test\
    \ Instance before\n  adding the same rules to Security Groups already in use.\n\
    \  rules can appear in more than one Security Group</li>\n</ul>\n<h2>Applying\
    \ Security Groups</h2>\n<p>Security Groups are most conveniently applied before\
    \ Launching your\ninstance, multiple security groups can be selected.\nHowever\
    \ Security Groups can also be added or removed on running instances.</p>\n<p>Click\
    \ Launch then click the Security Groups field. The default group is\npre-selected</p>\n\
    <h2>Outgoing traffic</h2>\n<p>Outgoing traffic is not blocked on any port:  connections\
    \ that originate\nfrom your instance to the outside world, are not blocked by\
    \ Nectar\nOpenStack configuration</p>\n<blockquote>\n<p>Security Note</p>\n<p>Using\
    \ the Research Cloud creates a publicly accessible server (depending on\nSecurity\
    \ Groups) and therefore that machine can be exploited. All users must\nread &amp;\
    \ follow our <a href=\"../NeCTAR%20Fundamentals/Security%20Guidelines.md\">Security\
    \ Guidelines</a>.</p>\n</blockquote>"
  parent: 26
  sha1: 15ab2093bd4301131866f3bb7429dfc73ee75715
  title: Security Groups
51:
  freshdesk:
    fd_attributes:
      article:
        art_type: 1
        bool_01: null
        created_at: '2015-09-03T01:28:25-04:00'
        datetime_01: null
        delta: true
        desc_un_html: " Storage \n This section describes more advanced topics about\
          \ storage available for Virtual\nMachines in NecTAR Cloud. \n Ephemeral\
          \ storage \n Each virtual Machine you start on the NeCTAR cloud comes with\
          \ a certain amount\nof on-instance storage based on the flavour of your\
          \ Virtual Machine, which\nappear as two separate hard disks. \n Note: On\
          \ instance storage is reguarded as ephemeral, you should treat it as\nscratch\
          \ space and keep important data in either Volume or Object storage. \n Primary\
          \ Disk (10GB) \n Every Instance has a 10GB primary disk which is used for\
          \ the image you launch.\nThe Primary disk is copied in a snapshot, so anything\
          \ on this primary disk can\nbe backed up via snapshots. \n The name of this\
          \ device as seen from the instance is usually /dev/vda. \n The size of primary\
          \ disk can be vary for non-standard flavour Virtual Machines. \n Secondary\
          \ Disk, 30GB to 480GB \n This appears as a second hard disk in your Virtual\
          \ Machine, that you can format\nand use as you wish. For every CPU an instance\
          \ will get 30GB of additional\nsecondary storage. \n The size of secondary\
          \ disk can be vary for non-standard flavour Virtual\nMachines. \n Note:\
          \ The secondary disk is not copied or backed up via snapshots. \n The name\
          \ of this device as seen from the instance is usually /dev/vdb and some\n\
          Operating Systems will automatically format and mount the secondary disk.\
          \ \n For example, Ubuntu creates an ext3 partition and mounts it at /mnt\
          \ \n you can also format it directly, by executing: \n mkfs.ext4 /dev/vdb\
          \ \n Then you can mount to any directory you like, by executing:\nmount\
          \ /dev/vdb /mount point \n Backup of Secondary or Ephemeral drivers \n Data\
          \ on the secondary drive does not get saved in a snapshot, and requires\
          \ other\nstorage and techniques to make a backup. For example, rsync \n\
          \ Volume Storage \n Persistent volume storage can live outside your Virtual\
          \ Machine. It is appears\nas block storage which can be attached then accessed\
          \ and even booted from.\nThis is a storage volume that you can attach to\
          \ from within your Virtual Machine,\nread and write data, detach it, and\
          \ make it available to another Virtual Machine\n(in same availability zone).\
          \ Your data on a persistent volume is retained even\nwhen you terminate\
          \ your instance. Persistent Volumes offer a snapshot feature\nwhich can\
          \ be used to make convenient backups\n(uses some of your overall volume\
          \ quota). \n Volume storage are local services and only Virtual Machines\
          \ in the same\navailability zone can access it. \n The below guide shows\
          \ how to use a volume storage via command line are are more\nfor advanced\
          \ users. For a basic introduction and instruction for DashBoard,\nplease\
          \ refer to the storage introduction article in the Cloud Basic section.\
          \ \n There are API clients you can use for management of volumes: \n \n\
          \ \n The OpenStack python-cinderclient has a wide range of commands\n to\
          \ work with volume storage (create, delete, snapshot) \n \n \n The OpenStack\
          \ python-novaclient to attach and detach volumes to\n instances \n \n \n\
          \ Please refer to the relevant document for how to install the\nabove API\
          \ clients. \n Before you can use the python-cinderclient and python-novaclient\
          \ you need to be\nauthenticated to the NeCTAR cloud. The below shows the\
          \ instructions of how to\nget username/password and authenticated. \n \n\
          \ \n Login to NeCTAR Cloud Dashboard \n \n \n Click 'Access & Security'\
          \ \n \n \n On the 'Access & Security' page, click tab 'API Access' \n \n\
          \ \n Click button \"Download OpenStack RC File\" \n \n \n Save the file\
          \ into a directory \n \n \n Click the drop down list with your email on\
          \ the right top of page, then click\n Settings \n \n \n Click 'Reset Password'\
          \ and save the password appeared on the screen \n \n \n API normally requires\
          \ 4 variables to be set for authentication: \n \n auth URL \n username \n\
          \ project id or name (most clients can handle either) \n password \n \n\
          \ When using the script file you downloaded from NeCTAR Dashboard, these\n\
          varilabels are set by the script file and you can see these variables\n\
          if you open the file. Example: \n OS_AUTH_URL: https://keystone.rc.nectar.org.au:5000/v2.0/\n\
          OS_TENANT_NAME=my_science_project\nOS_TENANT_ID=sdfsdfsfwrwewer\nOS_USERNAME=clouduser@example.edu.au\n\
          OS_PASSWORD=XXXXXX \n The below instruction assumes you use Linux operating\
          \ system. \n Once you have obtained the authentication script and password,\
          \ you can execute\nthe script suing source file-name.sh. and type in the\
          \ password you\nobtained from Dashboard. \n Nova API Client \n To List volumes,\
          \ execute nova volume-list \n To View details of a volume, execute nova\
          \ volume-show volume-id, you\nneed to replace the volume-id with the id\
          \ you obtained from nova volume-list \n To Create volume, execute \n nova\
          \ volume-create --display-name name--display-description description size\
          \ \n Arguments:\ndisplay-name: volume name\ndisplay-description volume description\n\
          size: volume size in GB \n To Delete volume, execute\nnova volume-delete\
          \ <volume> \n Positional arguments:\n: Name or ID of the volume to delete\
          \ \n To Attach volume to a Virtual Machine, use command: \n nova volume-attach\
          \ <server> <volume> [<device>] \n Positional arguments: \n \n \n server:\
          \  Name or ID of server \n \n \n volume:  ID of the volume to attach \n\
          \ \n \n device:  Name of the device e.g. /dev/vdb. Use auto for auto assign\
          \ \n \n \n OpenStack currently ignores the specified device when attaching\
          \ volumes, you can\nspecify 'auto' to let OpenStack to decide.\nOpenStack\
          \ adds the volume as the lowest available device name: \n For a standard\
          \ flavor Virtual Machine (with a primary & secondary drive) the\nfirst volume\
          \ will be attached as /dev/vdc. \n You can always execute nova to see what\
          \ volume command available and\nexecute nova help volume command for help\
          \ of the specific volume\ncommand. \n Cinder API Client \n Cinder is an\
          \ OpenStack project to provide \"block storage as a service\" \n To List\
          \ volumes, execute cinder list \n To Show details of a volume, execute cinder\
          \ show <volume> \n Positional arguments: \n \n volume:  Name or ID of the\
          \ volume. \n \n To Create volume, execute\ncinder create --display-name\
          \ name --display-description description size \n Positional arguments: \n\
          \ \n \n display-name: volume name \n \n \n display-description volume description\
          \ \n \n \n size: volume size in GB \n \n \n You can also create a volume\
          \ based on an existing volume or image by adding the\nthe following 2 arguments\
          \ to cinder create command: \n --source-volid : Create volume from volume\
          \ id (Optional, Default=None) \n --image-id  Create volume from image id\
          \ (Optional, Default=None) \n To Delete volume, execute \n cinder delete\
          \ <volume> \n Positional arguments: \n \n volume: Name or ID of the volume\
          \ to delete \n \n To Rename volume, execute\ncinder rename <volume> [<display-name>]\
          \ \n Positional arguments: \n \n \n volume: Name or ID of the volume to\
          \ rename. \n \n \n display-name: New display-name for the volume. \n \n\
          \ \n Cinder also provides other volume related commands such as backup,\
          \ snapshot and\nvolume type. \n You can always execute cinder to see what\
          \ volume command available and\nexecute cinder help command for help of\
          \ the specific volume command. \n Notes:\nThere are more API clients avaible\
          \ to manage the Volument Storage, please refer\nto the releanve documents\
          \ or search through Internet. \n Client Python API \n Rather than running\
          \ the client API in command line, Client API can also be used\nwithin the\
          \ Python code. \n The nova and cinder Python API client can be installed\
          \ easily by using pip\ncommand. Please refer to the relevant document for\
          \ installation of pip. \n The below shows a sample python code of using\
          \ Nova Python API: \n from novaclient import client\nnova = client.Client(VERSION,\
          \ USERNAME, PASSWORD, PROJECT_NAME, AUTH_URL)\nnova.volumes.create(parameters)\n\
          nova.volumes.delete(parameters)\nnova.volumes.create_server_volume(parameters)\
          \ \n The VERSION parameter can be \"1.1\" or \"2\" \n create method is used\
          \ to create a new volume and it takes below parameters: \n \n \n size: \
          \ Size of volume in GB \n \n \n snapshot_id:  ID of the snapshot \n \n \n\
          \ display_name  Name of the volume \n \n \n display_description  Description\
          \ of the volume \n \n \n volume_type  Type of volume \n \n \n availability_zone\
          \  Availability Zone for volume \n \n \n imageRef  reference to an image\
          \ stored in glance \n \n \n Return type:\nVolume \n delete method is used\
          \ to delete a volume and it takes below arguments: \n \n volumen: The Volume\
          \ to delete \n \n create_server_volume is used to attach a volume to a Virtual\
          \ Machine and takes\nbelow arguments: \n \n \n server_id: The ID of the\
          \ server \n \n \n volume_id: The ID of the volume to attach \n \n \n device:\
          \ the device name \n \n \n To get username, password and other information,\
          \ you can refer back the\nauthentication script obtained from NeCTAR Cloud\
          \ Dashboard. \n To see more information please refer to Nova Python API\
          \ \n The below shows a sample python code of using Cinder Python API: \n\
          \ from cinderclient import client\ncinder = client.Client(VERSION, USERNAME,\
          \ PASSWORD, PROJECT_NAME, AUTH_URL)\ncinder.volumes.list()\ncinder.attach(parameters)\n\
          cinder.get(parameters) \n list method is used to list all volumes in the\
          \ project \n attach method is used to attach volume to an Virtual Machine\
          \ and it takes below\nparameters: \n \n \n volume: The :class:Volume (or\
          \ its ID) you would like to attach. \n \n \n instance_uuid: uuid of the\
          \ attaching instance. \n \n \n mountpoint: mountpoint on the attaching instance.\
          \ \n \n \n mode: the access mode. \n \n \n get method is to get details\
          \ of a volume and it takes below parameters: \n \n volume_id: The ID of\
          \ the volume to get \n \n To see more information and commands please refer\
          \ to\nCinder Python API \n Boot from Volume \n You can use the below command\
          \ to boot from volume: \n nova boot --flavor m1.small --key_name <mykey>\
          \ --block_device_mapping vda=<volume-id>:::0 <instance_name> \n Note:\n\
          Changing the '0' to '1' changes the delete_on_terminate option to delete\
          \ the\nvolume on instance termination \n Use Volume within Virtual Machine\
          \ \n A new Volume may not have a filesystem (depending on how it was created)\
          \ and you\nneed to create one before mounting. \n The exact mount command\
          \ syntax is dependent on the Virtual Machines' operating\nsystem and the\
          \ type of filesystem you require. \n You can use the below command to create\
          \ ext4 file system and assumes volume is\non vdc: \n sudo mkfs.ext4 /dev/vdc\
          \ \n Warning: creating new file system can cause data loss if a filesystem\
          \ already\nexists on the target volume. \n The exact mount command syntax\
          \ is dependent on the Virtual Machine' Operating\nSystem, so the advice\
          \ can only be generic. eg \n sudo mount /dev/vdc /mnt -t auto \n This will\
          \ mount the disk if the type of file-system can be guessed, otherwise\n\
          you may have to specify \"-t file-system-type\". \n If you did not create\
          \ and format the Volume then you might work out the\nfile-system type by\
          \ executing the below command: \n sudo parted -l \n Finally if you want\
          \ the filesystem auto-mounted at boot consider changing the\n\"/etc/fstab\"\
          \ (or equivalent for your OS) which specifies devices and mountpoints\n\
          and whether to mount them automatically or just be aware they exist and\
          \ allow\nsimplified mounting sytax such as: \n mount  /mnt\nor\nmount /device\
          \ \n Object Storage \n Object Storage is not a traditional file-system or\
          \ real-time data storage system.\nIt's designed for mostly static data that\
          \ can be retrieved, leveraged, and then\nupdated if necessary. It is independant\
          \ of a particular Virtual Machine and can\nbe updated and used without having\
          \ any Virtual Machine running. It is designed\nto be redundant and scalable.\
          \ \n Concept \n Think about that dataset comprised of 2GB files that you\
          \ read in and analyse\nmany times, but in general it doesn't change. Or\
          \ the images you want to use on\nthe cloud. Those are a couple examples\
          \ of what's perfect for Object Storage.\nObjects are written to multiple\
          \ hardware devices in the data cente to ensure\nintegrity, and great performance!\
          \ \n In general, the object store is great for data you write once and read\
          \ many\ntimes, but not suitable for applications like databases. It's the\
          \ safest place\nto put your data on the NeCTAR Research Cloud as multiple\
          \ redundant copies of\nyour data are made, and it has great performance.\
          \ You can access the object\nstore from anywhere on the Internet, and data\
          \ from Object Storage can be\ntransferred to and from your Virtual Machine\
          \ with a variety of http-capable\ntools. \n Swift \n Swift is the component\
          \ that provides object storage for OpenStack. With your\ncredentials and\
          \ via a URL you can request Swift to reserve & create storage\n(called containers\
          \ or buckets). Files (known as objects when stored in Swift)\ncan then be\
          \ uploaded and accessed similarly by your running Virtual Machines. \n The\
          \ NeCTAR implementation of Swift is geodistributed across Nodes of the\n\
          Research Cloud so that availability is not reliant on any one datacentre\
          \ or\nnetwork infrastructure. Each collection of Swift nodes/hardware is\
          \ known as a\nregion, which may or may not include a Swift proxy server\
          \ (the Internet facing\nand serving component of Swift). With some Swift\
          \ clients/APIs users can\nexplicitly chose which proxy to connect to, this\
          \ might be useful e.g. for\nspeeding up writes to object storage by choosing\
          \ the nearest proxy. Due to\nNeCTAR's Swift having multiple regions (some\
          \ of which are Node private) some\nclients/APIs require explicit configuration\
          \ of a default region, which should\nbe \"Melbourne\" for most users. \n\
          \ Swift does not provide encryption of the data it stores. If you have sensitive\n\
          data that requires encryption you must encrypt the data files before upload.\
          \ \n Swift Command Line Client \n The swift client is the command-line interface\
          \ (CLI) for the OpenStack Object\nAPI and its extensions. \n It is same\
          \ as nova client and cinder lcient, you need to authente before you can\n\
          use the it. Please refer the above instruction about how to get authenticated.\
          \ \n Please also refer above instruction for how to install the swift client.\
          \ \n To list all containers, execute: \n swift list \n To list all objects\
          \ under a container, execute: \n swift list [container] \n Positional arguments:\
          \ \n \n container: Name of container to list object in \n \n To create a\
          \ container, execute \n swift post [container] \n Positional arguments:\
          \ \n \n container: Name of container to create \n \n To delete a container\
          \ and a object within it, execute: \n swift delete [container][object] \n\
          \ Positional arguments:\ncontainer: Name of container to delete from\nobject:\
          \ Name of object ot delete. Specify multiple times for multiple objects\
          \ \n To upload files or directories to the given container, execute: \n\
          \ swift upload <container> <file_or_directory> \n Positional arguments:\
          \ \n \n \n container: Name of container to upload to \n \n \n file_or_directory:\
          \ Name of file or directory to uploaded. Specify multiple\n times for multiple\
          \ uploads \n \n \n To download objects from a given container, execute:\
          \ \n swift download <container> [object] \n Positional arguments: \n \n\
          \ \n container: Name of container to download from. To download a whole\
          \ account,\n omit this and specify --all \n \n \n object: Name of object\
          \ to download. Specify multiple times for multiple\n objects. Omit this\
          \ to download all objects from the container \n \n \n You can execute swift\
          \ to see what commands are avaiable and\nrun swift command -h find out more\
          \ information about a command. \n Client python API \n You can also use\
          \ swift python API to access and manage the object storage.\nThe below shows\
          \ the sample Pthon code: \n ```\nfrom swiftclient import client \n swift\
          \ = client.Connection(authurl=url, user=username, key=password,\ntenant_name=project_name,\
          \ auth_version='2') \n container_name=\"\"\nswift.get_container(container_name)\
          \ \n container_name=\"first container\"\nswift.put_container(container_name)\
          \ \n swift.delete_container(container_name) \n container_name = \"container\"\
          \nobject_name = \"object\"\nswift.get_object(container_name, object_name)\
          \ \n swift.put_object(container_name, object)\n``` \n Please refer to above\
          \ instruction about how to obtain authurl, user, password and\ntenant_name.\
          \ \n To get a container, use swift.get_container(container_name) method,\
          \ if you\nprovide a empty string to the container_name parameter, it returns\
          \ all\ncontainers in your project. \n To create a container, use swift.post_container(container_name)\
          \ method. \n To delete a container, use swift.delete_container(container_name)\
          \ method. \n To get a object, use swift.get_object(container_name, object_name)\
          \ method. \n To upload a object, use swift.put_object(container_name, object)\
          \ method. \n Please refer to the swift python cliet document for more\n\
          information. \n Storage Performance \n Storage performance is various based\
          \ on that the implementation of each node may\ntake different storage approach\
          \ and due to differences in hardware. For example: \n \n \n faster spindle\
          \ speeds \n \n \n SSD cache \n \n \n local storage on compute nodes \n \n\
          \ \n shared storage across compute nodes \n \n \n underline network infrastructure\
          \ \n \n \n The storage performance also depends largely on the choice of\
          \ file system and\nthe way how applications operates. \n The below tables\
          \ shows a comparison of various data storage features: \n\n\n\nStorage type\n\
          Saved in snapshot\nData integrity\nAccess\nBack up\n\n\n\n\nOn-instance\
          \ Primary Disk\nYes\nOk\nBlock\nNo\n\n\nOn-instance Secondary Disk\nNo\n\
          Ok\nBlock\nNo\n\n\nVolumes\nNo\nGood\nBlock\nNo\n\n\nObject Storage\nNo\n\
          Best\nHTTP\nNo\n\n\n\n Notes:\nData Integrity means how your data exposed\
          \ to hardware errors.\nAccess means how storage gets access through eith\
          \ Block level device (like\nattaching a hard drive to a computer) or HTTP\
          \ where you use access data\nvia HTTP protocol.\nBack up means whehter there\
          \ is a recoverable copy of a file available after a\nfile is updated, deleted\
          \ or damaged. \n Performance Tuning \n If you experience slow storage access,\
          \ some storage performance tuning can be\ndone inside the Virtual Machine.\
          \ \n \n Use the noop I/O scheduler if possibile. Other Virtual machine scheduler\n\
          \ conflicts with hypervisor scheduler. If the device boots with grub, this\
          \ can be\n added as the kernel command line option \n \n elevator=noop \n\
          \ \n Virtual Machine disk partitions should be correctly alligned to the\
          \ underlying\n filesystem, otherwise I/O performance will be degraded. A\
          \ quick way to check if\n your Virtual Machine's partition alligned is to\
          \ check with fdisk -lu.\n Each partition should start on sector divisible\
          \ by 8. \n \n After the performance tuning and you still have slow storage\
          \ access, you can\ncontact the NeCTAR help desk. "
        description: "<h1>Storage</h1>\n<p>This section describes more advanced topics\
          \ about storage available for Virtual\nMachines in NecTAR Cloud.</p>\n<h2>Ephemeral\
          \ storage</h2>\n<p>Each virtual Machine you start on the NeCTAR cloud comes\
          \ with a certain amount\nof on-instance storage based on the flavour of\
          \ your Virtual Machine, which\nappear as two separate hard disks.</p>\n\
          <p>Note: On instance storage is reguarded as ephemeral, you should treat\
          \ it as\nscratch space and keep important data in either Volume or Object\
          \ storage.</p>\n<h3>Primary Disk (10GB)</h3>\n<p>Every Instance has a 10GB\
          \ primary disk which is used for the image you launch.\nThe Primary disk\
          \ is copied in a snapshot, so anything on this primary disk can\nbe backed\
          \ up via snapshots.</p>\n<p>The name of this device as seen from the instance\
          \ is usually /dev/vda.</p>\n<p>The size of primary disk can be vary for\
          \ non-standard flavour Virtual Machines.</p>\n<h3>Secondary Disk, 30GB to\
          \ 480GB</h3>\n<p>This appears as a second hard disk in your Virtual Machine,\
          \ that you can format\nand use as you wish. For every CPU an instance will\
          \ get 30GB of additional\nsecondary storage.</p>\n<p>The size of secondary\
          \ disk can be vary for non-standard flavour Virtual\nMachines.</p>\n<p>Note:\
          \ The secondary disk is not copied or backed up via snapshots.</p>\n<p>The\
          \ name of this device as seen from the instance is usually /dev/vdb and\
          \ some\nOperating Systems will automatically format and mount the secondary\
          \ disk.</p>\n<p>For example, Ubuntu creates an ext3 partition and mounts\
          \ it at /mnt</p>\n<p>you can also format it directly, by executing:</p>\n\
          <p><code>mkfs.ext4 /dev/vdb</code></p>\n<p>Then you can mount to any directory\
          \ you like, by executing:\nmount /dev/vdb /mount point</p>\n<h3>Backup of\
          \ Secondary or Ephemeral drivers</h3>\n<p>Data on the secondary drive does\
          \ not get saved in a snapshot, and requires other\nstorage and techniques\
          \ to make a backup. For example, rsync</p>\n<h2>Volume Storage</h2>\n<p>Persistent\
          \ volume storage can live outside your Virtual Machine. It is appears\n\
          as block storage which can be attached then accessed and even booted from.\n\
          This is a storage volume that you can attach to from within your Virtual\
          \ Machine,\nread and write data, detach it, and make it available to another\
          \ Virtual Machine\n(in same availability zone). Your data on a persistent\
          \ volume is retained even\nwhen you terminate your instance. Persistent\
          \ Volumes offer a snapshot feature\nwhich can be used to make convenient\
          \ backups\n(uses some of your overall volume quota).</p>\n<p>Volume storage\
          \ are local services and only Virtual Machines in the same\navailability\
          \ zone can access it.</p>\n<p>The below guide shows how to use a volume\
          \ storage via command line are are more\nfor advanced users. For a basic\
          \ introduction and instruction for DashBoard,\nplease refer to the storage\
          \ introduction article in the Cloud Basic section.</p>\n<p>There are API\
          \ clients you can use for management of volumes:</p>\n<ul>\n<li>\n<p>The\
          \ OpenStack <a href=\"http://docs.openstack.org/developer/python-novaclient/man/nova.html\"\
          >python-cinderclient</a> has a wide range of commands\n to work with volume\
          \ storage (create, delete, snapshot)</p>\n</li>\n<li>\n<p>The OpenStack\
          \ <a href=\"http://docs.openstack.org/developer/python-novaclient/man/nova.html\"\
          >python-novaclient</a> to attach and detach volumes to\n instances</p>\n\
          </li>\n</ul>\n<p>Please refer to the relevant <a href=\"http://docs.openstack.org/user-guide/common/cli_install_openstack_command_line_clients.html\"\
          >document</a> for how to install the\nabove API clients.</p>\n<p>Before\
          \ you can use the python-cinderclient and python-novaclient you need to\
          \ be\nauthenticated to the NeCTAR cloud. The below shows the instructions\
          \ of how to\nget username/password and authenticated.</p>\n<ul>\n<li>\n\
          <p>Login to NeCTAR Cloud <a href=\"https://dashboard.rc.nectar.org.au\"\
          >Dashboard</a></p>\n</li>\n<li>\n<p>Click 'Access &amp; Security'</p>\n\
          </li>\n<li>\n<p>On the 'Access &amp; Security' page, click tab 'API Access'</p>\n\
          </li>\n<li>\n<p>Click button \"Download OpenStack RC File\"</p>\n</li>\n\
          <li>\n<p>Save the file into a directory</p>\n</li>\n<li>\n<p>Click the drop\
          \ down list with your email on the right top of page, then click\n Settings</p>\n\
          </li>\n<li>\n<p>Click 'Reset Password' and save the password appeared on\
          \ the screen</p>\n</li>\n</ul>\n<p>API normally requires 4 variables to\
          \ be set for authentication:</p>\n<ul>\n<li>auth URL</li>\n<li>username</li>\n\
          <li>project id or name (most clients can handle either)</li>\n<li>password</li>\n\
          </ul>\n<p>When using the script file you downloaded from NeCTAR Dashboard,\
          \ these\nvarilabels are set by the script file and you can see these variables\n\
          if you open the file. Example:</p>\n<p>OS_AUTH_URL: https://keystone.rc.nectar.org.au:5000/v2.0/\n\
          OS_TENANT_NAME=my_science_project\nOS_TENANT_ID=sdfsdfsfwrwewer\nOS_USERNAME=clouduser@example.edu.au\n\
          OS_PASSWORD=XXXXXX</p>\n<p>The below instruction assumes you use Linux operating\
          \ system.</p>\n<p>Once you have obtained the authentication script and password,\
          \ you can execute\nthe script suing <code>source file-name.sh</code>. and\
          \ type in the password you\nobtained from Dashboard.</p>\n<h3>Nova API Client</h3>\n\
          <p>To List volumes, execute <code>nova volume-list</code></p>\n<p>To View\
          \ details of a volume, execute <code>nova volume-show volume-id</code>,\
          \ you\nneed to replace the volume-id with the id you obtained from nova\
          \ volume-list</p>\n<p>To Create volume, execute</p>\n<p><code>nova volume-create\
          \ --display-name name--display-description description size</code></p>\n\
          <p>Arguments:\ndisplay-name: volume name\ndisplay-description volume description\n\
          size: volume size in GB</p>\n<p>To Delete volume, execute\n<code>nova volume-delete\
          \ &lt;volume&gt;</code></p>\n<p>Positional arguments:\n: Name or ID of the\
          \ volume to delete</p>\n<p>To Attach volume to a Virtual Machine, use command:</p>\n\
          <p><code>nova volume-attach &lt;server&gt; &lt;volume&gt; [&lt;device&gt;]</code></p>\n\
          <p>Positional arguments:</p>\n<ul>\n<li>\n<p>server:  Name or ID of server</p>\n\
          </li>\n<li>\n<p>volume:  ID of the volume to attach</p>\n</li>\n<li>\n<p>device:\
          \  Name of the device e.g. /dev/vdb. Use auto for auto assign</p>\n</li>\n\
          </ul>\n<p>OpenStack currently ignores the specified device when attaching\
          \ volumes, you can\nspecify 'auto' to let OpenStack to decide.\nOpenStack\
          \ adds the volume as the lowest available device name:</p>\n<p>For a standard\
          \ flavor Virtual Machine (with a primary &amp; secondary drive) the\nfirst\
          \ volume will be attached as /dev/vdc.</p>\n<p>You can always execute <code>nova</code>\
          \ to see what volume command available and\nexecute <code>nova help volume\
          \ command</code> for help of the specific volume\ncommand.</p>\n<h3>Cinder\
          \ API Client</h3>\n<p>Cinder is an OpenStack project to provide \"block\
          \ storage as a service\"</p>\n<p>To List volumes, execute <code>cinder list</code></p>\n\
          <p>To Show details of a volume, execute <code>cinder show &lt;volume&gt;</code></p>\n\
          <p>Positional arguments:</p>\n<ul>\n<li>volume:  Name or ID of the volume.</li>\n\
          </ul>\n<p>To Create volume, execute\n<code>cinder create --display-name\
          \ name --display-description description size</code></p>\n<p>Positional\
          \ arguments:</p>\n<ul>\n<li>\n<p>display-name: volume name</p>\n</li>\n\
          <li>\n<p>display-description volume description</p>\n</li>\n<li>\n<p>size:\
          \ volume size in GB</p>\n</li>\n</ul>\n<p>You can also create a volume based\
          \ on an existing volume or image by adding the\nthe following 2 arguments\
          \ to cinder create command:</p>\n<p>--source-volid : Create volume from\
          \ volume id (Optional, Default=None)</p>\n<p>--image-id  Create volume from\
          \ image id (Optional, Default=None)</p>\n<p>To Delete volume, execute</p>\n\
          <p><code>cinder delete &lt;volume&gt;</code></p>\n<p>Positional arguments:</p>\n\
          <ul>\n<li>volume: Name or ID of the volume to delete</li>\n</ul>\n<p>To\
          \ Rename volume, execute\n<code>cinder rename &lt;volume&gt; [&lt;display-name&gt;]</code></p>\n\
          <p>Positional arguments:</p>\n<ul>\n<li>\n<p>volume: Name or ID of the volume\
          \ to rename.</p>\n</li>\n<li>\n<p>display-name: New display-name for the\
          \ volume.</p>\n</li>\n</ul>\n<p>Cinder also provides other volume related\
          \ commands such as backup, snapshot and\nvolume type.</p>\n<p>You can always\
          \ execute <code>cinder</code> to see what volume command available and\n\
          execute <code>cinder help command</code> for help of the specific volume\
          \ command.</p>\n<p>Notes:\nThere are more API clients avaible to manage\
          \ the Volument Storage, please refer\nto the releanve documents or search\
          \ through Internet.</p>\n<h3>Client Python API</h3>\n<p>Rather than running\
          \ the client API in command line, Client API can also be used\nwithin the\
          \ Python code.</p>\n<p>The nova and cinder Python API client can be installed\
          \ easily by using pip\ncommand. Please refer to the relevant <a href=\"\
          https://pip.pypa.io/en/latest/installing.html\">document</a> for installation\
          \ of pip.</p>\n<p>The below shows a sample python code of using Nova Python\
          \ API:</p>\n<p><code>from novaclient import client\nnova = client.Client(VERSION,\
          \ USERNAME, PASSWORD, PROJECT_NAME, AUTH_URL)\nnova.volumes.create(parameters)\n\
          nova.volumes.delete(parameters)\nnova.volumes.create_server_volume(parameters)</code></p>\n\
          <p>The VERSION parameter can be \"1.1\" or \"2\"</p>\n<p>create method is\
          \ used to create a new volume and it takes below parameters:</p>\n<ul>\n\
          <li>\n<p>size:  Size of volume in GB</p>\n</li>\n<li>\n<p>snapshot_id: \
          \ ID of the snapshot</p>\n</li>\n<li>\n<p>display_name  Name of the volume</p>\n\
          </li>\n<li>\n<p>display_description  Description of the volume</p>\n</li>\n\
          <li>\n<p>volume_type  Type of volume</p>\n</li>\n<li>\n<p>availability_zone\
          \  Availability Zone for volume</p>\n</li>\n<li>\n<p>imageRef  reference\
          \ to an image stored in glance</p>\n</li>\n</ul>\n<p>Return type:\nVolume</p>\n\
          <p>delete method is used to delete a volume and it takes below arguments:</p>\n\
          <ul>\n<li>volumen: The Volume to delete</li>\n</ul>\n<p>create_server_volume\
          \ is used to attach a volume to a Virtual Machine and takes\nbelow arguments:</p>\n\
          <ul>\n<li>\n<p>server_id: The ID of the server</p>\n</li>\n<li>\n<p>volume_id:\
          \ The ID of the volume to attach</p>\n</li>\n<li>\n<p>device: the device\
          \ name</p>\n</li>\n</ul>\n<p>To get username, password and other information,\
          \ you can refer back the\nauthentication script obtained from NeCTAR Cloud\
          \ <a href=\"https://dashboard.rc.nectar.org.au\">Dashboard</a>.</p>\n<p>To\
          \ see more information please refer to <a href=\"http://docs.openstack.org/developer/python-novaclient/api.html\"\
          >Nova Python API</a></p>\n<p>The below shows a sample python code of using\
          \ Cinder Python API:</p>\n<p><code>from cinderclient import client\ncinder\
          \ = client.Client(VERSION, USERNAME, PASSWORD, PROJECT_NAME, AUTH_URL)\n\
          cinder.volumes.list()\ncinder.attach(parameters)\ncinder.get(parameters)</code></p>\n\
          <p>list method is used to list all volumes in the project</p>\n<p>attach\
          \ method is used to attach volume to an Virtual Machine and it takes below\n\
          parameters:</p>\n<ul>\n<li>\n<p>volume: The :class:<code>Volume</code> (or\
          \ its ID) you would like to attach.</p>\n</li>\n<li>\n<p>instance_uuid:\
          \ uuid of the attaching instance.</p>\n</li>\n<li>\n<p>mountpoint: mountpoint\
          \ on the attaching instance.</p>\n</li>\n<li>\n<p>mode: the access mode.</p>\n\
          </li>\n</ul>\n<p>get method is to get details of a volume and it takes below\
          \ parameters:</p>\n<ul>\n<li>volume_id: The ID of the volume to get</li>\n\
          </ul>\n<p>To see more information and commands please refer to\n<a href=\"\
          http://docs.openstack.org/developer/python-cinderclient/\">Cinder Python\
          \ API</a></p>\n<h3>Boot from Volume</h3>\n<p>You can use the below command\
          \ to boot from volume:</p>\n<p><code>nova boot --flavor m1.small --key_name\
          \ &lt;mykey&gt; --block_device_mapping vda=&lt;volume-id&gt;:::0 &lt;instance_name&gt;</code></p>\n\
          <p>Note:\nChanging the '0' to '1' changes the delete_on_terminate option\
          \ to delete the\nvolume on instance termination</p>\n<h3>Use Volume within\
          \ Virtual Machine</h3>\n<p>A new Volume may not have a filesystem (depending\
          \ on how it was created) and you\nneed to create one before mounting.</p>\n\
          <p>The exact mount command syntax is dependent on the Virtual Machines'\
          \ operating\nsystem and the type of filesystem you require.</p>\n<p>You\
          \ can use the below command to create ext4 file system and assumes volume\
          \ is\non vdc:</p>\n<p><code>sudo mkfs.ext4 /dev/vdc</code></p>\n<p>Warning:\
          \ creating new file system can cause data loss if a filesystem already\n\
          exists on the target volume.</p>\n<p>The exact mount command syntax is dependent\
          \ on the Virtual Machine' Operating\nSystem, so the advice can only be generic.\
          \ eg</p>\n<p><code>sudo mount /dev/vdc /mnt -t auto</code></p>\n<p>This\
          \ will mount the disk if the type of file-system can be guessed, otherwise\n\
          you may have to specify \"-t file-system-type\".</p>\n<p>If you did not\
          \ create and format the Volume then you might work out the\nfile-system\
          \ type by executing the below command:</p>\n<p><code>sudo parted -l</code></p>\n\
          <p>Finally if you want the filesystem auto-mounted at boot consider changing\
          \ the\n\"/etc/fstab\" (or equivalent for your OS) which specifies devices\
          \ and mountpoints\nand whether to mount them automatically or just be aware\
          \ they exist and allow\nsimplified mounting sytax such as:</p>\n<p><code>mount\
          \  /mnt\nor\nmount /device</code></p>\n<h2>Object Storage</h2>\n<p>Object\
          \ Storage is not a traditional file-system or real-time data storage system.\n\
          It's designed for mostly static data that can be retrieved, leveraged, and\
          \ then\nupdated if necessary. It is independant of a particular Virtual\
          \ Machine and can\nbe updated and used without having any Virtual Machine\
          \ running. It is designed\nto be redundant and scalable.</p>\n<h3>Concept</h3>\n\
          <p>Think about that dataset comprised of 2GB files that you read in and\
          \ analyse\nmany times, but in general it doesn't change. Or the images you\
          \ want to use on\nthe cloud. Those are a couple examples of what's perfect\
          \ for Object Storage.\nObjects are written to multiple hardware devices\
          \ in the data cente to ensure\nintegrity, and great performance!</p>\n<p>In\
          \ general, the object store is great for data you write once and read many\n\
          times, but not suitable for applications like databases. It's the safest\
          \ place\nto put your data on the NeCTAR Research Cloud as multiple redundant\
          \ copies of\nyour data are made, and it has great performance. You can access\
          \ the object\nstore from anywhere on the Internet, and data from Object\
          \ Storage can be\ntransferred to and from your Virtual Machine with a variety\
          \ of http-capable\ntools.</p>\n<h3>Swift</h3>\n<p>Swift is the component\
          \ that provides object storage for OpenStack. With your\ncredentials and\
          \ via a URL you can request Swift to reserve &amp; create storage\n(called\
          \ containers or buckets). Files (known as objects when stored in Swift)\n\
          can then be uploaded and accessed similarly by your running Virtual Machines.</p>\n\
          <p>The NeCTAR implementation of Swift is geodistributed across Nodes of\
          \ the\nResearch Cloud so that availability is not reliant on any one datacentre\
          \ or\nnetwork infrastructure. Each collection of Swift nodes/hardware is\
          \ known as a\nregion, which may or may not include a Swift proxy server\
          \ (the Internet facing\nand serving component of Swift). With some Swift\
          \ clients/APIs users can\nexplicitly chose which proxy to connect to, this\
          \ might be useful e.g. for\nspeeding up writes to object storage by choosing\
          \ the nearest proxy. Due to\nNeCTAR's Swift having multiple regions (some\
          \ of which are Node private) some\nclients/APIs require explicit configuration\
          \ of a default region, which should\nbe \"Melbourne\" for most users.</p>\n\
          <p>Swift does not provide encryption of the data it stores. If you have\
          \ sensitive\ndata that requires encryption you must encrypt the data files\
          \ before upload.</p>\n<h3>Swift Command Line Client</h3>\n<p>The swift client\
          \ is the command-line interface (CLI) for the OpenStack Object\nAPI and\
          \ its extensions.</p>\n<p>It is same as nova client and cinder lcient, you\
          \ need to authente before you can\nuse the it. Please refer the above instruction\
          \ about how to get authenticated.</p>\n<p>Please also refer above instruction\
          \ for how to install the swift client.</p>\n<p>To list all containers, execute:</p>\n\
          <p><code>swift list</code></p>\n<p>To list all objects under a container,\
          \ execute:</p>\n<p><code>swift list [container]</code></p>\n<p>Positional\
          \ arguments:</p>\n<ul>\n<li>container: Name of container to list object\
          \ in</li>\n</ul>\n<p>To create a container, execute</p>\n<p><code>swift\
          \ post [container]</code></p>\n<p>Positional arguments:</p>\n<ul>\n<li>container:\
          \ Name of container to create</li>\n</ul>\n<p>To delete a container and\
          \ a object within it, execute:</p>\n<p><code>swift delete [container][object]</code></p>\n\
          <p>Positional arguments:\ncontainer: Name of container to delete from\n\
          object: Name of object ot delete. Specify multiple times for multiple objects</p>\n\
          <p>To upload files or directories to the given container, execute:</p>\n\
          <p><code>swift upload &lt;container&gt; &lt;file_or_directory&gt;</code></p>\n\
          <p>Positional arguments:</p>\n<ul>\n<li>\n<p>container: Name of container\
          \ to upload to</p>\n</li>\n<li>\n<p>file_or_directory: Name of file or directory\
          \ to uploaded. Specify multiple\n times for multiple uploads</p>\n</li>\n\
          </ul>\n<p>To download objects from a given container, execute:</p>\n<p><code>swift\
          \ download &lt;container&gt; [object]</code></p>\n<p>Positional arguments:</p>\n\
          <ul>\n<li>\n<p>container: Name of container to download from. To download\
          \ a whole account,\n omit this and specify --all</p>\n</li>\n<li>\n<p>object:\
          \ Name of object to download. Specify multiple times for multiple\n objects.\
          \ Omit this to download all objects from the container</p>\n</li>\n</ul>\n\
          <p>You can execute <code>swift</code> to see what commands are avaiable\
          \ and\nrun <code>swift command -h</code> find out more information about\
          \ a command.</p>\n<h3>Client python API</h3>\n<p>You can also use swift\
          \ python API to access and manage the object storage.\nThe below shows the\
          \ sample Pthon code:</p>\n<p>```\nfrom swiftclient import client</p>\n<p>swift\
          \ = client.Connection(authurl=url, user=username, key=password,\ntenant_name=project_name,\
          \ auth_version='2')</p>\n<p>container_name=\"\"\nswift.get_container(container_name)</p>\n\
          <p>container_name=\"first container\"\nswift.put_container(container_name)</p>\n\
          <p>swift.delete_container(container_name)</p>\n<p>container_name = \"container\"\
          \nobject_name = \"object\"\nswift.get_object(container_name, object_name)</p>\n\
          <p>swift.put_object(container_name, object)\n```</p>\n<p>Please refer to\
          \ above instruction about how to obtain authurl, user, password and\ntenant_name.</p>\n\
          <p>To get a container, use swift.get_container(container_name) method, if\
          \ you\nprovide a empty string to the container_name parameter, it returns\
          \ all\ncontainers in your project.</p>\n<p>To create a container, use swift.post_container(container_name)\
          \ method.</p>\n<p>To delete a container, use swift.delete_container(container_name)\
          \ method.</p>\n<p>To get a object, use swift.get_object(container_name,\
          \ object_name) method.</p>\n<p>To upload a object, use swift.put_object(container_name,\
          \ object) method.</p>\n<p>Please refer to the <a href=\"http://docs.openstack.org/developer/python-swiftclient/index.html\"\
          >swift python cliet document</a> for more\ninformation.</p>\n<h2>Storage\
          \ Performance</h2>\n<p>Storage performance is various based on that the\
          \ implementation of each node may\ntake different storage approach and due\
          \ to differences in hardware. For example:</p>\n<ul>\n<li>\n<p>faster spindle\
          \ speeds</p>\n</li>\n<li>\n<p>SSD cache</p>\n</li>\n<li>\n<p>local storage\
          \ on compute nodes</p>\n</li>\n<li>\n<p>shared storage across compute nodes</p>\n\
          </li>\n<li>\n<p>underline network infrastructure</p>\n</li>\n</ul>\n<p>The\
          \ storage performance also depends largely on the choice of file system\
          \ and\nthe way how applications operates.</p>\n<p>The below tables shows\
          \ a comparison of various data storage features:</p>\n<table>\n<thead>\n\
          <tr>\n<th>Storage type</th>\n<th>Saved in snapshot</th>\n<th>Data integrity</th>\n\
          <th>Access</th>\n<th>Back up</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>On-instance\
          \ Primary Disk</td>\n<td>Yes</td>\n<td>Ok</td>\n<td>Block</td>\n<td>No</td>\n\
          </tr>\n<tr>\n<td>On-instance Secondary Disk</td>\n<td>No</td>\n<td>Ok</td>\n\
          <td>Block</td>\n<td>No</td>\n</tr>\n<tr>\n<td>Volumes</td>\n<td>No</td>\n\
          <td>Good</td>\n<td>Block</td>\n<td>No</td>\n</tr>\n<tr>\n<td>Object Storage</td>\n\
          <td>No</td>\n<td>Best</td>\n<td>HTTP</td>\n<td>No</td>\n</tr>\n</tbody>\n\
          </table>\n<p>Notes:\nData Integrity means how your data exposed to hardware\
          \ errors.\nAccess means how storage gets access through eith Block level\
          \ device (like\nattaching a hard drive to a computer) or HTTP where you\
          \ use access data\nvia HTTP protocol.\nBack up means whehter there is a\
          \ recoverable copy of a file available after a\nfile is updated, deleted\
          \ or damaged.</p>\n<h3>Performance Tuning</h3>\n<p>If you experience slow\
          \ storage access, some storage performance tuning can be\ndone inside the\
          \ Virtual Machine.</p>\n<ul>\n<li>Use the noop I/O scheduler if possibile.\
          \ Other Virtual machine scheduler\n conflicts with hypervisor scheduler.\
          \ If the device boots with grub, this can be\n added as the kernel command\
          \ line option</li>\n</ul>\n<p><code>elevator=noop</code></p>\n<ul>\n<li>Virtual\
          \ Machine disk partitions should be correctly alligned to the underlying\n\
          \ filesystem, otherwise I/O performance will be degraded. A quick way to\
          \ check if\n your Virtual Machine's partition alligned is to check with\
          \ <code>fdisk -lu</code>.\n Each partition should start on sector divisible\
          \ by 8.</li>\n</ul>\n<p>After the performance tuning and you still have\
          \ slow storage access, you can\ncontact the NeCTAR help desk.</p>"
        folder:
          category_id: 6000122278
          created_at: '2015-09-03T01:28:05-04:00'
          customer_folders: []
          description: Cloud Expert
          id: 6000190151
          is_default: false
          language_id: 6
          name: Cloud Expert
          parent_id: 6000190151
          position: 3
          updated_at: '2015-09-03T01:28:05-04:00'
          visibility: 1
        folder_id: 6000190151
        hits: 0
        id: 6000055388
        int_01: null
        int_02: null
        int_03: null
        language_id: 6
        modified_at: '2015-09-03T01:28:25-04:00'
        modified_by: null
        outdated: false
        parent_id: 6000055388
        position: 2
        seo_data: {}
        status: 2
        string_01: null
        string_02: null
        tags: []
        thumbs_down: 0
        thumbs_up: 0
        title: Storage
        updated_at: '2015-09-03T01:28:25-04:00'
        user_id: 6002464727
  html: "<h1>Storage</h1>\n<p>This section describes more advanced topics about storage\
    \ available for Virtual\nMachines in NecTAR Cloud.</p>\n<h2>Ephemeral storage</h2>\n\
    <p>Each virtual Machine you start on the NeCTAR cloud comes with a certain amount\n\
    of on-instance storage based on the flavour of your Virtual Machine, which\nappear\
    \ as two separate hard disks.</p>\n<p>Note: On instance storage is reguarded as\
    \ ephemeral, you should treat it as\nscratch space and keep important data in\
    \ either Volume or Object storage.</p>\n<h3>Primary Disk (10GB)</h3>\n<p>Every\
    \ Instance has a 10GB primary disk which is used for the image you launch.\nThe\
    \ Primary disk is copied in a snapshot, so anything on this primary disk can\n\
    be backed up via snapshots.</p>\n<p>The name of this device as seen from the instance\
    \ is usually /dev/vda.</p>\n<p>The size of primary disk can be vary for non-standard\
    \ flavour Virtual Machines.</p>\n<h3>Secondary Disk, 30GB to 480GB</h3>\n<p>This\
    \ appears as a second hard disk in your Virtual Machine, that you can format\n\
    and use as you wish. For every CPU an instance will get 30GB of additional\nsecondary\
    \ storage.</p>\n<p>The size of secondary disk can be vary for non-standard flavour\
    \ Virtual\nMachines.</p>\n<p>Note: The secondary disk is not copied or backed\
    \ up via snapshots.</p>\n<p>The name of this device as seen from the instance\
    \ is usually /dev/vdb and some\nOperating Systems will automatically format and\
    \ mount the secondary disk.</p>\n<p>For example, Ubuntu creates an ext3 partition\
    \ and mounts it at /mnt</p>\n<p>you can also format it directly, by executing:</p>\n\
    <p><code>mkfs.ext4 /dev/vdb</code></p>\n<p>Then you can mount to any directory\
    \ you like, by executing:\nmount /dev/vdb /mount point</p>\n<h3>Backup of Secondary\
    \ or Ephemeral drivers</h3>\n<p>Data on the secondary drive does not get saved\
    \ in a snapshot, and requires other\nstorage and techniques to make a backup.\
    \ For example, rsync</p>\n<h2>Volume Storage</h2>\n<p>Persistent volume storage\
    \ can live outside your Virtual Machine. It is appears\nas block storage which\
    \ can be attached then accessed and even booted from.\nThis is a storage volume\
    \ that you can attach to from within your Virtual Machine,\nread and write data,\
    \ detach it, and make it available to another Virtual Machine\n(in same availability\
    \ zone). Your data on a persistent volume is retained even\nwhen you terminate\
    \ your instance. Persistent Volumes offer a snapshot feature\nwhich can be used\
    \ to make convenient backups\n(uses some of your overall volume quota).</p>\n\
    <p>Volume storage are local services and only Virtual Machines in the same\navailability\
    \ zone can access it.</p>\n<p>The below guide shows how to use a volume storage\
    \ via command line are are more\nfor advanced users. For a basic introduction\
    \ and instruction for DashBoard,\nplease refer to the storage introduction article\
    \ in the Cloud Basic section.</p>\n<p>There are API clients you can use for management\
    \ of volumes:</p>\n<ul>\n<li>\n<p>The OpenStack <a href=\"http://docs.openstack.org/developer/python-novaclient/man/nova.html\"\
    >python-cinderclient</a> has a wide range of commands\n to work with volume storage\
    \ (create, delete, snapshot)</p>\n</li>\n<li>\n<p>The OpenStack <a href=\"http://docs.openstack.org/developer/python-novaclient/man/nova.html\"\
    >python-novaclient</a> to attach and detach volumes to\n instances</p>\n</li>\n\
    </ul>\n<p>Please refer to the relevant <a href=\"http://docs.openstack.org/user-guide/common/cli_install_openstack_command_line_clients.html\"\
    >document</a> for how to install the\nabove API clients.</p>\n<p>Before you can\
    \ use the python-cinderclient and python-novaclient you need to be\nauthenticated\
    \ to the NeCTAR cloud. The below shows the instructions of how to\nget username/password\
    \ and authenticated.</p>\n<ul>\n<li>\n<p>Login to NeCTAR Cloud <a href=\"https://dashboard.rc.nectar.org.au\"\
    >Dashboard</a></p>\n</li>\n<li>\n<p>Click 'Access &amp; Security'</p>\n</li>\n\
    <li>\n<p>On the 'Access &amp; Security' page, click tab 'API Access'</p>\n</li>\n\
    <li>\n<p>Click button \"Download OpenStack RC File\"</p>\n</li>\n<li>\n<p>Save\
    \ the file into a directory</p>\n</li>\n<li>\n<p>Click the drop down list with\
    \ your email on the right top of page, then click\n Settings</p>\n</li>\n<li>\n\
    <p>Click 'Reset Password' and save the password appeared on the screen</p>\n</li>\n\
    </ul>\n<p>API normally requires 4 variables to be set for authentication:</p>\n\
    <ul>\n<li>auth URL</li>\n<li>username</li>\n<li>project id or name (most clients\
    \ can handle either)</li>\n<li>password</li>\n</ul>\n<p>When using the script\
    \ file you downloaded from NeCTAR Dashboard, these\nvarilabels are set by the\
    \ script file and you can see these variables\nif you open the file. Example:</p>\n\
    <p>OS_AUTH_URL: https://keystone.rc.nectar.org.au:5000/v2.0/\nOS_TENANT_NAME=my_science_project\n\
    OS_TENANT_ID=sdfsdfsfwrwewer\nOS_USERNAME=clouduser@example.edu.au\nOS_PASSWORD=XXXXXX</p>\n\
    <p>The below instruction assumes you use Linux operating system.</p>\n<p>Once\
    \ you have obtained the authentication script and password, you can execute\n\
    the script suing <code>source file-name.sh</code>. and type in the password you\n\
    obtained from Dashboard.</p>\n<h3>Nova API Client</h3>\n<p>To List volumes, execute\
    \ <code>nova volume-list</code></p>\n<p>To View details of a volume, execute <code>nova\
    \ volume-show volume-id</code>, you\nneed to replace the volume-id with the id\
    \ you obtained from nova volume-list</p>\n<p>To Create volume, execute</p>\n<p><code>nova\
    \ volume-create --display-name name--display-description description size</code></p>\n\
    <p>Arguments:\ndisplay-name: volume name\ndisplay-description volume description\n\
    size: volume size in GB</p>\n<p>To Delete volume, execute\n<code>nova volume-delete\
    \ &lt;volume&gt;</code></p>\n<p>Positional arguments:\n<volume>: Name or ID of\
    \ the volume to delete</p>\n<p>To Attach volume to a Virtual Machine, use command:</p>\n\
    <p><code>nova volume-attach &lt;server&gt; &lt;volume&gt; [&lt;device&gt;]</code></p>\n\
    <p>Positional arguments:</p>\n<ul>\n<li>\n<p>server:  Name or ID of server</p>\n\
    </li>\n<li>\n<p>volume:  ID of the volume to attach</p>\n</li>\n<li>\n<p>device:\
    \  Name of the device e.g. /dev/vdb. Use auto for auto assign</p>\n</li>\n</ul>\n\
    <p>OpenStack currently ignores the specified device when attaching volumes, you\
    \ can\nspecify 'auto' to let OpenStack to decide.\nOpenStack adds the volume as\
    \ the lowest available device name:</p>\n<p>For a standard flavor Virtual Machine\
    \ (with a primary &amp; secondary drive) the\nfirst volume will be attached as\
    \ /dev/vdc.</p>\n<p>You can always execute <code>nova</code> to see what volume\
    \ command available and\nexecute <code>nova help volume command</code> for help\
    \ of the specific volume\ncommand.</p>\n<h3>Cinder API Client</h3>\n<p>Cinder\
    \ is an OpenStack project to provide \"block storage as a service\"</p>\n<p>To\
    \ List volumes, execute <code>cinder list</code></p>\n<p>To Show details of a\
    \ volume, execute <code>cinder show &lt;volume&gt;</code></p>\n<p>Positional arguments:</p>\n\
    <ul>\n<li>volume:  Name or ID of the volume.</li>\n</ul>\n<p>To Create volume,\
    \ execute\n<code>cinder create --display-name name --display-description description\
    \ size</code></p>\n<p>Positional arguments:</p>\n<ul>\n<li>\n<p>display-name:\
    \ volume name</p>\n</li>\n<li>\n<p>display-description volume description</p>\n\
    </li>\n<li>\n<p>size: volume size in GB</p>\n</li>\n</ul>\n<p>You can also create\
    \ a volume based on an existing volume or image by adding the\nthe following 2\
    \ arguments to cinder create command:</p>\n<p>--source-volid <source-volid>: Create\
    \ volume from volume id (Optional, Default=None)</p>\n<p>--image-id <image-id>\
    \ Create volume from image id (Optional, Default=None)</p>\n<p>To Delete volume,\
    \ execute</p>\n<p><code>cinder delete &lt;volume&gt;</code></p>\n<p>Positional\
    \ arguments:</p>\n<ul>\n<li>volume: Name or ID of the volume to delete</li>\n\
    </ul>\n<p>To Rename volume, execute\n<code>cinder rename &lt;volume&gt; [&lt;display-name&gt;]</code></p>\n\
    <p>Positional arguments:</p>\n<ul>\n<li>\n<p>volume: Name or ID of the volume\
    \ to rename.</p>\n</li>\n<li>\n<p>display-name: New display-name for the volume.</p>\n\
    </li>\n</ul>\n<p>Cinder also provides other volume related commands such as backup,\
    \ snapshot and\nvolume type.</p>\n<p>You can always execute <code>cinder</code>\
    \ to see what volume command available and\nexecute <code>cinder help command</code>\
    \ for help of the specific volume command.</p>\n<p>Notes:\nThere are more API\
    \ clients avaible to manage the Volument Storage, please refer\nto the releanve\
    \ documents or search through Internet.</p>\n<h3>Client Python API</h3>\n<p>Rather\
    \ than running the client API in command line, Client API can also be used\nwithin\
    \ the Python code.</p>\n<p>The nova and cinder Python API client can be installed\
    \ easily by using pip\ncommand. Please refer to the relevant <a href=\"https://pip.pypa.io/en/latest/installing.html\"\
    >document</a> for installation of pip.</p>\n<p>The below shows a sample python\
    \ code of using Nova Python API:</p>\n<p><code>from novaclient import client\n\
    nova = client.Client(VERSION, USERNAME, PASSWORD, PROJECT_NAME, AUTH_URL)\nnova.volumes.create(parameters)\n\
    nova.volumes.delete(parameters)\nnova.volumes.create_server_volume(parameters)</code></p>\n\
    <p>The VERSION parameter can be \"1.1\" or \"2\"</p>\n<p>create method is used\
    \ to create a new volume and it takes below parameters:</p>\n<ul>\n<li>\n<p>size:\
    \  Size of volume in GB</p>\n</li>\n<li>\n<p>snapshot_id:  ID of the snapshot</p>\n\
    </li>\n<li>\n<p>display_name  Name of the volume</p>\n</li>\n<li>\n<p>display_description\
    \  Description of the volume</p>\n</li>\n<li>\n<p>volume_type  Type of volume</p>\n\
    </li>\n<li>\n<p>availability_zone  Availability Zone for volume</p>\n</li>\n<li>\n\
    <p>imageRef  reference to an image stored in glance</p>\n</li>\n</ul>\n<p>Return\
    \ type:\nVolume</p>\n<p>delete method is used to delete a volume and it takes\
    \ below arguments:</p>\n<ul>\n<li>volumen: The Volume to delete</li>\n</ul>\n\
    <p>create_server_volume is used to attach a volume to a Virtual Machine and takes\n\
    below arguments:</p>\n<ul>\n<li>\n<p>server_id: The ID of the server</p>\n</li>\n\
    <li>\n<p>volume_id: The ID of the volume to attach</p>\n</li>\n<li>\n<p>device:\
    \ the device name</p>\n</li>\n</ul>\n<p>To get username, password and other information,\
    \ you can refer back the\nauthentication script obtained from NeCTAR Cloud <a\
    \ href=\"https://dashboard.rc.nectar.org.au\">Dashboard</a>.</p>\n<p>To see more\
    \ information please refer to <a href=\"http://docs.openstack.org/developer/python-novaclient/api.html\"\
    >Nova Python API</a></p>\n<p>The below shows a sample python code of using Cinder\
    \ Python API:</p>\n<p><code>from cinderclient import client\ncinder = client.Client(VERSION,\
    \ USERNAME, PASSWORD, PROJECT_NAME, AUTH_URL)\ncinder.volumes.list()\ncinder.attach(parameters)\n\
    cinder.get(parameters)</code></p>\n<p>list method is used to list all volumes\
    \ in the project</p>\n<p>attach method is used to attach volume to an Virtual\
    \ Machine and it takes below\nparameters:</p>\n<ul>\n<li>\n<p>volume: The :class:<code>Volume</code>\
    \ (or its ID) you would like to attach.</p>\n</li>\n<li>\n<p>instance_uuid: uuid\
    \ of the attaching instance.</p>\n</li>\n<li>\n<p>mountpoint: mountpoint on the\
    \ attaching instance.</p>\n</li>\n<li>\n<p>mode: the access mode.</p>\n</li>\n\
    </ul>\n<p>get method is to get details of a volume and it takes below parameters:</p>\n\
    <ul>\n<li>volume_id: The ID of the volume to get</li>\n</ul>\n<p>To see more information\
    \ and commands please refer to\n<a href=\"http://docs.openstack.org/developer/python-cinderclient/\"\
    >Cinder Python API</a></p>\n<h3>Boot from Volume</h3>\n<p>You can use the below\
    \ command to boot from volume:</p>\n<p><code>nova boot --flavor m1.small --key_name\
    \ &lt;mykey&gt; --block_device_mapping vda=&lt;volume-id&gt;:::0 &lt;instance_name&gt;</code></p>\n\
    <p>Note:\nChanging the '0' to '1' changes the delete_on_terminate option to delete\
    \ the\nvolume on instance termination</p>\n<h3>Use Volume within Virtual Machine</h3>\n\
    <p>A new Volume may not have a filesystem (depending on how it was created) and\
    \ you\nneed to create one before mounting.</p>\n<p>The exact mount command syntax\
    \ is dependent on the Virtual Machines' operating\nsystem and the type of filesystem\
    \ you require.</p>\n<p>You can use the below command to create ext4 file system\
    \ and assumes volume is\non vdc:</p>\n<p><code>sudo mkfs.ext4 /dev/vdc</code></p>\n\
    <p>Warning: creating new file system can cause data loss if a filesystem already\n\
    exists on the target volume.</p>\n<p>The exact mount command syntax is dependent\
    \ on the Virtual Machine' Operating\nSystem, so the advice can only be generic.\
    \ eg</p>\n<p><code>sudo mount /dev/vdc /mnt -t auto</code></p>\n<p>This will mount\
    \ the disk if the type of file-system can be guessed, otherwise\nyou may have\
    \ to specify \"-t file-system-type\".</p>\n<p>If you did not create and format\
    \ the Volume then you might work out the\nfile-system type by executing the below\
    \ command:</p>\n<p><code>sudo parted -l</code></p>\n<p>Finally if you want the\
    \ filesystem auto-mounted at boot consider changing the\n\"/etc/fstab\" (or equivalent\
    \ for your OS) which specifies devices and mountpoints\nand whether to mount them\
    \ automatically or just be aware they exist and allow\nsimplified mounting sytax\
    \ such as:</p>\n<p><code>mount  /mnt\nor\nmount /device</code></p>\n<h2>Object\
    \ Storage</h2>\n<p>Object Storage is not a traditional file-system or real-time\
    \ data storage system.\nIt's designed for mostly static data that can be retrieved,\
    \ leveraged, and then\nupdated if necessary. It is independant of a particular\
    \ Virtual Machine and can\nbe updated and used without having any Virtual Machine\
    \ running. It is designed\nto be redundant and scalable.</p>\n<h3>Concept</h3>\n\
    <p>Think about that dataset comprised of 2GB files that you read in and analyse\n\
    many times, but in general it doesn't change. Or the images you want to use on\n\
    the cloud. Those are a couple examples of what's perfect for Object Storage.\n\
    Objects are written to multiple hardware devices in the data cente to ensure\n\
    integrity, and great performance!</p>\n<p>In general, the object store is great\
    \ for data you write once and read many\ntimes, but not suitable for applications\
    \ like databases. It's the safest place\nto put your data on the NeCTAR Research\
    \ Cloud as multiple redundant copies of\nyour data are made, and it has great\
    \ performance. You can access the object\nstore from anywhere on the Internet,\
    \ and data from Object Storage can be\ntransferred to and from your Virtual Machine\
    \ with a variety of http-capable\ntools.</p>\n<h3>Swift</h3>\n<p>Swift is the\
    \ component that provides object storage for OpenStack. With your\ncredentials\
    \ and via a URL you can request Swift to reserve &amp; create storage\n(called\
    \ containers or buckets). Files (known as objects when stored in Swift)\ncan then\
    \ be uploaded and accessed similarly by your running Virtual Machines.</p>\n<p>The\
    \ NeCTAR implementation of Swift is geodistributed across Nodes of the\nResearch\
    \ Cloud so that availability is not reliant on any one datacentre or\nnetwork\
    \ infrastructure. Each collection of Swift nodes/hardware is known as a\nregion,\
    \ which may or may not include a Swift proxy server (the Internet facing\nand\
    \ serving component of Swift). With some Swift clients/APIs users can\nexplicitly\
    \ chose which proxy to connect to, this might be useful e.g. for\nspeeding up\
    \ writes to object storage by choosing the nearest proxy. Due to\nNeCTAR's Swift\
    \ having multiple regions (some of which are Node private) some\nclients/APIs\
    \ require explicit configuration of a default region, which should\nbe \"Melbourne\"\
    \ for most users.</p>\n<p>Swift does not provide encryption of the data it stores.\
    \ If you have sensitive\ndata that requires encryption you must encrypt the data\
    \ files before upload.</p>\n<h3>Swift Command Line Client</h3>\n<p>The swift client\
    \ is the command-line interface (CLI) for the OpenStack Object\nAPI and its extensions.</p>\n\
    <p>It is same as nova client and cinder lcient, you need to authente before you\
    \ can\nuse the it. Please refer the above instruction about how to get authenticated.</p>\n\
    <p>Please also refer above instruction for how to install the swift client.</p>\n\
    <p>To list all containers, execute:</p>\n<p><code>swift list</code></p>\n<p>To\
    \ list all objects under a container, execute:</p>\n<p><code>swift list [container]</code></p>\n\
    <p>Positional arguments:</p>\n<ul>\n<li>container: Name of container to list object\
    \ in</li>\n</ul>\n<p>To create a container, execute</p>\n<p><code>swift post [container]</code></p>\n\
    <p>Positional arguments:</p>\n<ul>\n<li>container: Name of container to create</li>\n\
    </ul>\n<p>To delete a container and a object within it, execute:</p>\n<p><code>swift\
    \ delete [container][object]</code></p>\n<p>Positional arguments:\ncontainer:\
    \ Name of container to delete from\nobject: Name of object ot delete. Specify\
    \ multiple times for multiple objects</p>\n<p>To upload files or directories to\
    \ the given container, execute:</p>\n<p><code>swift upload &lt;container&gt; &lt;file_or_directory&gt;</code></p>\n\
    <p>Positional arguments:</p>\n<ul>\n<li>\n<p>container: Name of container to upload\
    \ to</p>\n</li>\n<li>\n<p>file_or_directory: Name of file or directory to uploaded.\
    \ Specify multiple\n times for multiple uploads</p>\n</li>\n</ul>\n<p>To download\
    \ objects from a given container, execute:</p>\n<p><code>swift download &lt;container&gt;\
    \ [object]</code></p>\n<p>Positional arguments:</p>\n<ul>\n<li>\n<p>container:\
    \ Name of container to download from. To download a whole account,\n omit this\
    \ and specify --all</p>\n</li>\n<li>\n<p>object: Name of object to download. Specify\
    \ multiple times for multiple\n objects. Omit this to download all objects from\
    \ the container</p>\n</li>\n</ul>\n<p>You can execute <code>swift</code> to see\
    \ what commands are avaiable and\nrun <code>swift command -h</code> find out more\
    \ information about a command.</p>\n<h3>Client python API</h3>\n<p>You can also\
    \ use swift python API to access and manage the object storage.\nThe below shows\
    \ the sample Pthon code:</p>\n<p>```\nfrom swiftclient import client</p>\n<p>swift\
    \ = client.Connection(authurl=url, user=username, key=password,\ntenant_name=project_name,\
    \ auth_version='2')</p>\n<p>container_name=\"\"\nswift.get_container(container_name)</p>\n\
    <p>container_name=\"first container\"\nswift.put_container(container_name)</p>\n\
    <p>swift.delete_container(container_name)</p>\n<p>container_name = \"container\"\
    \nobject_name = \"object\"\nswift.get_object(container_name, object_name)</p>\n\
    <p>swift.put_object(container_name, object)\n```</p>\n<p>Please refer to above\
    \ instruction about how to obtain authurl, user, password and\ntenant_name.</p>\n\
    <p>To get a container, use swift.get_container(container_name) method, if you\n\
    provide a empty string to the container_name parameter, it returns all\ncontainers\
    \ in your project.</p>\n<p>To create a container, use swift.post_container(container_name)\
    \ method.</p>\n<p>To delete a container, use swift.delete_container(container_name)\
    \ method.</p>\n<p>To get a object, use swift.get_object(container_name, object_name)\
    \ method.</p>\n<p>To upload a object, use swift.put_object(container_name, object)\
    \ method.</p>\n<p>Please refer to the <a href=\"http://docs.openstack.org/developer/python-swiftclient/index.html\"\
    >swift python cliet document</a> for more\ninformation.</p>\n<h2>Storage Performance</h2>\n\
    <p>Storage performance is various based on that the implementation of each node\
    \ may\ntake different storage approach and due to differences in hardware. For\
    \ example:</p>\n<ul>\n<li>\n<p>faster spindle speeds</p>\n</li>\n<li>\n<p>SSD\
    \ cache</p>\n</li>\n<li>\n<p>local storage on compute nodes</p>\n</li>\n<li>\n\
    <p>shared storage across compute nodes</p>\n</li>\n<li>\n<p>underline network\
    \ infrastructure</p>\n</li>\n</ul>\n<p>The storage performance also depends largely\
    \ on the choice of file system and\nthe way how applications operates.</p>\n<p>The\
    \ below tables shows a comparison of various data storage features:</p>\n<table>\n\
    <thead>\n<tr>\n<th>Storage type</th>\n<th>Saved in snapshot</th>\n<th>Data integrity</th>\n\
    <th>Access</th>\n<th>Back up</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>On-instance\
    \ Primary Disk</td>\n<td>Yes</td>\n<td>Ok</td>\n<td>Block</td>\n<td>No</td>\n\
    </tr>\n<tr>\n<td>On-instance Secondary Disk</td>\n<td>No</td>\n<td>Ok</td>\n<td>Block</td>\n\
    <td>No</td>\n</tr>\n<tr>\n<td>Volumes</td>\n<td>No</td>\n<td>Good</td>\n<td>Block</td>\n\
    <td>No</td>\n</tr>\n<tr>\n<td>Object Storage</td>\n<td>No</td>\n<td>Best</td>\n\
    <td>HTTP</td>\n<td>No</td>\n</tr>\n</tbody>\n</table>\n<p>Notes:\nData Integrity\
    \ means how your data exposed to hardware errors.\nAccess means how storage gets\
    \ access through eith Block level device (like\nattaching a hard drive to a computer)\
    \ or HTTP where you use access data\nvia HTTP protocol.\nBack up means whehter\
    \ there is a recoverable copy of a file available after a\nfile is updated, deleted\
    \ or damaged.</p>\n<h3>Performance Tuning</h3>\n<p>If you experience slow storage\
    \ access, some storage performance tuning can be\ndone inside the Virtual Machine.</p>\n\
    <ul>\n<li>Use the noop I/O scheduler if possibile. Other Virtual machine scheduler\n\
    \ conflicts with hypervisor scheduler. If the device boots with grub, this can\
    \ be\n added as the kernel command line option</li>\n</ul>\n<p><code>elevator=noop</code></p>\n\
    <ul>\n<li>Virtual Machine disk partitions should be correctly alligned to the\
    \ underlying\n filesystem, otherwise I/O performance will be degraded. A quick\
    \ way to check if\n your Virtual Machine's partition alligned is to check with\
    \ <code>fdisk -lu</code>.\n Each partition should start on sector divisible by\
    \ 8.</li>\n</ul>\n<p>After the performance tuning and you still have slow storage\
    \ access, you can\ncontact the NeCTAR help desk.</p>"
  parent: 22
  sha1: 4ece6f2fb922e7e616059d26d592035337a1c221
  title: Storage
